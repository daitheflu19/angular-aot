{"version":3,"file":"bundle.min.js","sources":["../packages/platform-browser/src/dom/events/event_manager.ts","../packages/platform-browser/src/dom/shared_styles_host.ts","../packages/platform-browser/src/dom/dom_renderer.ts","../packages/platform-browser/src/dom/events/dom_events.ts","../packages/platform-browser/src/dom/events/hammer_gestures.ts","../packages/platform-browser/src/dom/events/key_events.ts","../packages/platform-browser/src/security/url_sanitizer.ts","../packages/platform-browser/src/security/html_sanitizer.ts","../packages/platform-browser/src/security/dom_sanitization_service.ts","../packages/platform-browser/src/browser.ts","../src/app/app.component.ts","../src/app/app.module.ts","../build-aot/ngfactory/src/app/app.component.ngfactory.ts","../packages/core/src/view/util.ts","../build-aot/ngfactory/src/app/app.module.ngfactory.ts","../src/main-aot.ts","../packages/common/src/directives/ng_switch.ts","../packages/common/src/directives/ng_plural.ts","../packages/common/src/directives/ng_style.ts","../packages/common/src/directives/ng_template_outlet.ts","../packages/common/src/directives/index.ts","../packages/common/src/pipes/async_pipe.ts","../packages/common/src/pipes/case_conversion_pipes.ts","../packages/common/src/pipes/intl.ts","../packages/common/src/pipes/number_pipe.ts","../packages/common/src/pipes/date_pipe.ts","../packages/common/src/pipes/i18n_plural_pipe.ts","../packages/common/src/pipes/i18n_select_pipe.ts","../packages/common/src/pipes/json_pipe.ts","../packages/common/src/pipes/slice_pipe.ts","../packages/common/src/pipes/index.ts","../packages/common/src/common_module.ts","../packages/platform-browser/src/browser/browser_adapter.ts","../packages/platform-browser/src/dom/dom_adapter.ts","../packages/platform-browser/src/browser/generic_browser_adapter.ts","../packages/platform-browser/src/browser/location/browser_platform_location.ts","../packages/platform-browser/src/browser/meta.ts","../packages/platform-browser/src/browser/server-transition.ts","../packages/platform-browser/src/browser/testability.ts","../packages/platform-browser/src/browser/title.ts","../packages/platform-browser/src/dom/debug/ng_probe.ts","../packages/core/src/change_detection/differs/default_keyvalue_differ.ts","../packages/core/src/change_detection/differs/iterable_differs.ts","../packages/core/src/change_detection/differs/keyvalue_differs.ts","../packages/core/src/change_detection/change_detection.ts","../packages/core/src/platform_core_providers.ts","../packages/core/src/security.ts","../packages/core/src/i18n/tokens.ts","../packages/core/src/view/types.ts","../packages/core/src/view/errors.ts","../packages/core/src/view/refs.ts","../packages/core/src/view/provider.ts","../packages/core/src/view/view.ts","../packages/core/src/view/services.ts","../packages/core/src/application_module.ts","../packages/common/src/location/platform_location.ts","../packages/common/src/location/location_strategy.ts","../packages/common/src/location/location.ts","../packages/common/src/location/hash_location_strategy.ts","../packages/common/src/location/path_location_strategy.ts","../packages/common/src/location/index.ts","../packages/common/src/localization.ts","../packages/common/src/directives/ng_class.ts","../packages/common/src/directives/ng_component_outlet.ts","../packages/common/src/directives/ng_for_of.ts","../packages/common/src/directives/ng_if.ts","../packages/core/src/zone/ng_zone.ts","../packages/core/src/testability/testability.ts","../packages/core/src/application_ref.ts","../packages/core/src/render/api.ts","../packages/core/src/linker/element_ref.ts","../packages/core/src/linker/query_list.ts","../packages/core/src/linker/system_js_ng_module_factory_loader.ts","../packages/core/src/linker/template_ref.ts","../packages/core/src/linker/view_container_ref.ts","../packages/core/src/linker/view_ref.ts","../packages/core/src/debug/debug_node.ts","../packages/core/src/change_detection/change_detection_util.ts","../packages/core/src/change_detection/differs/default_iterable_differ.ts","../node_modules/rxjs/src/Subscriber.ts","../node_modules/rxjs/src/util/toSubscriber.ts","../node_modules/rxjs/src/symbol/observable.ts","../node_modules/rxjs/src/Observable.ts","../node_modules/rxjs/src/observable/ScalarObservable.ts","../node_modules/rxjs/src/observable/EmptyObservable.ts","../node_modules/rxjs/src/util/isScheduler.ts","../node_modules/rxjs/src/observable/ArrayObservable.ts","../node_modules/rxjs/src/OuterSubscriber.ts","../node_modules/rxjs/src/util/isArrayLike.ts","../node_modules/rxjs/src/util/isPromise.ts","../node_modules/rxjs/src/symbol/iterator.ts","../node_modules/rxjs/src/InnerSubscriber.ts","../node_modules/rxjs/src/util/subscribeToResult.ts","../node_modules/rxjs/src/operator/mergeAll.ts","../node_modules/rxjs/src/operator/merge.ts","../node_modules/rxjs/src/observable/merge.ts","../node_modules/rxjs/src/util/ObjectUnsubscribedError.ts","../node_modules/rxjs/src/SubjectSubscription.ts","../node_modules/rxjs/src/Subject.ts","../node_modules/rxjs/src/observable/ConnectableObservable.ts","../node_modules/rxjs/src/operator/multicast.ts","../node_modules/rxjs/src/operator/share.ts","../packages/core/src/di/injection_token.ts","../packages/core/src/util.ts","../packages/core/src/util/decorators.ts","../packages/core/src/change_detection/constants.ts","../packages/core/src/metadata/di.ts","../packages/core/src/metadata/directives.ts","../packages/core/src/metadata/ng_module.ts","../packages/core/src/metadata/view.ts","../packages/core/src/version.ts","../packages/core/src/di/injector.ts","../packages/core/src/errors.ts","../packages/core/src/error_handler.ts","../packages/core/src/di/reflective_key.ts","../packages/core/src/type.ts","../packages/core/src/reflection/reflection_capabilities.ts","../packages/core/src/reflection/reflector.ts","../packages/core/src/reflection/reflection.ts","../packages/core/src/di/reflective_provider.ts","../packages/core/src/di/reflective_injector.ts","../packages/core/src/application_init.ts","../packages/core/src/application_tokens.ts","../packages/core/src/console.ts","../packages/core/src/linker/compiler.ts","../packages/core/src/linker/component_factory.ts","../packages/core/src/linker/component_factory_resolver.ts","../packages/core/src/profile/wtf_impl.ts","../packages/core/src/linker/ng_module_factory.ts","../packages/core/src/event_emitter.ts","../packages/core/src/view/text.ts","../packages/platform-browser/src/dom/dom_tokens.ts","../packages/platform-browser/src/security/style_sanitizer.ts","../build-aot/js/build-aot/ngfactory/src/app/ng:/D:/github/angular-aot/src/app/app.component.html","../build-aot/js/build-aot/ngfactory/src/app/ng:/D:/github/angular-aot/src/app/app.component.ts.AppComponent_Host.html","../node_modules/rxjs/src/util/tryCatch.ts","../node_modules/rxjs/src/util/root.ts","../node_modules/rxjs/src/util/isFunction.ts","../node_modules/rxjs/src/util/isArray.ts","../node_modules/rxjs/src/util/isObject.ts","../node_modules/rxjs/src/util/errorObject.ts","../node_modules/rxjs/src/util/UnsubscriptionError.ts","../node_modules/rxjs/src/Subscription.ts","../node_modules/rxjs/src/Observer.ts","../node_modules/rxjs/src/symbol/rxSubscriber.ts","../packages/core/src/di/forward_ref.ts","../packages/core/src/di/reflective_errors.ts","../packages/core/src/di.ts","../packages/core/src/util/lang.ts","../packages/core/src/zone.ts","../packages/core/src/view/element.ts","../packages/core/src/view/ng_content.ts","../packages/core/src/view/view_attach.ts","../packages/core/src/view/pure_expression.ts","../packages/core/src/view/query.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, InjectionToken, NgZone} from '@angular/core';\n\nimport {getDOM} from '../dom_adapter';\n/**\n * \\@stable\n */\nexport const EVENT_MANAGER_PLUGINS =\n    new InjectionToken<EventManagerPlugin[]>('EventManagerPlugins');\n/**\n * \\@stable\n */\nexport class EventManager {\nprivate _plugins: EventManagerPlugin[];\nprivate _eventNameToPlugin = new Map<string, EventManagerPlugin>();\n/**\n * @param {?} plugins\n * @param {?} _zone\n */\nconstructor( plugins: EventManagerPlugin[],\nprivate _zone: NgZone) {\n    plugins.forEach(p => p.manager = this);\n    this._plugins = plugins.slice().reverse();\n  }\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const /** @type {?} */ plugin = this._findPluginFor(eventName);\n    return plugin.addEventListener(element, eventName, handler);\n  }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddGlobalEventListener(target: string, eventName: string, handler: Function): Function {\n    const /** @type {?} */ plugin = this._findPluginFor(eventName);\n    return plugin.addGlobalEventListener(target, eventName, handler);\n  }\n/**\n * @return {?}\n */\ngetZone(): NgZone { return this._zone; }\n/**\n * \\@internal\n * @param {?} eventName\n * @return {?}\n */\n_findPluginFor(eventName: string): EventManagerPlugin {\n    const /** @type {?} */ plugin = this._eventNameToPlugin.get(eventName);\n    if (plugin) {\n      return plugin;\n    }\n\n    const /** @type {?} */ plugins = this._plugins;\n    for (let /** @type {?} */ i = 0; i < plugins.length; i++) {\n      const /** @type {?} */ plugin = plugins[i];\n      if (plugin.supports(eventName)) {\n        this._eventNameToPlugin.set(eventName, plugin);\n        return plugin;\n      }\n    }\n    throw new Error(`No event manager plugin found for event ${eventName}`);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Inject, args: [EVENT_MANAGER_PLUGINS, ] }, ]},\n{type: NgZone, },\n];\n}\n\nfunction EventManager_tsickle_Closure_declarations() {\n/** @type {?} */\nEventManager.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nEventManager.ctorParameters;\n/** @type {?} */\nEventManager.prototype._plugins;\n/** @type {?} */\nEventManager.prototype._eventNameToPlugin;\n/** @type {?} */\nEventManager.prototype._zone;\n}\n\n/**\n * @abstract\n */\nexport abstract class EventManagerPlugin {\n/**\n * @param {?} _doc\n */\nconstructor(private _doc: any) {}\n\n  manager: EventManager;\n/**\n * @abstract\n * @param {?} eventName\n * @return {?}\n */\nsupports(eventName: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function) {}\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddGlobalEventListener(element: string, eventName: string, handler: Function): Function {\n    const /** @type {?} */ target: HTMLElement = getDOM().getGlobalEventTarget(this._doc, element);\n    if (!target) {\n      throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n    }\n    return this.addEventListener(target, eventName, handler);\n  };\n}\n\nfunction EventManagerPlugin_tsickle_Closure_declarations() {\n/** @type {?} */\nEventManagerPlugin.prototype.manager;\n/** @type {?} */\nEventManagerPlugin.prototype._doc;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, OnDestroy} from '@angular/core';\nimport {getDOM} from './dom_adapter';\nimport {DOCUMENT} from './dom_tokens';\nexport class SharedStylesHost {\n/**\n * \\@internal\n */\nprotected _stylesSet = new Set<string>();\n/**\n * @param {?} styles\n * @return {?}\n */\naddStyles(styles: string[]): void {\n    const /** @type {?} */ additions = new Set<string>();\n    styles.forEach(style => {\n      if (!this._stylesSet.has(style)) {\n        this._stylesSet.add(style);\n        additions.add(style);\n      }\n    });\n    this.onStylesAdded(additions);\n  }\n/**\n * @param {?} additions\n * @return {?}\n */\nonStylesAdded(additions: Set<string>): void {}\n/**\n * @return {?}\n */\ngetAllStyles(): string[] { return Array.from(this._stylesSet); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SharedStylesHost_tsickle_Closure_declarations() {\n/** @type {?} */\nSharedStylesHost.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSharedStylesHost.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nSharedStylesHost.prototype._stylesSet;\n}\n\nexport class DomSharedStylesHost extends SharedStylesHost implements OnDestroy {\nprivate _hostNodes = new Set<Node>();\nprivate _styleNodes = new Set<Node>();\n/**\n * @param {?} _doc\n */\nconstructor(\nprivate _doc: any) {\n    super();\n    this._hostNodes.add(_doc.head);\n  }\n/**\n * @param {?} styles\n * @param {?} host\n * @return {?}\n */\nprivate _addStylesToHost(styles: Set<string>, host: Node): void {\n    styles.forEach((style: string) => {\n      const /** @type {?} */ styleEl = this._doc.createElement('style');\n      styleEl.textContent = style;\n      this._styleNodes.add(host.appendChild(styleEl));\n    });\n  }\n/**\n * @param {?} hostNode\n * @return {?}\n */\naddHost(hostNode: Node): void {\n    this._addStylesToHost(this._stylesSet, hostNode);\n    this._hostNodes.add(hostNode);\n  }\n/**\n * @param {?} hostNode\n * @return {?}\n */\nremoveHost(hostNode: Node): void { this._hostNodes.delete(hostNode); }\n/**\n * @param {?} additions\n * @return {?}\n */\nonStylesAdded(additions: Set<string>): void {\n    this._hostNodes.forEach(hostNode => this._addStylesToHost(additions, hostNode));\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void { this._styleNodes.forEach(styleNode => getDOM().remove(styleNode)); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction DomSharedStylesHost_tsickle_Closure_declarations() {\n/** @type {?} */\nDomSharedStylesHost.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDomSharedStylesHost.ctorParameters;\n/** @type {?} */\nDomSharedStylesHost.prototype._hostNodes;\n/** @type {?} */\nDomSharedStylesHost.prototype._styleNodes;\n/** @type {?} */\nDomSharedStylesHost.prototype._doc;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {APP_ID, Inject, Injectable, RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2, RootRenderer, ViewEncapsulation} from '@angular/core';\n\nimport {EventManager} from './events/event_manager';\nimport {DomSharedStylesHost} from './shared_styles_host';\n\nexport const /** @type {?} */ NAMESPACE_URIS: {[ns: string]: string} = {\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xml': 'http://www.w3.org/XML/1998/namespace'\n};\n\nconst /** @type {?} */ COMPONENT_REGEX = /%COMP%/g;\nexport const /** @type {?} */ COMPONENT_VARIABLE = '%COMP%';\nexport const /** @type {?} */ HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nexport const /** @type {?} */ CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * @param {?} componentShortId\n * @return {?}\n */\nexport function shimContentAttribute(componentShortId: string): string {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n/**\n * @param {?} componentShortId\n * @return {?}\n */\nexport function shimHostAttribute(componentShortId: string): string {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n/**\n * @param {?} compId\n * @param {?} styles\n * @param {?} target\n * @return {?}\n */\nexport function flattenStyles(\n    compId: string, styles: Array<any|any[]>, target: string[]): string[] {\n  for (let /** @type {?} */ i = 0; i < styles.length; i++) {\n    let /** @type {?} */ style = styles[i];\n\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n  return target;\n}\n/**\n * @param {?} eventHandler\n * @return {?}\n */\nfunction decoratePreventDefault(eventHandler: Function): Function {\n  return (event: any) => {\n    const /** @type {?} */ allowDefaultBehavior = eventHandler(event);\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n  };\n}\nexport class DomRendererFactory2 implements RendererFactory2 {\nprivate rendererByCompId = new Map<string, Renderer2>();\nprivate defaultRenderer: Renderer2;\n/**\n * @param {?} eventManager\n * @param {?} sharedStylesHost\n */\nconstructor(private eventManager: EventManager,\nprivate sharedStylesHost: DomSharedStylesHost) {\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  };\n/**\n * @param {?} element\n * @param {?} type\n * @return {?}\n */\ncreateRenderer(element: any, type: RendererType2): Renderer2 {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n    switch (type.encapsulation) {\n      case ViewEncapsulation.Emulated: {\n        let /** @type {?} */ renderer = this.rendererByCompId.get(type.id);\n        if (!renderer) {\n          renderer =\n              new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type);\n          this.rendererByCompId.set(type.id, renderer);\n        }\n        ( /** @type {?} */((<EmulatedEncapsulationDomRenderer2>renderer))).applyToHost(element);\n        return renderer;\n      }\n      case ViewEncapsulation.Native:\n        return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n      default: {\n        if (!this.rendererByCompId.has(type.id)) {\n          const /** @type {?} */ styles = flattenStyles(type.id, type.styles, []);\n          this.sharedStylesHost.addStyles(styles);\n          this.rendererByCompId.set(type.id, this.defaultRenderer);\n        }\n        return this.defaultRenderer;\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: EventManager, },\n{type: DomSharedStylesHost, },\n];\n}\n\nfunction DomRendererFactory2_tsickle_Closure_declarations() {\n/** @type {?} */\nDomRendererFactory2.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDomRendererFactory2.ctorParameters;\n/** @type {?} */\nDomRendererFactory2.prototype.rendererByCompId;\n/** @type {?} */\nDomRendererFactory2.prototype.defaultRenderer;\n/** @type {?} */\nDomRendererFactory2.prototype.eventManager;\n/** @type {?} */\nDomRendererFactory2.prototype.sharedStylesHost;\n}\n\nclass DefaultDomRenderer2 implements Renderer2 {\n  data: {[key: string]: any} = Object.create(null);\n/**\n * @param {?} eventManager\n */\nconstructor(private eventManager: EventManager) {}\n/**\n * @return {?}\n */\ndestroy(): void {}\n\n  destroyNode: null;\n/**\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string): any {\n    if (namespace) {\n      return document.createElementNS(NAMESPACE_URIS[namespace], name);\n    }\n\n    return document.createElement(name);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string): any { return document.createComment(value); }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string): any { return document.createTextNode(value); }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void { parent.appendChild(newChild); }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    if (parent) {\n      parent.insertBefore(newChild, refChild);\n    }\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any): any {\n    let /** @type {?} */ el: any = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n                                                       selectorOrNode;\n    if (!el) {\n      throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n    el.textContent = '';\n    return el;\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any { return node.parentNode; }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any { return node.nextSibling; }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string): void {\n    if (namespace) {\n      el.setAttributeNS(NAMESPACE_URIS[namespace], namespace + ':' + name, value);\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string): void {\n    if (namespace) {\n      el.removeAttributeNS(NAMESPACE_URIS[namespace], name);\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void { el.classList.add(name); }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void { el.classList.remove(name); }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.setProperty(\n          style, value, !!(flags & RendererStyleFlags2.Important) ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.removeProperty(style);\n    } else {\n      // IE requires '' instead of null\n      // see https://github.com/angular/angular/issues/7916\n      el.style[style] = '';\n    }\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void {\n    checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string): void { node.nodeValue = value; }\n/**\n * @param {?} target\n * @param {?} event\n * @param {?} callback\n * @return {?}\n */\nlisten(target: 'window'|'document'|'body'|any, event: string, callback: (event: any) => boolean):\n      () => void {\n    checkNoSyntheticProp(event, 'listener');\n    if (typeof target === 'string') {\n      return /** @type {?} */(( <() => void>this.eventManager.addGlobalEventListener(\n          target, event, decoratePreventDefault(callback))));\n    }\n    return /** @type {?} */(( /** @type {?} */(( <() => void>this.eventManager.addEventListener(\n               target, event, decoratePreventDefault(callback)))) as() => void));\n  }\n}\n\nfunction DefaultDomRenderer2_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultDomRenderer2.prototype.data;\n/** @type {?} */\nDefaultDomRenderer2.prototype.destroyNode;\n/** @type {?} */\nDefaultDomRenderer2.prototype.eventManager;\n}\n\n\nconst /** @type {?} */ AT_CHARCODE = '@'.charCodeAt(0);\n/**\n * @param {?} name\n * @param {?} nameKind\n * @return {?}\n */\nfunction checkNoSyntheticProp(name: string, nameKind: string) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(\n        `Found the synthetic ${nameKind} ${name}. Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.`);\n  }\n}\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\nprivate contentAttr: string;\nprivate hostAttr: string;\n/**\n * @param {?} eventManager\n * @param {?} sharedStylesHost\n * @param {?} component\n */\nconstructor(\n      eventManager: EventManager, sharedStylesHost: DomSharedStylesHost,\nprivate component: RendererType2) {\n    super(eventManager);\n    const styles = flattenStyles(component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n\n    this.contentAttr = shimContentAttribute(component.id);\n    this.hostAttr = shimHostAttribute(component.id);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\napplyToHost(element: any) { super.setAttribute(element, this.hostAttr, ''); }\n/**\n * @param {?} parent\n * @param {?} name\n * @return {?}\n */\ncreateElement(parent: any, name: string): Element {\n    const /** @type {?} */ el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n}\n\nfunction EmulatedEncapsulationDomRenderer2_tsickle_Closure_declarations() {\n/** @type {?} */\nEmulatedEncapsulationDomRenderer2.prototype.contentAttr;\n/** @type {?} */\nEmulatedEncapsulationDomRenderer2.prototype.hostAttr;\n/** @type {?} */\nEmulatedEncapsulationDomRenderer2.prototype.component;\n}\n\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\nprivate shadowRoot: any;\n/**\n * @param {?} eventManager\n * @param {?} sharedStylesHost\n * @param {?} hostEl\n * @param {?} component\n */\nconstructor(\n      eventManager: EventManager,\nprivate sharedStylesHost: DomSharedStylesHost,\nprivate hostEl: any,\nprivate component: RendererType2) {\n    super(eventManager);\n    this.shadowRoot = (hostEl as any).createShadowRoot();\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = flattenStyles(component.id, component.styles, []);\n    for (let i = 0; i < styles.length; i++) {\n      const styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nprivate nodeOrShadowRoot(node: any): any { return node === this.hostEl ? this.shadowRoot : node; }\n/**\n * @return {?}\n */\ndestroy() { this.sharedStylesHost.removeHost(this.shadowRoot); }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n}\n\nfunction ShadowDomRenderer_tsickle_Closure_declarations() {\n/** @type {?} */\nShadowDomRenderer.prototype.shadowRoot;\n/** @type {?} */\nShadowDomRenderer.prototype.sharedStylesHost;\n/** @type {?} */\nShadowDomRenderer.prototype.hostEl;\n/** @type {?} */\nShadowDomRenderer.prototype.component;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable} from '@angular/core';\n\nimport {DOCUMENT} from '../dom_tokens';\n\nimport {EventManagerPlugin} from './event_manager';\nexport class DomEventsPlugin extends EventManagerPlugin {\n/**\n * @param {?} doc\n */\nconstructor( doc: any) { super(doc); }\n/**\n * @param {?} eventName\n * @return {?}\n */\nsupports(eventName: string): boolean { return true; }\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    element.addEventListener(eventName, /** @type {?} */(( handler as any)), false);\n    return () => element.removeEventListener(eventName, /** @type {?} */(( handler as any)), false);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction DomEventsPlugin_tsickle_Closure_declarations() {\n/** @type {?} */\nDomEventsPlugin.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDomEventsPlugin.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, InjectionToken} from '@angular/core';\n\nimport {DOCUMENT} from '../dom_tokens';\n\nimport {EventManagerPlugin} from './event_manager';\n\nconst /** @type {?} */ EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true,\n};\n/**\n * A DI token that you can use to provide{\\@link HammerGestureConfig} to Angular. Use it to configure\n * Hammer gestures.\n * \n * \\@experimental\n */\nexport const HAMMER_GESTURE_CONFIG = new InjectionToken<HammerGestureConfig>('HammerGestureConfig');\n\nexport interface HammerInstance {\n  on(eventName: string, callback: Function): void;\n  off(eventName: string, callback: Function): void;\n}\n/**\n * \\@experimental\n */\nexport class HammerGestureConfig {\n  events: string[] = [];\n\n  overrides: {[key: string]: Object} = {};\n/**\n * @param {?} element\n * @return {?}\n */\nbuildHammer(element: HTMLElement): HammerInstance {\n    const /** @type {?} */ mc = new Hammer(element);\n\n    mc.get('pinch').set({enable: true});\n    mc.get('rotate').set({enable: true});\n\n    for (const /** @type {?} */ eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n\n    return mc;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction HammerGestureConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nHammerGestureConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHammerGestureConfig.ctorParameters;\n/** @type {?} */\nHammerGestureConfig.prototype.events;\n/** @type {?} */\nHammerGestureConfig.prototype.overrides;\n}\n\nexport class HammerGesturesPlugin extends EventManagerPlugin {\n/**\n * @param {?} doc\n * @param {?} _config\n */\nconstructor(\n       doc: any,\nprivate _config: HammerGestureConfig) {\n    super(doc);\n  }\n/**\n * @param {?} eventName\n * @return {?}\n */\nsupports(eventName: string): boolean {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n\n    if (!( /** @type {?} */((window as any))).Hammer) {\n      throw new Error(`Hammer.js is not loaded, can not bind ${eventName} event`);\n    }\n\n    return true;\n  }\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const /** @type {?} */ zone = this.manager.getZone();\n    eventName = eventName.toLowerCase();\n\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const /** @type {?} */ mc = this._config.buildHammer(element);\n      const /** @type {?} */ callback = function(eventObj: HammerInput) {\n        zone.runGuarded(function() { handler(eventObj); });\n      };\n      mc.on(eventName, callback);\n      return () => mc.off(eventName, callback);\n    });\n  }\n/**\n * @param {?} eventName\n * @return {?}\n */\nisCustomEvent(eventName: string): boolean { return this._config.events.indexOf(eventName) > -1; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n{type: HammerGestureConfig, decorators: [{ type: Inject, args: [HAMMER_GESTURE_CONFIG, ] }, ]},\n];\n}\n\nfunction HammerGesturesPlugin_tsickle_Closure_declarations() {\n/** @type {?} */\nHammerGesturesPlugin.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHammerGesturesPlugin.ctorParameters;\n/** @type {?} */\nHammerGesturesPlugin.prototype._config;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, NgZone} from '@angular/core';\n\nimport {getDOM} from '../dom_adapter';\nimport {DOCUMENT} from '../dom_tokens';\n\nimport {EventManagerPlugin} from './event_manager';\n\nconst /** @type {?} */ MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nconst /** @type {?} */ MODIFIER_KEY_GETTERS: {[key: string]: (event: KeyboardEvent) => boolean} = {\n  'alt': (event: KeyboardEvent) => event.altKey,\n  'control': (event: KeyboardEvent) => event.ctrlKey,\n  'meta': (event: KeyboardEvent) => event.metaKey,\n  'shift': (event: KeyboardEvent) => event.shiftKey\n};\n/**\n * \\@experimental\n */\nexport class KeyEventsPlugin extends EventManagerPlugin {\n/**\n * @param {?} doc\n */\nconstructor( doc: any) { super(doc); }\n/**\n * @param {?} eventName\n * @return {?}\n */\nsupports(eventName: string): boolean { return KeyEventsPlugin.parseEventName(eventName) != null; }\n/**\n * @param {?} element\n * @param {?} eventName\n * @param {?} handler\n * @return {?}\n */\naddEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\n    const /** @type {?} */ parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n\n    const /** @type {?} */ outsideHandler =\n        KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n\n    return this.manager.getZone().runOutsideAngular(() => {\n      return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n/**\n * @param {?} eventName\n * @return {?}\n */\nstatic parseEventName(eventName: string): {[key: string]: string} {\n    const /** @type {?} */ parts: string[] = eventName.toLowerCase().split('.');\n\n    const /** @type {?} */ domEventName = parts.shift();\n    if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n\n    const /** @type {?} */ key = KeyEventsPlugin._normalizeKey(parts.pop());\n\n    let /** @type {?} */ fullKey = '';\n    MODIFIER_KEYS.forEach(modifierName => {\n      const /** @type {?} */ index: number = parts.indexOf(modifierName);\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    }\n\n    const /** @type {?} */ result: {[k: string]: string} = {};\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nstatic getEventFullKey(event: KeyboardEvent): string {\n    let /** @type {?} */ fullKey = '';\n    let /** @type {?} */ key = getDOM().getEventKey(event);\n    key = key.toLowerCase();\n    if (key === ' ') {\n      key = 'space';  // for readability\n    } else if (key === '.') {\n      key = 'dot';  // because '.' is used as a separator in event names\n    }\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName != key) {\n        const /** @type {?} */ modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n        if (modifierGetter(event)) {\n          fullKey += modifierName + '.';\n        }\n      }\n    });\n    fullKey += key;\n    return fullKey;\n  }\n/**\n * @param {?} fullKey\n * @param {?} handler\n * @param {?} zone\n * @return {?}\n */\nstatic eventCallback(fullKey: any, handler: Function, zone: NgZone): Function {\n    return (event: any /** TODO #9100 */) => {\n      if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n/**\n * \\@internal\n * @param {?} keyName\n * @return {?}\n */\nstatic _normalizeKey(keyName: string): string {\n    // TODO: switch to a Map if the mapping grows too much\n    switch (keyName) {\n      case 'esc':\n        return 'escape';\n      default:\n        return keyName;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction KeyEventsPlugin_tsickle_Closure_declarations() {\n/** @type {?} */\nKeyEventsPlugin.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nKeyEventsPlugin.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {isDevMode} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\n\n\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nconst /** @type {?} */ SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n\n/* A pattern that matches safe srcset values */\nconst /** @type {?} */ SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nconst /** @type {?} */ DATA_URL_PATTERN =\n    /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n/**\n * @param {?} url\n * @return {?}\n */\nexport function sanitizeUrl(url: string): string {\n  url = String(url);\n  if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN)) return url;\n\n  if (isDevMode()) {\n    getDOM().log(`WARNING: sanitizing unsafe URL value ${url} (see http://g.co/ng/security#xss)`);\n  }\n\n  return 'unsafe:' + url;\n}\n/**\n * @param {?} srcset\n * @return {?}\n */\nexport function sanitizeSrcset(srcset: string): string {\n  srcset = String(srcset);\n  return srcset.split(',').map((srcset) => sanitizeUrl(srcset.trim())).join(', ');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {isDevMode} from '@angular/core';\n\nimport {DomAdapter, getDOM} from '../dom/dom_adapter';\n\nimport {sanitizeSrcset, sanitizeUrl} from './url_sanitizer';\n\n/** A <body> element that can be safely used to parse untrusted HTML. Lazily initialized below. */\nlet /** @type {?} */ inertElement: HTMLElement = null;\n/** Lazily initialized to make sure the DOM adapter gets set before use. */\nlet /** @type {?} */ DOM: DomAdapter = null;\n/**\n * Returns an HTML element that is guaranteed to not execute code when creating elements in it.\n * @return {?}\n */\nfunction getInertElement() {\n  if (inertElement) return inertElement;\n  DOM = getDOM();\n\n  // Prefer using <template> element if supported.\n  const /** @type {?} */ templateEl = DOM.createElement('template');\n  if ('content' in templateEl) return templateEl;\n\n  const /** @type {?} */ doc = DOM.createHtmlDocument();\n  inertElement = DOM.querySelector(doc, 'body');\n  if (inertElement == null) {\n    // usually there should be only one body element in the document, but IE doesn't have any, so we\n    // need to create one.\n    const /** @type {?} */ html = DOM.createElement('html', doc);\n    inertElement = DOM.createElement('body', doc);\n    DOM.appendChild(html, inertElement);\n    DOM.appendChild(doc, html);\n  }\n  return inertElement;\n}\n/**\n * @param {?} tags\n * @return {?}\n */\nfunction tagSet(tags: string): {[k: string]: boolean} {\n  const /** @type {?} */ res: {[k: string]: boolean} = {};\n  for (const /** @type {?} */ t of tags.split(',')) res[t] = true;\n  return res;\n}\n/**\n * @param {...?} sets\n * @return {?}\n */\nfunction merge(...sets: {[k: string]: boolean}[]): {[k: string]: boolean} {\n  const /** @type {?} */ res: {[k: string]: boolean} = {};\n  for (const /** @type {?} */ s of sets) {\n    for (const /** @type {?} */ v in s) {\n      if (s.hasOwnProperty(v)) res[v] = true;\n    }\n  }\n  return res;\n}\n\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nconst /** @type {?} */ VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nconst /** @type {?} */ OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nconst /** @type {?} */ OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nconst /** @type {?} */ OPTIONAL_END_TAG_ELEMENTS =\n    merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n\n// Safe Block Elements - HTML5\nconst /** @type {?} */ BLOCK_ELEMENTS = merge(\n    OPTIONAL_END_TAG_BLOCK_ELEMENTS,\n    tagSet(\n        'address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n\n// Inline Elements - HTML5\nconst /** @type {?} */ INLINE_ELEMENTS = merge(\n    OPTIONAL_END_TAG_INLINE_ELEMENTS,\n    tagSet(\n        'a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n\nconst /** @type {?} */ VALID_ELEMENTS =\n    merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n\n// Attributes that have href and hence need to be sanitized\nconst /** @type {?} */ URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n\n// Attributes that have special href set hence need to be sanitized\nconst /** @type {?} */ SRCSET_ATTRS = tagSet('srcset');\n\nconst /** @type {?} */ HTML_ATTRS = tagSet(\n    'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n\n// NB: This currently conciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\n\nconst /** @type {?} */ VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nclass SanitizingHtmlSerializer {\npublic sanitizedSomething = false;\nprivate buf: string[] = [];\n/**\n * @param {?} el\n * @return {?}\n */\nsanitizeChildren(el: Element): string {\n    // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n    // However this code never accesses properties off of `document` before deleting its contents\n    // again, so it shouldn't be vulnerable to DOM clobbering.\n    let /** @type {?} */ current: Node = el.firstChild;\n    while (current) {\n      if (DOM.isElementNode(current)) {\n        this.startElement( /** @type {?} */((current as Element)));\n      } else if (DOM.isTextNode(current)) {\n        this.chars(DOM.nodeValue(current));\n      } else {\n        // Strip non-element, non-text nodes.\n        this.sanitizedSomething = true;\n      }\n      if (DOM.firstChild(current)) {\n        current = DOM.firstChild(current);\n        continue;\n      }\n      while (current) {\n        // Leaving the element. Walk up and to the right, closing tags as we go.\n        if (DOM.isElementNode(current)) {\n          this.endElement( /** @type {?} */((current as Element)));\n        }\n\n        let /** @type {?} */ next = checkClobberedElement(current, DOM.nextSibling(current));\n\n        if (next) {\n          current = next;\n          break;\n        }\n\n        current = checkClobberedElement(current, DOM.parentElement(current));\n      }\n    }\n    return this.buf.join('');\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate startElement(element: Element) {\n    const /** @type {?} */ tagName = DOM.nodeName(element).toLowerCase();\n    if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n      this.sanitizedSomething = true;\n      return;\n    }\n    this.buf.push('<');\n    this.buf.push(tagName);\n    DOM.attributeMap(element).forEach((value: string, attrName: string) => {\n      const /** @type {?} */ lower = attrName.toLowerCase();\n      if (!VALID_ATTRS.hasOwnProperty(lower)) {\n        this.sanitizedSomething = true;\n        return;\n      }\n      // TODO(martinprobst): Special case image URIs for data:image/...\n      if (URI_ATTRS[lower]) value = sanitizeUrl(value);\n      if (SRCSET_ATTRS[lower]) value = sanitizeSrcset(value);\n      this.buf.push(' ');\n      this.buf.push(attrName);\n      this.buf.push('=\"');\n      this.buf.push(encodeEntities(value));\n      this.buf.push('\"');\n    });\n    this.buf.push('>');\n  }\n/**\n * @param {?} current\n * @return {?}\n */\nprivate endElement(current: Element) {\n    const /** @type {?} */ tagName = DOM.nodeName(current).toLowerCase();\n    if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n      this.buf.push('</');\n      this.buf.push(tagName);\n      this.buf.push('>');\n    }\n  }\n/**\n * @param {?} chars\n * @return {?}\n */\nprivate chars(chars: string) { this.buf.push(encodeEntities(chars)); }\n}\n\nfunction SanitizingHtmlSerializer_tsickle_Closure_declarations() {\n/** @type {?} */\nSanitizingHtmlSerializer.prototype.sanitizedSomething;\n/** @type {?} */\nSanitizingHtmlSerializer.prototype.buf;\n}\n\n/**\n * @param {?} node\n * @param {?} nextNode\n * @return {?}\n */\nfunction checkClobberedElement(node: Node, nextNode: Node): Node {\n  if (nextNode && DOM.contains(node, nextNode)) {\n    throw new Error(\n        `Failed to sanitize html because the element is clobbered: ${DOM.getOuterHTML(node)}`);\n  }\n  return nextNode;\n}\n\n// Regular Expressions for parsing tags and attributes\nconst /** @type {?} */ SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nconst /** @type {?} */ NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param {?} value\n * @return {?}\n */\nfunction encodeEntities(value: string) {\n  return value.replace(/&/g, '&amp;')\n      .replace(\n          SURROGATE_PAIR_REGEXP,\n          function(match: string) {\n            const /** @type {?} */ hi = match.charCodeAt(0);\n            const /** @type {?} */ low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n          })\n      .replace(\n          NON_ALPHANUMERIC_REGEXP,\n          function(match: string) { return '&#' + match.charCodeAt(0) + ';'; })\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n}\n/**\n * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo').\n * \n * This is undesirable since we don't want to allow any of these custom attributes. This method\n * strips them all.\n * @param {?} el\n * @return {?}\n */\nfunction stripCustomNsAttrs(el: Element) {\n  DOM.attributeMap(el).forEach((_, attrName) => {\n    if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n      DOM.removeAttribute(el, attrName);\n    }\n  });\n  for (const /** @type {?} */ n of DOM.childNodesAsList(el)) {\n    if (DOM.isElementNode(n)) stripCustomNsAttrs( /** @type {?} */((n as Element)));\n  }\n}\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n * @param {?} defaultDoc\n * @param {?} unsafeHtmlInput\n * @return {?}\n */\nexport function sanitizeHtml(defaultDoc: any, unsafeHtmlInput: string): string {\n  try {\n    const /** @type {?} */ containerEl = getInertElement();\n    // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n    let /** @type {?} */ unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n\n    // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n    // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n    let /** @type {?} */ mXSSAttempts = 5;\n    let /** @type {?} */ parsedHtml = unsafeHtml;\n\n    do {\n      if (mXSSAttempts === 0) {\n        throw new Error('Failed to sanitize html because the input is unstable');\n      }\n      mXSSAttempts--;\n\n      unsafeHtml = parsedHtml;\n      DOM.setInnerHTML(containerEl, unsafeHtml);\n      if (defaultDoc.documentMode) {\n        // strip custom-namespaced attributes on IE<=11\n        stripCustomNsAttrs(containerEl);\n      }\n      parsedHtml = DOM.getInnerHTML(containerEl);\n    } while (unsafeHtml !== parsedHtml);\n\n    const /** @type {?} */ sanitizer = new SanitizingHtmlSerializer();\n    const /** @type {?} */ safeHtml = sanitizer.sanitizeChildren(DOM.getTemplateContent(containerEl) || containerEl);\n\n    // Clear out the body element.\n    const /** @type {?} */ parent = DOM.getTemplateContent(containerEl) || containerEl;\n    for (const /** @type {?} */ child of DOM.childNodesAsList(parent)) {\n      DOM.removeChild(parent, child);\n    }\n\n    if (isDevMode() && sanitizer.sanitizedSomething) {\n      DOM.log('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n    }\n\n    return safeHtml;\n  } catch ( /** @type {?} */e) {\n    // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n    inertElement = null;\n    throw e;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, Sanitizer, SecurityContext} from '@angular/core';\n\nimport {DOCUMENT} from '../dom/dom_tokens';\n\nimport {sanitizeHtml} from './html_sanitizer';\nimport {sanitizeStyle} from './style_sanitizer';\nimport {sanitizeUrl} from './url_sanitizer';\n\nexport {SecurityContext};\n\n\n\n/**\n * Marker interface for a value that's safe to use in a particular context.\n *\n * @stable\n */\nexport interface SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as HTML.\n *\n * @stable\n */\nexport interface SafeHtml extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as style (CSS).\n *\n * @stable\n */\nexport interface SafeStyle extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as JavaScript.\n *\n * @stable\n */\nexport interface SafeScript extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL linking to a document.\n *\n * @stable\n */\nexport interface SafeUrl extends SafeValue {}\n\n/**\n * Marker interface for a value that's safe to use as a URL to load executable code from.\n *\n * @stable\n */\nexport interface SafeResourceUrl extends SafeValue {}\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n * \n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n * \n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n * \n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n * \n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n * \n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n * \n * \\@security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](http://g.co/ng/security).\n * \n * \\@stable\n * @abstract\n */\nexport abstract class DomSanitizer implements Sanitizer {\n/**\n * Sanitizes a value for use in the given SecurityContext.\n * \n * If value is trusted for the context, this method will unwrap the contained safe value and use\n * it directly. Otherwise, value will be sanitized to be safe in the given context, for example\n * by replacing URLs that have an unsafe protocol part (such as `javascript:`). The implementation\n * is responsible to make sure that the value can definitely be safely used in the given context.\n * @abstract\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\nsanitize(context: SecurityContext, value: any) {}\n/**\n * Bypass security and trust the given value to be safe HTML. Only use this when the bound HTML\n * is unsafe (e.g. contains `<script>` tags) and the code should be executed. The sanitizer will\n * leave safe HTML intact, so in most situations this method should not be used.\n * \n * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n * security risks!\n * @abstract\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustHtml(value: string) {}\n/**\n * Bypass security and trust the given value to be safe style value (CSS).\n * \n * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n * security risks!\n * @abstract\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustStyle(value: string) {}\n/**\n * Bypass security and trust the given value to be safe JavaScript.\n * \n * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n * security risks!\n * @abstract\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustScript(value: string) {}\n/**\n * Bypass security and trust the given value to be a safe style URL, i.e. a value that can be used\n * in hyperlinks or `<img src>`.\n * \n * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n * security risks!\n * @abstract\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustUrl(value: string) {}\n/**\n * Bypass security and trust the given value to be a safe resource URL, i.e. a location that may\n * be used to load executable code from, like `<script src>`, or `<iframe src>`.\n * \n * **WARNING:** calling this method with untrusted user data exposes your application to XSS\n * security risks!\n * @abstract\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustResourceUrl(value: string) {}\n}\nexport class DomSanitizerImpl extends DomSanitizer {\n/**\n * @param {?} _doc\n */\nconstructor(\nprivate _doc: any) { super(); }\n/**\n * @param {?} ctx\n * @param {?} value\n * @return {?}\n */\nsanitize(ctx: SecurityContext, value: any): string {\n    if (value == null) return null;\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value;\n      case SecurityContext.HTML:\n        if (value instanceof SafeHtmlImpl) return value.changingThisBreaksApplicationSecurity;\n        this.checkNotSafeValue(value, 'HTML');\n        return sanitizeHtml(this._doc, String(value));\n      case SecurityContext.STYLE:\n        if (value instanceof SafeStyleImpl) return value.changingThisBreaksApplicationSecurity;\n        this.checkNotSafeValue(value, 'Style');\n        return sanitizeStyle(value);\n      case SecurityContext.SCRIPT:\n        if (value instanceof SafeScriptImpl) return value.changingThisBreaksApplicationSecurity;\n        this.checkNotSafeValue(value, 'Script');\n        throw new Error('unsafe value used in a script context');\n      case SecurityContext.URL:\n        if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n          // Allow resource URLs in URL contexts, they are strictly more trusted.\n          return value.changingThisBreaksApplicationSecurity;\n        }\n        this.checkNotSafeValue(value, 'URL');\n        return sanitizeUrl(String(value));\n      case SecurityContext.RESOURCE_URL:\n        if (value instanceof SafeResourceUrlImpl) {\n          return value.changingThisBreaksApplicationSecurity;\n        }\n        this.checkNotSafeValue(value, 'ResourceURL');\n        throw new Error(\n            'unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n      default:\n        throw new Error(`Unexpected SecurityContext ${ctx} (see http://g.co/ng/security#xss)`);\n    }\n  }\n/**\n * @param {?} value\n * @param {?} expectedType\n * @return {?}\n */\nprivate checkNotSafeValue(value: any, expectedType: string) {\n    if (value instanceof SafeValueImpl) {\n      throw new Error(\n          `Required a safe ${expectedType}, got a ${value.getTypeName()} ` +\n          `(see http://g.co/ng/security#xss)`);\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustHtml(value: string): SafeHtml { return new SafeHtmlImpl(value); }\n/**\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustStyle(value: string): SafeStyle { return new SafeStyleImpl(value); }\n/**\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustScript(value: string): SafeScript { return new SafeScriptImpl(value); }\n/**\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustUrl(value: string): SafeUrl { return new SafeUrlImpl(value); }\n/**\n * @param {?} value\n * @return {?}\n */\nbypassSecurityTrustResourceUrl(value: string): SafeResourceUrl {\n    return new SafeResourceUrlImpl(value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction DomSanitizerImpl_tsickle_Closure_declarations() {\n/** @type {?} */\nDomSanitizerImpl.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDomSanitizerImpl.ctorParameters;\n/** @type {?} */\nDomSanitizerImpl.prototype._doc;\n}\n\n/**\n * @abstract\n */\nabstract class SafeValueImpl implements SafeValue {\n/**\n * @param {?} changingThisBreaksApplicationSecurity\n */\nconstructor(public changingThisBreaksApplicationSecurity: string) {\n    // empty\n  }\n/**\n * @abstract\n * @return {?}\n */\ngetTypeName() {}\n/**\n * @return {?}\n */\ntoString() {\n    return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity}` +\n        ` (see http://g.co/ng/security#xss)`;\n  }\n}\n\nfunction SafeValueImpl_tsickle_Closure_declarations() {\n/** @type {?} */\nSafeValueImpl.prototype.changingThisBreaksApplicationSecurity;\n}\n\nclass SafeHtmlImpl extends SafeValueImpl implements SafeHtml {\n/**\n * @return {?}\n */\ngetTypeName() { return 'HTML'; }\n}\nclass SafeStyleImpl extends SafeValueImpl implements SafeStyle {\n/**\n * @return {?}\n */\ngetTypeName() { return 'Style'; }\n}\nclass SafeScriptImpl extends SafeValueImpl implements SafeScript {\n/**\n * @return {?}\n */\ngetTypeName() { return 'Script'; }\n}\nclass SafeUrlImpl extends SafeValueImpl implements SafeUrl {\n/**\n * @return {?}\n */\ngetTypeName() { return 'URL'; }\n}\nclass SafeResourceUrlImpl extends SafeValueImpl implements SafeResourceUrl {\n/**\n * @return {?}\n */\ngetTypeName() { return 'ResourceURL'; }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {CommonModule, PlatformLocation, ɵPLATFORM_BROWSER_ID as PLATFORM_BROWSER_ID} from '@angular/common';\nimport {APP_ID, ApplicationModule, ErrorHandler, ModuleWithProviders, NgModule, Optional, PLATFORM_ID, PLATFORM_INITIALIZER, PlatformRef, Provider, RendererFactory2, RootRenderer, Sanitizer, SkipSelf, Testability, createPlatformFactory, platformCore} from '@angular/core';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {BrowserPlatformLocation} from './browser/location/browser_platform_location';\nimport {Meta} from './browser/meta';\nimport {SERVER_TRANSITION_PROVIDERS, TRANSITION_ID} from './browser/server-transition';\nimport {BrowserGetTestability} from './browser/testability';\nimport {Title} from './browser/title';\nimport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nimport {getDOM} from './dom/dom_adapter';\nimport {DomRendererFactory2} from './dom/dom_renderer';\nimport {DOCUMENT} from './dom/dom_tokens';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {HAMMER_GESTURE_CONFIG, HammerGestureConfig, HammerGesturesPlugin} from './dom/events/hammer_gestures';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\nimport {DomSanitizer, DomSanitizerImpl} from './security/dom_sanitization_service';\n\nexport const /** @type {?} */ INTERNAL_BROWSER_PLATFORM_PROVIDERS: Provider[] = [\n  {provide: PLATFORM_ID, useValue: PLATFORM_BROWSER_ID},\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: PlatformLocation, useClass: BrowserPlatformLocation},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n];\n/**\n * \\@security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * \\@experimental\n */\nexport const BROWSER_SANITIZATION_PROVIDERS: Array<any> = [\n  {provide: Sanitizer, useExisting: DomSanitizer},\n  {provide: DomSanitizer, useClass: DomSanitizerImpl},\n];\n/**\n * \\@stable\n */\nexport const platformBrowser: (extraProviders?: Provider[]) => PlatformRef =\n    createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * @return {?}\n */\nexport function initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n/**\n * @return {?}\n */\nexport function errorHandler(): ErrorHandler {\n  return new ErrorHandler();\n}\n/**\n * @return {?}\n */\nexport function _document(): any {\n  return document;\n}\n/**\n * The ng module for the browser.\n * \n * \\@stable\n */\nexport class BrowserModule {\n/**\n * @param {?} parentModule\n */\nconstructor(  parentModule: BrowserModule) {\n    if (parentModule) {\n      throw new Error(\n          `BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n/**\n * Configures a browser-based application to transition from a server-rendered app, if\n * one is present on the page. The specified parameters must include an application id,\n * which must match between the client and server applications.\n * \n * \\@experimental\n * @param {?} params\n * @return {?}\n */\nstatic withServerTransition(params: {appId: string}): ModuleWithProviders {\n    return {\n      ngModule: BrowserModule,\n      providers: [\n        {provide: APP_ID, useValue: params.appId},\n        {provide: TRANSITION_ID, useExisting: APP_ID},\n        SERVER_TRANSITION_PROVIDERS,\n      ],\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    BROWSER_SANITIZATION_PROVIDERS,\n    {provide: ErrorHandler, useFactory: errorHandler, deps: []},\n    {provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true},\n    {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true},\n    {provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true},\n    {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig},\n    DomRendererFactory2,\n    {provide: RendererFactory2, useExisting: DomRendererFactory2},\n    {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n    DomSharedStylesHost,\n    Testability,\n    EventManager,\n    ELEMENT_PROBE_PROVIDERS,\n    Meta,\n    Title,\n  ],\n  exports: [CommonModule, ApplicationModule]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: BrowserModule, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\n}\n\nfunction BrowserModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component } from '@angular/core';\r\nimport { VERSION } from '@angular/common';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'my-app',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  version:string;\r\n  showHeading = true;\r\n  heroes = ['Magneta', 'Bombasto', 'Magma', 'Tornado', 'Toto'];\r\n  constructor(){    \r\n    this.version = VERSION.full;\r\n    console.log(VERSION);\r\n  }\r\n\r\n  toggleHeading() {\r\n    debugger;\r\n    this.showHeading = !this.showHeading;\r\n  }\r\n}\r\n","import { NgModule }      from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent }  from './app.component';\r\n\r\n@NgModule({\r\n  imports:      [ BrowserModule ],\r\n  declarations: [ AppComponent ],\r\n  bootstrap:    [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties}\n */\n /* tslint:disable */\n\n\nimport * as import0 from '@angular/core';\nimport * as import1 from '../../../../src/app/app.component';\nimport * as import2 from '@angular/common';\nconst styles_AppComponent:any[] = ([] as any[]);\nexport const RenderType_AppComponent:import0.RendererType2 = import0.ɵcrt({\n  encapsulation: 2,\n  styles: styles_AppComponent,\n  data: {}\n}\n);\nfunction View_AppComponent_1(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'h1',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),\n    (l()(),import0.ɵted((null as any),['Hello Angular']))\n  ]\n  ,(null as any),(null as any));\n}\nfunction View_AppComponent_2(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'div',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),\n    (l()(),import0.ɵted((null as any),[\n      '',\n      ''\n    ]\n    ))\n  ]\n  ,(null as any),(ck,v) => {\n    const currVal_0:any = v.context.$implicit;\n    ck(v,1,0,currVal_0);\n  });\n}\nexport function View_AppComponent_0(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n      (l()(),import0.ɵeld(0,(null as any),(null as any),1,'button',([] as any[]),(null as any),[[\n        (null as any),\n        'click'\n      ]\n    ],(v,en,$event) => {\n      var ad:boolean = true;\n      var co:import1.AppComponent = v.component;\n      if (('click' === en)) {\n        const pd_0:any = ((<any>co.toggleHeading()) !== false);\n        ad = (pd_0 && ad);\n      }\n      return ad;\n    },(null as any),(null as any))),\n    (l()(),import0.ɵted((null as any),['Toggle Heading'])),\n    (l()(),import0.ɵted((null as any),['\\n'])),\n    (l()(),import0.ɵand(8388608,(null as any),(null as any),1,(null as any),View_AppComponent_1)),\n    import0.ɵdid(8192,(null as any),0,import2.NgIf,[\n      import0.ViewContainerRef,\n      import0.TemplateRef\n    ]\n      ,{ngIf: [\n        0,\n        'ngIf'\n      ]\n    },(null as any)),\n    (l()(),import0.ɵted((null as any),['\\n\\n'])),\n    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'h3',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),\n    (l()(),import0.ɵted((null as any),['List of Heroes'])),\n    (l()(),import0.ɵted((null as any),['\\n'])),\n    (l()(),import0.ɵand(8388608,(null as any),(null as any),1,(null as any),View_AppComponent_2)),\n    import0.ɵdid(401408,(null as any),0,import2.NgForOf,[\n      import0.ViewContainerRef,\n      import0.TemplateRef,\n      import0.IterableDiffers\n    ]\n      ,{ngForOf: [\n        0,\n        'ngForOf'\n      ]\n    },(null as any)),\n    (l()(),import0.ɵted((null as any),['\\n\\n'])),\n    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'p',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),\n    (l()(),import0.ɵted((null as any),[\n      'Angular version : ',\n      ' '\n    ]\n    ))\n  ]\n  ,(ck,v) => {\n    var co:import1.AppComponent = v.component;\n    const currVal_0:any = co.showHeading;\n    ck(v,4,0,currVal_0);\n    const currVal_1:any = co.heroes;\n    ck(v,10,0,currVal_1);\n  },(ck,v) => {\n    var co:import1.AppComponent = v.component;\n    const currVal_2:any = co.version;\n    ck(v,13,0,currVal_2);\n  });\n}\nfunction View_AppComponent_Host_0(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'my-app',([] as any[]),(null as any),(null as any),(null as any),View_AppComponent_0,RenderType_AppComponent)),\n    import0.ɵdid(24576,(null as any),0,import1.AppComponent,([] as any[]),(null as any),(null as any))\n  ]\n  ,(null as any),(null as any));\n}\nexport const AppComponentNgFactory:import0.ComponentFactory<import1.AppComponent> = import0.ɵccf('my-app',import1.AppComponent,View_AppComponent_Host_0,{},{},([] as any[]));\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiRDovZ2l0aHViL2FuZ3VsYXItYW90L3NyYy9hcHAvYXBwLmNvbXBvbmVudC5uZ2ZhY3RvcnkudHMiLCJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuZzovLy9EOi9naXRodWIvYW5ndWxhci1hb3Qvc3JjL2FwcC9hcHAuY29tcG9uZW50LnRzIiwibmc6Ly8vRDovZ2l0aHViL2FuZ3VsYXItYW90L3NyYy9hcHAvYXBwLmNvbXBvbmVudC5odG1sIiwibmc6Ly8vRDovZ2l0aHViL2FuZ3VsYXItYW90L3NyYy9hcHAvYXBwLmNvbXBvbmVudC50cy5BcHBDb21wb25lbnRfSG9zdC5odG1sIl0sInNvdXJjZXNDb250ZW50IjpbIiAiLCI8YnV0dG9uIChjbGljayk9XCJ0b2dnbGVIZWFkaW5nKClcIj5Ub2dnbGUgSGVhZGluZzwvYnV0dG9uPlxyXG48aDEgKm5nSWY9XCJzaG93SGVhZGluZ1wiPkhlbGxvIEFuZ3VsYXI8L2gxPlxyXG5cclxuPGgzPkxpc3Qgb2YgSGVyb2VzPC9oMz5cclxuPGRpdiAqbmdGb3I9XCJsZXQgaGVybyBvZiBoZXJvZXNcIj57e2hlcm99fTwvZGl2PlxyXG5cclxuPHA+QW5ndWxhciB2ZXJzaW9uIDoge3t2ZXJzaW9ufX0gPC9wPiIsIjxteS1hcHA+PC9teS1hcHA+Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUNDQTtJQUF3Qjs7Ozs7O0lBR3hCO0lBQWlDO01BQUE7TUFBQTtJQUFBO0lBQUE7OztJQUFBO0lBQUE7Ozs7O01BSmpDO1FBQUE7UUFBQTtNQUFBO0lBQUE7TUFBQTtNQUFBO01BQVE7UUFBQTtRQUFBO01BQUE7TUFBUjtJQUFBO0lBQWtDO0lBQXVCO0lBQ3pEO2dCQUFBOzs7SUFBQTtPQUFBO1FBQUE7UUFBQTtNQUFBO0lBQUE7SUFBMEM7SUFFMUM7SUFBSTtJQUFtQjtJQUN2QjtnQkFBQTs7OztJQUFBO09BQUE7UUFBQTtRQUFBO01BQUE7SUFBQTtJQUErQztJQUUvQztJQUFHO01BQUE7TUFBQTtJQUFBO0lBQUE7Ozs7SUFMQztJQUFKLFNBQUksU0FBSjtJQUdLO0lBQUwsVUFBSyxTQUFMOzs7SUFFRztJQUFBOzs7OztJQ05IO2dCQUFBOzs7OyJ9\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {WrappedValue, devModeEqual} from '../change_detection/change_detection';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererType2} from '../render/api';\nimport {looseIdentical, stringify} from '../util';\n\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {BindingDef, BindingFlags, ElementData, NodeDef, NodeFlags, QueryValueType, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewState, asElementData, asTextData} from './types';\n\nexport const /** @type {?} */ NOOP: any = () => {};\n\nconst /** @type {?} */ _tokenKeyCache = new Map<any, string>();\n/**\n * @param {?} token\n * @return {?}\n */\nexport function tokenKey(token: any): string {\n  let /** @type {?} */ key = _tokenKeyCache.get(token);\n  if (!key) {\n    key = stringify(token) + '_' + _tokenKeyCache.size;\n    _tokenKeyCache.set(token, key);\n  }\n  return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function unwrapValue(view: ViewData, nodeIdx: number, bindingIdx: number, value: any): any {\n  if (value instanceof WrappedValue) {\n    value = value.wrapped;\n    let /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n    let /** @type {?} */ oldValue = view.oldValues[globalBindingIdx];\n    if (oldValue instanceof WrappedValue) {\n      oldValue = oldValue.wrapped;\n    }\n    view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n  }\n  return value;\n}\n\nconst /** @type {?} */ UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nconst /** @type {?} */ EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nexport function createRendererType2(values: {\n  styles: (string | any[])[],\n  encapsulation: ViewEncapsulation,\n  data: {[kind: string]: any[]}\n}): RendererType2 {\n  return {\n    id: UNDEFINED_RENDERER_TYPE_ID,\n    styles: values.styles,\n    encapsulation: values.encapsulation,\n    data: values.data\n  };\n}\n\nlet /** @type {?} */ _renderCompCount = 0;\n/**\n * @param {?} type\n * @return {?}\n */\nexport function resolveRendererType2(type: RendererType2): RendererType2 {\n  if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n    // first time we see this RendererType2. Initialize it...\n    const /** @type {?} */ isFilled =\n        ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n         type.styles.length || Object.keys(type.data).length);\n    if (isFilled) {\n      type.id = `c${_renderCompCount++}`;\n    } else {\n      type.id = EMPTY_RENDERER_TYPE_ID;\n    }\n  }\n  if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n    type = null;\n  }\n  return type;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  const /** @type {?} */ oldValues = view.oldValues;\n  if ((view.state & ViewState.FirstCheck) ||\n      !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n    return true;\n  }\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkAndUpdateBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  if (checkBinding(view, def, bindingIdx, value)) {\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return true;\n  }\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nexport function checkBindingNoChanges(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  const /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n  if ((view.state & ViewState.FirstCheck) || !devModeEqual(oldValue, value)) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, def.index), oldValue, value,\n        (view.state & ViewState.FirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function markParentViewsForCheck(view: ViewData) {\n  let /** @type {?} */ currView = view;\n  while (currView) {\n    if (currView.def.flags & ViewFlags.OnPush) {\n      currView.state |= ViewState.ChecksEnabled;\n    }\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nexport function dispatchEvent(\n    view: ViewData, nodeIndex: number, eventName: string, event: any): boolean {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  const /** @type {?} */ startView =\n      nodeDef.flags & NodeFlags.ComponentView ? asElementData(view, nodeIndex).componentView : view;\n  markParentViewsForCheck(startView);\n  return Services.handleEvent(view, nodeIndex, eventName, event);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function declaredViewContainer(view: ViewData): ElementData {\n  if (view.parent) {\n    const /** @type {?} */ parentView = view.parent;\n    return asElementData(parentView, view.parentNodeDef.index);\n  }\n  return undefined;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nexport function viewParentEl(view: ViewData): NodeDef {\n  const /** @type {?} */ parentView = view.parent;\n  if (parentView) {\n    return view.parentNodeDef.parent;\n  } else {\n    return null;\n  }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function renderNode(view: ViewData, def: NodeDef): any {\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return asElementData(view, def.index).renderElement;\n    case NodeFlags.TypeText:\n      return asTextData(view, def.index).renderText;\n  }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nexport function elementEventFullName(target: string, name: string): string {\n  return target ? `${target}:${name}` : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isComponentView(view: ViewData): boolean {\n  return !!view.parent && !!(view.parentNodeDef.flags & NodeFlags.Component);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function isEmbeddedView(view: ViewData): boolean {\n  return !!view.parent && !(view.parentNodeDef.flags & NodeFlags.Component);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nexport function filterQueryId(queryId: number): number {\n  return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nexport function splitMatchedQueriesDsl(matchedQueriesDsl: [string | number, QueryValueType][]): {\n  matchedQueries: {[queryId: string]: QueryValueType},\n  references: {[refId: string]: QueryValueType},\n  matchedQueryIds: number\n} {\n  const /** @type {?} */ matchedQueries: {[queryId: string]: QueryValueType} = {};\n  let /** @type {?} */ matchedQueryIds = 0;\n  const /** @type {?} */ references: {[refId: string]: QueryValueType} = {};\n  if (matchedQueriesDsl) {\n    matchedQueriesDsl.forEach(([queryId, valueType]) => {\n      if (typeof queryId === 'number') {\n        matchedQueries[queryId] = valueType;\n        matchedQueryIds |= filterQueryId(queryId);\n      } else {\n        references[queryId] = valueType;\n      }\n    });\n  }\n  return {matchedQueries, references, matchedQueryIds};\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function getParentRenderElement(view: ViewData, renderHost: any, def: NodeDef): any {\n  let /** @type {?} */ renderParent = def.renderParent;\n  if (renderParent) {\n    if ((renderParent.flags & NodeFlags.TypeElement) === 0 ||\n        (renderParent.flags & NodeFlags.ComponentView) === 0 ||\n        (renderParent.element.componentRendererType &&\n         renderParent.element.componentRendererType.encapsulation === ViewEncapsulation.Native)) {\n      // only children of non components, or children of components with native encapsulation should\n      // be attached.\n      return asElementData(view, def.renderParent.index).renderElement;\n    }\n  } else {\n    return renderHost;\n  }\n}\n\nconst /** @type {?} */ VIEW_DEFINITION_CACHE = new WeakMap<any, ViewDefinition>();\n/**\n * @param {?} factory\n * @return {?}\n */\nexport function resolveViewDefinition(factory: ViewDefinitionFactory): ViewDefinition {\n  let /** @type {?} */ value: ViewDefinition = VIEW_DEFINITION_CACHE.get(factory);\n  if (!value) {\n    value = factory(() => NOOP);\n    value.factory = factory;\n    VIEW_DEFINITION_CACHE.set(factory, value);\n  }\n  return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function rootRenderNodes(view: ViewData): any[] {\n  const /** @type {?} */ renderNodes: any[] = [];\n  visitRootRenderNodes(view, RenderNodeAction.Collect, undefined, undefined, renderNodes);\n  return renderNodes;\n}\n\nexport const enum RenderNodeAction {Collect, AppendChild, InsertBefore, RemoveChild}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?} target\n * @return {?}\n */\nexport function visitRootRenderNodes(\n    view: ViewData, action: RenderNodeAction, parentNode: any, nextSibling: any, target: any[]) {\n  // We need to re-compute the parent node in case the nodes have been moved around manually\n  if (action === RenderNodeAction.RemoveChild) {\n    parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n  }\n  visitSiblingRenderNodes(\n      view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?} target\n * @return {?}\n */\nexport function visitSiblingRenderNodes(\n    view: ViewData, action: RenderNodeAction, startIndex: number, endIndex: number, parentNode: any,\n    nextSibling: any, target: any[]) {\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & (NodeFlags.TypeElement | NodeFlags.TypeText | NodeFlags.TypeNgContent)) {\n      visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?} target\n * @return {?}\n */\nexport function visitProjectedRenderNodes(\n    view: ViewData, ngContentIndex: number, action: RenderNodeAction, parentNode: any,\n    nextSibling: any, target: any[]) {\n  let /** @type {?} */ compView = view;\n  while (compView && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  const /** @type {?} */ hostView = compView.parent;\n  const /** @type {?} */ hostElDef = viewParentEl(compView);\n  const /** @type {?} */ startIndex = hostElDef.index + 1;\n  const /** @type {?} */ endIndex = hostElDef.index + hostElDef.childCount;\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = hostView.def.nodes[i];\n    if (nodeDef.ngContentIndex === ngContentIndex) {\n      visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n  if (!hostView.parent) {\n    // a root view\n    const /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n    if (projectedNodes) {\n      for (let /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n        execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?} target\n * @return {?}\n */\nfunction visitRenderNode(\n    view: ViewData, nodeDef: NodeDef, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target: any[]) {\n  if (nodeDef.flags & NodeFlags.TypeNgContent) {\n    visitProjectedRenderNodes(\n        view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n  } else {\n    const /** @type {?} */ rn = renderNode(view, nodeDef);\n    if (action === RenderNodeAction.RemoveChild && (nodeDef.flags & NodeFlags.ComponentView) &&\n        (nodeDef.bindingFlags & BindingFlags.CatSyntheticProperty)) {\n      // Note: we might need to do both actions.\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticProperty)) {\n        execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n      }\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticHostProperty)) {\n        const /** @type {?} */ compView = asElementData(view, nodeDef.index).componentView;\n        execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n      }\n    } else {\n      execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n    }\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      const /** @type {?} */ embeddedViews = asElementData(view, nodeDef.index).viewContainer._embeddedViews;\n      for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n        visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n      }\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && !nodeDef.element.name) {\n      visitSiblingRenderNodes(\n          view, action, nodeDef.index + 1, nodeDef.index + nodeDef.childCount, parentNode,\n          nextSibling, target);\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?} target\n * @return {?}\n */\nfunction execRenderNodeAction(\n    view: ViewData, renderNode: any, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target: any[]) {\n  const /** @type {?} */ renderer = view.renderer;\n  switch (action) {\n    case RenderNodeAction.AppendChild:\n      renderer.appendChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.InsertBefore:\n      renderer.insertBefore(parentNode, renderNode, nextSibling);\n      break;\n    case RenderNodeAction.RemoveChild:\n      renderer.removeChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.Collect:\n      target.push(renderNode);\n      break;\n  }\n}\n\nconst /** @type {?} */ NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nexport function splitNamespace(name: string): string[] {\n  if (name[0] === ':') {\n    const /** @type {?} */ match = name.match(NS_PREFIX_RE);\n    return [match[1], match[2]];\n  }\n  return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nexport function calcBindingFlags(bindings: BindingDef[]): BindingFlags {\n  let /** @type {?} */ flags = 0;\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    flags |= bindings[i].flags;\n  }\n  return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nexport function interpolate(valueCount: number, constAndInterp: string[]): string {\n  let /** @type {?} */ result = '';\n  for (let /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n    result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n  }\n  return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nexport function inlineInterpolate(\n    valueCount: number, c0: string, a1: any, c1: string, a2?: any, c2?: string, a3?: any,\n    c3?: string, a4?: any, c4?: string, a5?: any, c5?: string, a6?: any, c6?: string, a7?: any,\n    c7?: string, a8?: any, c8?: string, a9?: any, c9?: string): string {\n  switch (valueCount) {\n    case 1:\n      return c0 + _toStringWithNull(a1) + c1;\n    case 2:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n    case 3:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3;\n    case 4:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4;\n    case 5:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n    case 6:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n    case 7:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7;\n    case 8:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n    case 9:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n    default:\n      throw new Error(`Does not support more than 9 expressions`);\n  }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v: any): string {\n  return v != null ? v.toString() : '';\n}\n\nexport const /** @type {?} */ EMPTY_ARRAY: any[] = [];\nexport const /** @type {?} */ EMPTY_MAP: {[key: string]: any} = {};\n","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties}\n */\n /* tslint:disable */\n\n\nimport * as import0 from '@angular/core';\nimport * as import1 from '../../../../src/app/app.module';\nimport * as import2 from '@angular/common';\nimport * as import3 from '@angular/platform-browser';\nimport * as import4 from './app.component.ngfactory';\nclass AppModuleInjector extends import0.ɵNgModuleInjector<import1.AppModule> {\n  _CommonModule_0:import2.CommonModule;\n  _ErrorHandler_1:any;\n  _APP_INITIALIZER_2:any[];\n  _ApplicationInitStatus_3:import0.ApplicationInitStatus;\n  _ɵf_4:import0.ɵf;\n  _ApplicationRef_5:any;\n  _ApplicationModule_6:import0.ApplicationModule;\n  _BrowserModule_7:import3.BrowserModule;\n  _AppModule_8:import1.AppModule;\n  __LOCALE_ID_9:any;\n  __NgLocalization_10:import2.NgLocaleLocalization;\n  __Compiler_11:import0.Compiler;\n  __APP_ID_12:any;\n  __IterableDiffers_13:any;\n  __KeyValueDiffers_14:any;\n  __DomSanitizer_15:import3.ɵe;\n  __Sanitizer_16:any;\n  __HAMMER_GESTURE_CONFIG_17:import3.HammerGestureConfig;\n  __EVENT_MANAGER_PLUGINS_18:any[];\n  __EventManager_19:import3.EventManager;\n  __ɵDomSharedStylesHost_20:import3.ɵDomSharedStylesHost;\n  __ɵDomRendererFactory2_21:import3.ɵDomRendererFactory2;\n  __RendererFactory2_22:any;\n  __ɵSharedStylesHost_23:any;\n  __Testability_24:import0.Testability;\n  __Meta_25:import3.Meta;\n  __Title_26:import3.Title;\n  constructor(parent:import0.Injector) {\n    super(parent,[import4.AppComponentNgFactory],[import4.AppComponentNgFactory]);\n  }\n  get _LOCALE_ID_9():any {\n    if ((this.__LOCALE_ID_9 == null)) { (this.__LOCALE_ID_9 = import0.ɵn(this.parent.get(import0.LOCALE_ID,(null as any)))); }\n    return this.__LOCALE_ID_9;\n  }\n  get _NgLocalization_10():import2.NgLocaleLocalization {\n    if ((this.__NgLocalization_10 == null)) { (this.__NgLocalization_10 = new import2.NgLocaleLocalization(this._LOCALE_ID_9)); }\n    return this.__NgLocalization_10;\n  }\n  get _Compiler_11():import0.Compiler {\n    if ((this.__Compiler_11 == null)) { (this.__Compiler_11 = new import0.Compiler()); }\n    return this.__Compiler_11;\n  }\n  get _APP_ID_12():any {\n    if ((this.__APP_ID_12 == null)) { (this.__APP_ID_12 = import0.ɵg()); }\n    return this.__APP_ID_12;\n  }\n  get _IterableDiffers_13():any {\n    if ((this.__IterableDiffers_13 == null)) { (this.__IterableDiffers_13 = import0.ɵl()); }\n    return this.__IterableDiffers_13;\n  }\n  get _KeyValueDiffers_14():any {\n    if ((this.__KeyValueDiffers_14 == null)) { (this.__KeyValueDiffers_14 = import0.ɵm()); }\n    return this.__KeyValueDiffers_14;\n  }\n  get _DomSanitizer_15():import3.ɵe {\n    if ((this.__DomSanitizer_15 == null)) { (this.__DomSanitizer_15 = new import3.ɵe(this.parent.get(import3.DOCUMENT))); }\n    return this.__DomSanitizer_15;\n  }\n  get _Sanitizer_16():any {\n    if ((this.__Sanitizer_16 == null)) { (this.__Sanitizer_16 = this._DomSanitizer_15); }\n    return this.__Sanitizer_16;\n  }\n  get _HAMMER_GESTURE_CONFIG_17():import3.HammerGestureConfig {\n    if ((this.__HAMMER_GESTURE_CONFIG_17 == null)) { (this.__HAMMER_GESTURE_CONFIG_17 = new import3.HammerGestureConfig()); }\n    return this.__HAMMER_GESTURE_CONFIG_17;\n  }\n  get _EVENT_MANAGER_PLUGINS_18():any[] {\n    if ((this.__EVENT_MANAGER_PLUGINS_18 == null)) { (this.__EVENT_MANAGER_PLUGINS_18 = [\n      new import3.ɵDomEventsPlugin(this.parent.get(import3.DOCUMENT)),\n      new import3.ɵKeyEventsPlugin(this.parent.get(import3.DOCUMENT)),\n      new import3.ɵHammerGesturesPlugin(this.parent.get(import3.DOCUMENT),this._HAMMER_GESTURE_CONFIG_17)\n    ]\n    ); }\n    return this.__EVENT_MANAGER_PLUGINS_18;\n  }\n  get _EventManager_19():import3.EventManager {\n    if ((this.__EventManager_19 == null)) { (this.__EventManager_19 = new import3.EventManager(this._EVENT_MANAGER_PLUGINS_18,this.parent.get(import0.NgZone))); }\n    return this.__EventManager_19;\n  }\n  get _ɵDomSharedStylesHost_20():import3.ɵDomSharedStylesHost {\n    if ((this.__ɵDomSharedStylesHost_20 == null)) { (this.__ɵDomSharedStylesHost_20 = new import3.ɵDomSharedStylesHost(this.parent.get(import3.DOCUMENT))); }\n    return this.__ɵDomSharedStylesHost_20;\n  }\n  get _ɵDomRendererFactory2_21():import3.ɵDomRendererFactory2 {\n    if ((this.__ɵDomRendererFactory2_21 == null)) { (this.__ɵDomRendererFactory2_21 = new import3.ɵDomRendererFactory2(this._EventManager_19,this._ɵDomSharedStylesHost_20)); }\n    return this.__ɵDomRendererFactory2_21;\n  }\n  get _RendererFactory2_22():any {\n    if ((this.__RendererFactory2_22 == null)) { (this.__RendererFactory2_22 = this._ɵDomRendererFactory2_21); }\n    return this.__RendererFactory2_22;\n  }\n  get _ɵSharedStylesHost_23():any {\n    if ((this.__ɵSharedStylesHost_23 == null)) { (this.__ɵSharedStylesHost_23 = this._ɵDomSharedStylesHost_20); }\n    return this.__ɵSharedStylesHost_23;\n  }\n  get _Testability_24():import0.Testability {\n    if ((this.__Testability_24 == null)) { (this.__Testability_24 = new import0.Testability(this.parent.get(import0.NgZone))); }\n    return this.__Testability_24;\n  }\n  get _Meta_25():import3.Meta {\n    if ((this.__Meta_25 == null)) { (this.__Meta_25 = new import3.Meta(this.parent.get(import3.DOCUMENT))); }\n    return this.__Meta_25;\n  }\n  get _Title_26():import3.Title {\n    if ((this.__Title_26 == null)) { (this.__Title_26 = new import3.Title(this.parent.get(import3.DOCUMENT))); }\n    return this.__Title_26;\n  }\n  createInternal():import1.AppModule {\n    this._CommonModule_0 = new import2.CommonModule();\n    this._ErrorHandler_1 = import3.ɵa();\n    this._APP_INITIALIZER_2 = [\n      import0.ɵo,\n      import3.ɵc(this.parent.get(import3.NgProbeToken,(null as any)),this.parent.get(import0.NgProbeToken,(null as any)))\n    ]\n    ;\n    this._ApplicationInitStatus_3 = new import0.ApplicationInitStatus(this._APP_INITIALIZER_2);\n    this._ɵf_4 = new import0.ɵf(this.parent.get(import0.NgZone),this.parent.get(import0.ɵConsole),this,this._ErrorHandler_1,this.componentFactoryResolver,this._ApplicationInitStatus_3);\n    this._ApplicationRef_5 = this._ɵf_4;\n    this._ApplicationModule_6 = new import0.ApplicationModule(this._ApplicationRef_5);\n    this._BrowserModule_7 = new import3.BrowserModule(this.parent.get(import3.BrowserModule,(null as any)));\n    this._AppModule_8 = new import1.AppModule();\n    return this._AppModule_8;\n  }\n  getInternal(token:any,notFoundResult:any):any {\n    if ((token === import2.CommonModule)) { return this._CommonModule_0; }\n    if ((token === import0.ErrorHandler)) { return this._ErrorHandler_1; }\n    if ((token === import0.APP_INITIALIZER)) { return this._APP_INITIALIZER_2; }\n    if ((token === import0.ApplicationInitStatus)) { return this._ApplicationInitStatus_3; }\n    if ((token === import0.ɵf)) { return this._ɵf_4; }\n    if ((token === import0.ApplicationRef)) { return this._ApplicationRef_5; }\n    if ((token === import0.ApplicationModule)) { return this._ApplicationModule_6; }\n    if ((token === import3.BrowserModule)) { return this._BrowserModule_7; }\n    if ((token === import1.AppModule)) { return this._AppModule_8; }\n    if ((token === import0.LOCALE_ID)) { return this._LOCALE_ID_9; }\n    if ((token === import2.NgLocalization)) { return this._NgLocalization_10; }\n    if ((token === import0.Compiler)) { return this._Compiler_11; }\n    if ((token === import0.APP_ID)) { return this._APP_ID_12; }\n    if ((token === import0.IterableDiffers)) { return this._IterableDiffers_13; }\n    if ((token === import0.KeyValueDiffers)) { return this._KeyValueDiffers_14; }\n    if ((token === import3.DomSanitizer)) { return this._DomSanitizer_15; }\n    if ((token === import0.Sanitizer)) { return this._Sanitizer_16; }\n    if ((token === import3.HAMMER_GESTURE_CONFIG)) { return this._HAMMER_GESTURE_CONFIG_17; }\n    if ((token === import3.EVENT_MANAGER_PLUGINS)) { return this._EVENT_MANAGER_PLUGINS_18; }\n    if ((token === import3.EventManager)) { return this._EventManager_19; }\n    if ((token === import3.ɵDomSharedStylesHost)) { return this._ɵDomSharedStylesHost_20; }\n    if ((token === import3.ɵDomRendererFactory2)) { return this._ɵDomRendererFactory2_21; }\n    if ((token === import0.RendererFactory2)) { return this._RendererFactory2_22; }\n    if ((token === import3.ɵSharedStylesHost)) { return this._ɵSharedStylesHost_23; }\n    if ((token === import0.Testability)) { return this._Testability_24; }\n    if ((token === import3.Meta)) { return this._Meta_25; }\n    if ((token === import3.Title)) { return this._Title_26; }\n    return notFoundResult;\n  }\n  destroyInternal():void {\n    this._ɵf_4.ngOnDestroy();\n    (this.__ɵDomSharedStylesHost_20 && this._ɵDomSharedStylesHost_20.ngOnDestroy());\n  }\n}\nexport const AppModuleNgFactory:import0.NgModuleFactory<import1.AppModule> = new import0.NgModuleFactory<any>(AppModuleInjector,import1.AppModule);\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiRDovZ2l0aHViL2FuZ3VsYXItYW90L3NyYy9hcHAvYXBwLm1vZHVsZS5uZ2ZhY3RvcnkudHMiLCJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuZzovLy9EOi9naXRodWIvYW5ndWxhci1hb3Qvc3JjL2FwcC9hcHAubW9kdWxlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIiAiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9\n","import { platformBrowser }    from '@angular/platform-browser';\r\nimport { AppModuleNgFactory } from '../build-aot/ngfactory/src/app/app.module.ngfactory';\r\nconsole.log('Running AOT compiled');\r\nplatformBrowser().bootstrapModuleFactory(AppModuleNgFactory);","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, DoCheck, Host, Input, TemplateRef, ViewContainerRef} from '@angular/core';\nexport class SwitchView {\nprivate _created = false;\n/**\n * @param {?} _viewContainerRef\n * @param {?} _templateRef\n */\nconstructor(\nprivate _viewContainerRef: ViewContainerRef,\nprivate _templateRef: TemplateRef<Object>) {}\n/**\n * @return {?}\n */\ncreate(): void {\n    this._created = true;\n    this._viewContainerRef.createEmbeddedView(this._templateRef);\n  }\n/**\n * @return {?}\n */\ndestroy(): void {\n    this._created = false;\n    this._viewContainerRef.clear();\n  }\n/**\n * @param {?} created\n * @return {?}\n */\nenforceState(created: boolean) {\n    if (created && !this._created) {\n      this.create();\n    } else if (!created && this._created) {\n      this.destroy();\n    }\n  }\n}\n\nfunction SwitchView_tsickle_Closure_declarations() {\n/** @type {?} */\nSwitchView.prototype._created;\n/** @type {?} */\nSwitchView.prototype._viewContainerRef;\n/** @type {?} */\nSwitchView.prototype._templateRef;\n}\n\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Adds / removes DOM sub-trees when the nest match expressions matches the switch\n *             expression.\n * \n * \\@howToUse \n * ```\n *     <container-element [ngSwitch]=\"switch_expression\">\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\n *         <!-- use a ng-container to group multiple root nodes -->\n *         <inner-element></inner-element>\n *         <inner-other-element></inner-other-element>\n *       </ng-container>\n *       <some-element *ngSwitchDefault>...</some-element>\n *     </container-element>\n * ```\n * \\@description \n * \n * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n * switch expression.\n * \n * In other words:\n * - you define a container element (where you place the directive with a switch expression on the\n * `[ngSwitch]=\"...\"` attribute)\n * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n * root elements.\n * \n * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n * be preserved at the location.\n * \n * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n * expression is evaluated.\n * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n * stamped out.\n * \n * \\@stable\n */\nexport class NgSwitch {\nprivate _defaultViews: SwitchView[];\nprivate _defaultUsed = false;\nprivate _caseCount = 0;\nprivate _lastCaseCheckIndex = 0;\nprivate _lastCasesMatched = false;\nprivate _ngSwitch: any;\n/**\n * @param {?} newValue\n * @return {?}\n */\nset ngSwitch(newValue: any) {\n    this._ngSwitch = newValue;\n    if (this._caseCount === 0) {\n      this._updateDefaultCases(true);\n    }\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_addCase(): number { return this._caseCount++; }\n/**\n * \\@internal\n * @param {?} view\n * @return {?}\n */\n_addDefault(view: SwitchView) {\n    if (!this._defaultViews) {\n      this._defaultViews = [];\n    }\n    this._defaultViews.push(view);\n  }\n/**\n * \\@internal\n * @param {?} value\n * @return {?}\n */\n_matchCase(value: any): boolean {\n    const /** @type {?} */ matched = value == this._ngSwitch;\n    this._lastCasesMatched = this._lastCasesMatched || matched;\n    this._lastCaseCheckIndex++;\n    if (this._lastCaseCheckIndex === this._caseCount) {\n      this._updateDefaultCases(!this._lastCasesMatched);\n      this._lastCaseCheckIndex = 0;\n      this._lastCasesMatched = false;\n    }\n    return matched;\n  }\n/**\n * @param {?} useDefault\n * @return {?}\n */\nprivate _updateDefaultCases(useDefault: boolean) {\n    if (this._defaultViews && useDefault !== this._defaultUsed) {\n      this._defaultUsed = useDefault;\n      for (let /** @type {?} */ i = 0; i < this._defaultViews.length; i++) {\n        const /** @type {?} */ defaultView = this._defaultViews[i];\n        defaultView.enforceState(useDefault);\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngSwitch]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngSwitch': [{ type: Input },],\n};\n}\n\nfunction NgSwitch_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSwitch.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSwitch.ctorParameters;\n/** @type {?} */\nNgSwitch.propDecorators;\n/** @type {?} */\nNgSwitch.prototype._defaultViews;\n/** @type {?} */\nNgSwitch.prototype._defaultUsed;\n/** @type {?} */\nNgSwitch.prototype._caseCount;\n/** @type {?} */\nNgSwitch.prototype._lastCaseCheckIndex;\n/** @type {?} */\nNgSwitch.prototype._lastCasesMatched;\n/** @type {?} */\nNgSwitch.prototype._ngSwitch;\n}\n\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgSwitch} when the\n *             given expression evaluate to respectively the same/different value as the switch\n *             expression.\n * \n * \\@howToUse \n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n * </container-element>\n * ```\n * \\@description \n * \n * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n * expression.\n * \n * If multiple match expressions match the switch expression value, all of them are displayed.\n * \n * See {\\@link NgSwitch} for more details and example.\n * \n * \\@stable\n */\nexport class NgSwitchCase implements DoCheck {\nprivate _view: SwitchView;\n\n  \n  ngSwitchCase: any;\n/**\n * @param {?} viewContainer\n * @param {?} templateRef\n * @param {?} ngSwitch\n */\nconstructor(\n      viewContainer: ViewContainerRef, templateRef: TemplateRef<Object>,\nprivate ngSwitch: NgSwitch) {\n    ngSwitch._addCase();\n    this._view = new SwitchView(viewContainer, templateRef);\n  }\n/**\n * @return {?}\n */\nngDoCheck() { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngSwitchCase]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: NgSwitch, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngSwitchCase': [{ type: Input },],\n};\n}\n\nfunction NgSwitchCase_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSwitchCase.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSwitchCase.ctorParameters;\n/** @type {?} */\nNgSwitchCase.propDecorators;\n/** @type {?} */\nNgSwitchCase.prototype._view;\n/** @type {?} */\nNgSwitchCase.prototype.ngSwitchCase;\n/** @type {?} */\nNgSwitchCase.prototype.ngSwitch;\n}\n\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Creates a view that is added to the parent {\\@link NgSwitch} when no case expressions\n * match the\n *             switch expression.\n * \n * \\@howToUse \n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   <some-other-element *ngSwitchDefault>...</some-other-element>\n * </container-element>\n * ```\n * \n * \\@description \n * \n * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n * expression.\n * \n * See {\\@link NgSwitch} for more details and example.\n * \n * \\@stable\n */\nexport class NgSwitchDefault {\n/**\n * @param {?} viewContainer\n * @param {?} templateRef\n * @param {?} ngSwitch\n */\nconstructor(\n      viewContainer: ViewContainerRef, templateRef: TemplateRef<Object>,\n       ngSwitch: NgSwitch) {\n    ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngSwitchDefault]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: NgSwitch, decorators: [{ type: Host }, ]},\n];\n}\n\nfunction NgSwitchDefault_tsickle_Closure_declarations() {\n/** @type {?} */\nNgSwitchDefault.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgSwitchDefault.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Attribute, Directive, Host, Input, TemplateRef, ViewContainerRef} from '@angular/core';\n\nimport {NgLocalization, getPluralCategory} from '../localization';\n\nimport {SwitchView} from './ng_switch';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n * \n * \\@howToUse \n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\n *   <ng-template ngPluralCase=\"=1\">there is one</ng-template>\n *   <ng-template ngPluralCase=\"few\">there are a few</ng-template>\n * </some-element>\n * ```\n * \n * \\@description \n * \n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n * that match the switch expression's pluralization category.\n * \n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n * expression:\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n *   matches the switch expression exactly,\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n *   value matches aren't found and the value maps to its category for the defined locale.\n * \n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n * \n * \\@experimental\n */\nexport class NgPlural {\nprivate _switchValue: number;\nprivate _activeView: SwitchView;\nprivate _caseViews: {[k: string]: SwitchView} = {};\n/**\n * @param {?} _localization\n */\nconstructor(private _localization: NgLocalization) {}\n/**\n * @param {?} value\n * @return {?}\n */\nset ngPlural(value: number) {\n    this._switchValue = value;\n    this._updateView();\n  }\n/**\n * @param {?} value\n * @param {?} switchView\n * @return {?}\n */\naddCase(value: string, switchView: SwitchView): void { this._caseViews[value] = switchView; }\n/**\n * @return {?}\n */\nprivate _updateView(): void {\n    this._clearViews();\n\n    const /** @type {?} */ cases = Object.keys(this._caseViews);\n    const /** @type {?} */ key = getPluralCategory(this._switchValue, cases, this._localization);\n    this._activateView(this._caseViews[key]);\n  }\n/**\n * @return {?}\n */\nprivate _clearViews() {\n    if (this._activeView) this._activeView.destroy();\n  }\n/**\n * @param {?} view\n * @return {?}\n */\nprivate _activateView(view: SwitchView) {\n    if (view) {\n      this._activeView = view;\n      this._activeView.create();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngPlural]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgLocalization, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngPlural': [{ type: Input },],\n};\n}\n\nfunction NgPlural_tsickle_Closure_declarations() {\n/** @type {?} */\nNgPlural.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgPlural.ctorParameters;\n/** @type {?} */\nNgPlural.propDecorators;\n/** @type {?} */\nNgPlural.prototype._switchValue;\n/** @type {?} */\nNgPlural.prototype._activeView;\n/** @type {?} */\nNgPlural.prototype._caseViews;\n/** @type {?} */\nNgPlural.prototype._localization;\n}\n\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Creates a view that will be added/removed from the parent {\\@link NgPlural} when the\n *             given expression matches the plural expression according to CLDR rules.\n * \n * \\@howToUse \n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">...</ng-template>\n *   <ng-template ngPluralCase=\"other\">...</ng-template>\n * </some-element>\n * ```\n * \n * See {\\@link NgPlural} for more details and example.\n * \n * \\@experimental\n */\nexport class NgPluralCase {\n/**\n * @param {?} value\n * @param {?} template\n * @param {?} viewContainer\n * @param {?} ngPlural\n */\nconstructor(\npublic value: string, template: TemplateRef<Object>,\n      viewContainer: ViewContainerRef,  ngPlural: NgPlural) {\n    const isANumber: boolean = !isNaN(Number(value));\n    ngPlural.addCase(isANumber ? `=${value}` : value, new SwitchView(viewContainer, template));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngPluralCase]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Attribute, args: ['ngPluralCase', ] }, ]},\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: NgPlural, decorators: [{ type: Host }, ]},\n];\n}\n\nfunction NgPluralCase_tsickle_Closure_declarations() {\n/** @type {?} */\nNgPluralCase.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgPluralCase.ctorParameters;\n/** @type {?} */\nNgPluralCase.prototype.value;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, DoCheck, ElementRef, Input, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Renderer} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Update an HTML element styles.\n * \n * \\@howToUse \n * ```\n * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n * \n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n * \n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n * \n * \\@description \n * \n * The styles are updated according to the value of the expression evaluation:\n * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n * - values are the values assigned to those properties (expressed in the given unit).\n * \n * \\@stable\n */\nexport class NgStyle implements DoCheck {\nprivate _ngStyle: {[key: string]: string};\nprivate _differ: KeyValueDiffer<string, string|number>;\n/**\n * @param {?} _differs\n * @param {?} _ngEl\n * @param {?} _renderer\n */\nconstructor(\nprivate _differs: KeyValueDiffers,\nprivate _ngEl: ElementRef,\nprivate _renderer: Renderer) {}\n/**\n * @param {?} v\n * @return {?}\n */\nset ngStyle(v: {[key: string]: string}) {\n    this._ngStyle = v;\n    if (!this._differ && v) {\n      this._differ = this._differs.find(v).create();\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck() {\n    if (this._differ) {\n      const /** @type {?} */ changes = this._differ.diff(this._ngStyle);\n      if (changes) {\n        this._applyChanges(changes);\n      }\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _applyChanges(changes: KeyValueChanges<string, string|number>): void {\n    changes.forEachRemovedItem((record) => this._setStyle(record.key, null));\n    changes.forEachAddedItem((record) => this._setStyle(record.key, record.currentValue));\n    changes.forEachChangedItem((record) => this._setStyle(record.key, record.currentValue));\n  }\n/**\n * @param {?} nameAndUnit\n * @param {?} value\n * @return {?}\n */\nprivate _setStyle(nameAndUnit: string, value: string|number): void {\n    const [name, unit] = nameAndUnit.split('.');\n    value = value != null && unit ? `${value}${unit}` : value;\n\n    this._renderer.setElementStyle(this._ngEl.nativeElement, name, /** @type {?} */(( value as string)));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngStyle]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngStyle': [{ type: Input },],\n};\n}\n\nfunction NgStyle_tsickle_Closure_declarations() {\n/** @type {?} */\nNgStyle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgStyle.ctorParameters;\n/** @type {?} */\nNgStyle.propDecorators;\n/** @type {?} */\nNgStyle.prototype._ngStyle;\n/** @type {?} */\nNgStyle.prototype._differ;\n/** @type {?} */\nNgStyle.prototype._differs;\n/** @type {?} */\nNgStyle.prototype._ngEl;\n/** @type {?} */\nNgStyle.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, EmbeddedViewRef, Input, OnChanges, SimpleChanges, TemplateRef, ViewContainerRef} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Inserts an embedded view from a prepared `TemplateRef`\n * \n * \\@howToUse \n * ```\n * <ng-container *ngTemplateOutlet=\"templateRefExp; context: contextExp\"></ng-container>\n * ```\n * \n * \\@description \n * \n * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.\n * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding\n * by the local template `let` declarations.\n * \n * Note: using the key `$implicit` in the context object will set it's value as default.\n * \n * # Example\n * \n * {\\@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}\n * \n * \\@experimental\n */\nexport class NgTemplateOutlet implements OnChanges {\nprivate _viewRef: EmbeddedViewRef<any>;\npublic ngTemplateOutletContext: Object;\npublic ngTemplateOutlet: TemplateRef<any>;\n/**\n * @param {?} _viewContainerRef\n */\nconstructor(private _viewContainerRef: ViewContainerRef) {}\n/**\n * @deprecated v4.0.0 - Renamed to ngTemplateOutletContext.\n * @param {?} context\n * @return {?}\n */\nset ngOutletContext(context: Object) { this.ngTemplateOutletContext = context; }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (this._viewRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n    }\n\n    if (this.ngTemplateOutlet) {\n      this._viewRef = this._viewContainerRef.createEmbeddedView(\n          this.ngTemplateOutlet, this.ngTemplateOutletContext);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngTemplateOutlet]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngTemplateOutletContext': [{ type: Input },],\n'ngTemplateOutlet': [{ type: Input },],\n'ngOutletContext': [{ type: Input },],\n};\n}\n\nfunction NgTemplateOutlet_tsickle_Closure_declarations() {\n/** @type {?} */\nNgTemplateOutlet.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgTemplateOutlet.ctorParameters;\n/** @type {?} */\nNgTemplateOutlet.propDecorators;\n/** @type {?} */\nNgTemplateOutlet.prototype._viewRef;\n/** @type {?} */\nNgTemplateOutlet.prototype.ngTemplateOutletContext;\n/** @type {?} */\nNgTemplateOutlet.prototype.ngTemplateOutlet;\n/** @type {?} */\nNgTemplateOutlet.prototype._viewContainerRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Provider} from '@angular/core';\n\nimport {NgClass} from './ng_class';\nimport {NgComponentOutlet} from './ng_component_outlet';\nimport {NgFor, NgForOf, NgForOfContext} from './ng_for_of';\nimport {NgIf, NgIfContext} from './ng_if';\nimport {NgPlural, NgPluralCase} from './ng_plural';\nimport {NgStyle} from './ng_style';\nimport {NgSwitch, NgSwitchCase, NgSwitchDefault} from './ng_switch';\nimport {NgTemplateOutlet} from './ng_template_outlet';\n\nexport {\n  NgClass,\n  NgComponentOutlet,\n  NgFor,\n  NgForOf,\n  NgForOfContext,\n  NgIf,\n  NgIfContext,\n  NgPlural,\n  NgPluralCase,\n  NgStyle,\n  NgSwitch,\n  NgSwitchCase,\n  NgSwitchDefault,\n  NgTemplateOutlet\n};\n\n\n\n/**\n * A collection of Angular directives that are likely to be used in each and every Angular\n * application.\n */\nexport const /** @type {?} */ COMMON_DIRECTIVES: Provider[] = [\n  NgClass,\n  NgComponentOutlet,\n  NgForOf,\n  NgIf,\n  NgTemplateOutlet,\n  NgStyle,\n  NgSwitch,\n  NgSwitchCase,\n  NgSwitchDefault,\n  NgPlural,\n  NgPluralCase,\n];\n\n/**\n * A collection of deprecated directives that are no longer part of the core module.\n */\nexport const /** @type {?} */ COMMON_DEPRECATED_DIRECTIVES: Provider[] = [NgFor];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectorRef, EventEmitter, OnDestroy, Pipe, PipeTransform, WrappedValue, ɵisObservable, ɵisPromise} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\n\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\ninterface SubscriptionStrategy {\n  createSubscription(async: any, updateLatestValue: any): any;\n  dispose(subscription: any): void;\n  onDestroy(subscription: any): void;\n}\nclass ObservableStrategy implements SubscriptionStrategy {\n/**\n * @param {?} async\n * @param {?} updateLatestValue\n * @return {?}\n */\ncreateSubscription(async: any, updateLatestValue: any): any {\n    return async.subscribe({next: updateLatestValue, error: (e: any) => { throw e; }});\n  }\n/**\n * @param {?} subscription\n * @return {?}\n */\ndispose(subscription: any): void { subscription.unsubscribe(); }\n/**\n * @param {?} subscription\n * @return {?}\n */\nonDestroy(subscription: any): void { subscription.unsubscribe(); }\n}\nclass PromiseStrategy implements SubscriptionStrategy {\n/**\n * @param {?} async\n * @param {?} updateLatestValue\n * @return {?}\n */\ncreateSubscription(async: Promise<any>, updateLatestValue: (v: any) => any): any {\n    return async.then(updateLatestValue, e => { throw e; });\n  }\n/**\n * @param {?} subscription\n * @return {?}\n */\ndispose(subscription: any): void {}\n/**\n * @param {?} subscription\n * @return {?}\n */\nonDestroy(subscription: any): void {}\n}\n\nconst /** @type {?} */ _promiseStrategy = new PromiseStrategy();\nconst /** @type {?} */ _observableStrategy = new ObservableStrategy();\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Unwraps a value from an asynchronous primitive.\n * \\@howToUse `observable_or_promise_expression | async`\n * \\@description \n * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n * potential memory leaks.\n * \n * \n * ## Examples\n * \n * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n * promise.\n * \n * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n * \n * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n * to the view. The Observable continuously updates the view with the current time.\n * \n * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n * \n * \\@stable\n */\nexport class AsyncPipe implements OnDestroy, PipeTransform {\nprivate _latestValue: Object = null;\nprivate _latestReturnedValue: Object = null;\nprivate _subscription: Object = null;\nprivate _obj: Observable<any>|Promise<any>|EventEmitter<any> = null;\nprivate _strategy: SubscriptionStrategy = null;\n/**\n * @param {?} _ref\n */\nconstructor(private _ref: ChangeDetectorRef) {}\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this._subscription) {\n      this._dispose();\n    }\n  }\n\n  transform<T>(obj: Observable<T>): T|null;\n  transform<T>(obj: Promise<T>): T|null;\n  transform<T>(obj: EventEmitter<T>): T|null;\n/**\n * @param {?} obj\n * @return {?}\n */\ntransform(obj: Observable<any>|Promise<any>|EventEmitter<any>): any {\n    if (!this._obj) {\n      if (obj) {\n        this._subscribe(obj);\n      }\n      this._latestReturnedValue = this._latestValue;\n      return this._latestValue;\n    }\n\n    if (obj !== this._obj) {\n      this._dispose();\n      return this.transform( /** @type {?} */((obj as any)));\n    }\n\n    if (this._latestValue === this._latestReturnedValue) {\n      return this._latestReturnedValue;\n    }\n\n    this._latestReturnedValue = this._latestValue;\n    return WrappedValue.wrap(this._latestValue);\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nprivate _subscribe(obj: Observable<any>|Promise<any>|EventEmitter<any>): void {\n    this._obj = obj;\n    this._strategy = this._selectStrategy(obj);\n    this._subscription = this._strategy.createSubscription(\n        obj, (value: Object) => this._updateLatestValue(obj, value));\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nprivate _selectStrategy(obj: Observable<any>|Promise<any>|EventEmitter<any>): any {\n    if (ɵisPromise(obj)) {\n      return _promiseStrategy;\n    }\n\n    if (ɵisObservable(obj)) {\n      return _observableStrategy;\n    }\n\n    throw invalidPipeArgumentError(AsyncPipe, obj);\n  }\n/**\n * @return {?}\n */\nprivate _dispose(): void {\n    this._strategy.dispose(this._subscription);\n    this._latestValue = null;\n    this._latestReturnedValue = null;\n    this._subscription = null;\n    this._obj = null;\n  }\n/**\n * @param {?} async\n * @param {?} value\n * @return {?}\n */\nprivate _updateLatestValue(async: any, value: Object): void {\n    if (async === this._obj) {\n      this._latestValue = value;\n      this._ref.markForCheck();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'async', pure: false}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction AsyncPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nAsyncPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAsyncPipe.ctorParameters;\n/** @type {?} */\nAsyncPipe.prototype._latestValue;\n/** @type {?} */\nAsyncPipe.prototype._latestReturnedValue;\n/** @type {?} */\nAsyncPipe.prototype._subscription;\n/** @type {?} */\nAsyncPipe.prototype._obj;\n/** @type {?} */\nAsyncPipe.prototype._strategy;\n/** @type {?} */\nAsyncPipe.prototype._ref;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n/**\n * Transforms text to lowercase.\n * \n * {\\@example  common/pipes/ts/lowerupper_pipe.ts region='LowerUpperPipe' }\n * \n * \\@stable\n */\nexport class LowerCasePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: string): string {\n    if (!value) return value;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(LowerCasePipe, value);\n    }\n    return value.toLowerCase();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'lowercase'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LowerCasePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nLowerCasePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLowerCasePipe.ctorParameters;\n}\n\n/**\n * Helper method to transform a single word to titlecase.\n * \n * \\@stable\n * @param {?} word\n * @return {?}\n */\nfunction titleCaseWord(word: string) {\n  if (!word) return word;\n  return word[0].toUpperCase() + word.substr(1).toLowerCase();\n}\n/**\n * Transforms text to titlecase.\n * \n * \\@stable\n */\nexport class TitleCasePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: string): string {\n    if (!value) return value;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(TitleCasePipe, value);\n    }\n\n    return value.split(/\\b/g).map(word => titleCaseWord(word)).join('');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'titlecase'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TitleCasePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nTitleCasePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTitleCasePipe.ctorParameters;\n}\n\n/**\n * Transforms text to uppercase.\n * \n * \\@stable\n */\nexport class UpperCasePipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: string): string {\n    if (!value) return value;\n    if (typeof value !== 'string') {\n      throw invalidPipeArgumentError(UpperCasePipe, value);\n    }\n    return value.toUpperCase();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'uppercase'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction UpperCasePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nUpperCasePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUpperCasePipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport type NumberFormatStyle = number;\nexport let NumberFormatStyle: any = {};\nNumberFormatStyle.Decimal = 0;\nNumberFormatStyle.Percent = 1;\nNumberFormatStyle.Currency = 2;\nNumberFormatStyle[NumberFormatStyle.Decimal] = \"Decimal\";\nNumberFormatStyle[NumberFormatStyle.Percent] = \"Percent\";\nNumberFormatStyle[NumberFormatStyle.Currency] = \"Currency\";\n\nexport class NumberFormatter {\n/**\n * @param {?} num\n * @param {?} locale\n * @param {?} style\n * @param {?=} __3\n * @return {?}\n */\nstatic format(\n      num: number, locale: string, style: NumberFormatStyle,\n      {minimumIntegerDigits, minimumFractionDigits, maximumFractionDigits, currency,\n       currencyAsSymbol = false}: {\n        minimumIntegerDigits?: number,\n        minimumFractionDigits?: number,\n        maximumFractionDigits?: number,\n        currency?: string,\n        currencyAsSymbol?: boolean\n      } = {}): string {\n    const /** @type {?} */ options: Intl.NumberFormatOptions = {\n      minimumIntegerDigits,\n      minimumFractionDigits,\n      maximumFractionDigits,\n      style: NumberFormatStyle[style].toLowerCase()\n    };\n\n    if (style == NumberFormatStyle.Currency) {\n      options.currency = currency;\n      options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n    }\n    return new Intl.NumberFormat(locale, options).format(num);\n  }\n}\n\ntype DateFormatterFn = (date: Date, locale: string) => string;\n\nconst /** @type {?} */ DATE_FORMATS_SPLIT =\n    /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n\nconst /** @type {?} */ PATTERN_ALIASES: {[format: string]: DateFormatterFn} = {\n  // Keys are quoted so they do not get renamed during closure compilation.\n  'yMMMdjms': datePartGetterFactory(combine([\n    digitCondition('year', 1),\n    nameCondition('month', 3),\n    digitCondition('day', 1),\n    digitCondition('hour', 1),\n    digitCondition('minute', 1),\n    digitCondition('second', 1),\n  ])),\n  'yMdjm': datePartGetterFactory(combine([\n    digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n    digitCondition('hour', 1), digitCondition('minute', 1)\n  ])),\n  'yMMMMEEEEd': datePartGetterFactory(combine([\n    digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n    digitCondition('day', 1)\n  ])),\n  'yMMMMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n  'yMMMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n  'yMd': datePartGetterFactory(\n      combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n  'jms': datePartGetterFactory(combine(\n      [digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n  'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n};\n\nconst /** @type {?} */ DATE_FORMATS: {[format: string]: DateFormatterFn} = {\n  // Keys are quoted so they do not get renamed.\n  'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n  'yy': datePartGetterFactory(digitCondition('year', 2)),\n  'y': datePartGetterFactory(digitCondition('year', 1)),\n  'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n  'MMM': datePartGetterFactory(nameCondition('month', 3)),\n  'MM': datePartGetterFactory(digitCondition('month', 2)),\n  'M': datePartGetterFactory(digitCondition('month', 1)),\n  'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n  'L': datePartGetterFactory(nameCondition('month', 1)),\n  'dd': datePartGetterFactory(digitCondition('day', 2)),\n  'd': datePartGetterFactory(digitCondition('day', 1)),\n  'HH': digitModifier(\n      hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n  'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n  'hh': digitModifier(\n      hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n  'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n  'jj': datePartGetterFactory(digitCondition('hour', 2)),\n  'j': datePartGetterFactory(digitCondition('hour', 1)),\n  'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n  'm': datePartGetterFactory(digitCondition('minute', 1)),\n  'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n  's': datePartGetterFactory(digitCondition('second', 1)),\n  // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n  // we can be just safely rely on using `sss` since we currently don't support single or two digit\n  // fractions\n  'sss': datePartGetterFactory(digitCondition('second', 3)),\n  'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n  'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n  'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n  'E': datePartGetterFactory(nameCondition('weekday', 1)),\n  'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n  'Z': timeZoneGetter('short'),\n  'z': timeZoneGetter('long'),\n  'ww': datePartGetterFactory({}),  // Week of year, padded (00-53). Week 01 is the week with the\n                                    // first Thursday of the year. not support ?\n  'w':\n      datePartGetterFactory({}),  // Week of year (0-53). Week 1 is the week with the first Thursday\n                                  // of the year not support ?\n  'G': datePartGetterFactory(nameCondition('era', 1)),\n  'GG': datePartGetterFactory(nameCondition('era', 2)),\n  'GGG': datePartGetterFactory(nameCondition('era', 3)),\n  'GGGG': datePartGetterFactory(nameCondition('era', 4))\n};\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction digitModifier(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string {\n    const /** @type {?} */ result = inner(date, locale);\n    return result.length == 1 ? '0' + result : result;\n  };\n}\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction hourClockExtractor(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string { return inner(date, locale).split(' ')[1]; };\n}\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction hourExtractor(inner: DateFormatterFn): DateFormatterFn {\n  return function(date: Date, locale: string): string { return inner(date, locale).split(' ')[0]; };\n}\n/**\n * @param {?} date\n * @param {?} locale\n * @param {?} options\n * @return {?}\n */\nfunction intlDateFormat(date: Date, locale: string, options: Intl.DateTimeFormatOptions): string {\n  return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n}\n/**\n * @param {?} timezone\n * @return {?}\n */\nfunction timeZoneGetter(timezone: string): DateFormatterFn {\n  // To workaround `Intl` API restriction for single timezone let format with 24 hours\n  const /** @type {?} */ options = {hour: '2-digit', hour12: false, timeZoneName: timezone};\n  return function(date: Date, locale: string): string {\n    const /** @type {?} */ result = intlDateFormat(date, locale, options);\n    // Then extract first 3 letters that related to hours\n    return result ? result.substring(3) : '';\n  };\n}\n/**\n * @param {?} options\n * @param {?} value\n * @return {?}\n */\nfunction hour12Modify(\n    options: Intl.DateTimeFormatOptions, value: boolean): Intl.DateTimeFormatOptions {\n  options.hour12 = value;\n  return options;\n}\n/**\n * @param {?} prop\n * @param {?} len\n * @return {?}\n */\nfunction digitCondition(prop: string, len: number): Intl.DateTimeFormatOptions {\n  const /** @type {?} */ result: {[k: string]: string} = {};\n  result[prop] = len === 2 ? '2-digit' : 'numeric';\n  return result;\n}\n/**\n * @param {?} prop\n * @param {?} len\n * @return {?}\n */\nfunction nameCondition(prop: string, len: number): Intl.DateTimeFormatOptions {\n  const /** @type {?} */ result: {[k: string]: string} = {};\n  if (len < 4) {\n    result[prop] = len > 1 ? 'short' : 'narrow';\n  } else {\n    result[prop] = 'long';\n  }\n\n  return result;\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction combine(options: Intl.DateTimeFormatOptions[]): Intl.DateTimeFormatOptions {\n  return ( /** @type {?} */((<any>Object))).assign({}, ...options);\n}\n/**\n * @param {?} ret\n * @return {?}\n */\nfunction datePartGetterFactory(ret: Intl.DateTimeFormatOptions): DateFormatterFn {\n  return (date: Date, locale: string): string => intlDateFormat(date, locale, ret);\n}\n\nconst /** @type {?} */ DATE_FORMATTER_CACHE = new Map<string, string[]>();\n/**\n * @param {?} format\n * @param {?} date\n * @param {?} locale\n * @return {?}\n */\nfunction dateFormatter(format: string, date: Date, locale: string): string {\n  const /** @type {?} */ fn = PATTERN_ALIASES[format];\n\n  if (fn) return fn(date, locale);\n\n  const /** @type {?} */ cacheKey = format;\n  let /** @type {?} */ parts = DATE_FORMATTER_CACHE.get(cacheKey);\n\n  if (!parts) {\n    parts = [];\n    let /** @type {?} */ match: RegExpExecArray;\n    DATE_FORMATS_SPLIT.exec(format);\n\n    while (format) {\n      match = DATE_FORMATS_SPLIT.exec(format);\n      if (match) {\n        parts = parts.concat(match.slice(1));\n        format = parts.pop();\n      } else {\n        parts.push(format);\n        format = null;\n      }\n    }\n\n    DATE_FORMATTER_CACHE.set(cacheKey, parts);\n  }\n\n  return parts.reduce((text, part) => {\n    const /** @type {?} */ fn = DATE_FORMATS[part];\n    return text + (fn ? fn(date, locale) : partToTime(part));\n  }, '');\n}\n/**\n * @param {?} part\n * @return {?}\n */\nfunction partToTime(part: string): string {\n  return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n}\nexport class DateFormatter {\n/**\n * @param {?} date\n * @param {?} locale\n * @param {?} pattern\n * @return {?}\n */\nstatic format(date: Date, locale: string, pattern: string): string {\n    return dateFormatter(pattern, date, locale);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, LOCALE_ID, Pipe, PipeTransform, Type} from '@angular/core';\nimport {NumberFormatStyle, NumberFormatter} from './intl';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\nconst /** @type {?} */ _NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n/**\n * @param {?} pipe\n * @param {?} locale\n * @param {?} value\n * @param {?} style\n * @param {?} digits\n * @param {?=} currency\n * @param {?=} currencyAsSymbol\n * @return {?}\n */\nfunction formatNumber(\n    pipe: Type<any>, locale: string, value: number | string, style: NumberFormatStyle,\n    digits: string, currency: string = null, currencyAsSymbol: boolean = false): string {\n  if (value == null) return null;\n\n  // Convert strings to numbers\n  value = typeof value === 'string' && isNumeric(value) ? +value : value;\n  if (typeof value !== 'number') {\n    throw invalidPipeArgumentError(pipe, value);\n  }\n\n  let /** @type {?} */ minInt: number;\n  let /** @type {?} */ minFraction: number;\n  let /** @type {?} */ maxFraction: number;\n  if (style !== NumberFormatStyle.Currency) {\n    // rely on Intl default for currency\n    minInt = 1;\n    minFraction = 0;\n    maxFraction = 3;\n  }\n\n  if (digits) {\n    const /** @type {?} */ parts = digits.match(_NUMBER_FORMAT_REGEXP);\n    if (parts === null) {\n      throw new Error(`${digits} is not a valid digit info for number pipes`);\n    }\n    if (parts[1] != null) {  // min integer digits\n      minInt = parseIntAutoRadix(parts[1]);\n    }\n    if (parts[3] != null) {  // min fraction digits\n      minFraction = parseIntAutoRadix(parts[3]);\n    }\n    if (parts[5] != null) {  // max fraction digits\n      maxFraction = parseIntAutoRadix(parts[5]);\n    }\n  }\n\n  return NumberFormatter.format( /** @type {?} */((value as number)), locale, style, {\n    minimumIntegerDigits: minInt,\n    minimumFractionDigits: minFraction,\n    maximumFractionDigits: maxFraction,\n    currency: currency,\n    currencyAsSymbol: currencyAsSymbol,\n  });\n}\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number according to locale rules.\n * \\@howToUse `number_expression | number[:digitInfo]`\n * \n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the active locale.\n * \n * where `expression` is a number:\n *  - `digitInfo` is a `string` which has a following format: <br>\n *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n * \n * For more information on the acceptable range for each of these numbers and other\n * details see your native internationalization library.\n * \n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n * \n * ### Example\n * \n * {\\@example common/pipes/ts/number_pipe.ts region='NumberPipe'}\n * \n * \\@stable\n */\nexport class DecimalPipe implements PipeTransform {\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} digits\n * @return {?}\n */\ntransform(value: any, digits: string = null): string {\n    return formatNumber(DecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'number'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction DecimalPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nDecimalPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDecimalPipe.ctorParameters;\n/** @type {?} */\nDecimalPipe.prototype._locale;\n}\n\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number as a percentage according to locale rules.\n * \\@howToUse `number_expression | percent[:digitInfo]`\n * \n * \\@description \n * \n * Formats a number as percentage.\n * \n * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n * \n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n * \n * ### Example\n * \n * {\\@example common/pipes/ts/number_pipe.ts region='PercentPipe'}\n * \n * \\@stable\n */\nexport class PercentPipe implements PipeTransform {\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} digits\n * @return {?}\n */\ntransform(value: any, digits: string = null): string {\n    return formatNumber(PercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'percent'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction PercentPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nPercentPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPercentPipe.ctorParameters;\n/** @type {?} */\nPercentPipe.prototype._locale;\n}\n\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a number as currency using locale rules.\n * \\@howToUse `number_expression | currency[:currencyCode[:symbolDisplay[:digitInfo]]]`\n * \\@description \n * \n * Use `currency` to format a number as currency.\n * \n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n *   - `true`: use symbol (e.g. `$`).\n *   - `false`(default): use code (e.g. `USD`).\n * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n * \n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See {\\@linkDocs guide/browser-support} for details.\n * \n * ### Example\n * \n * {\\@example common/pipes/ts/number_pipe.ts region='CurrencyPipe'}\n * \n * \\@stable\n */\nexport class CurrencyPipe implements PipeTransform {\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} currencyCode\n * @param {?=} symbolDisplay\n * @param {?=} digits\n * @return {?}\n */\ntransform(\n      value: any, currencyCode: string = 'USD', symbolDisplay: boolean = false,\n      digits: string = null): string {\n    return formatNumber(\n        CurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode,\n        symbolDisplay);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'currency'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction CurrencyPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nCurrencyPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCurrencyPipe.ctorParameters;\n/** @type {?} */\nCurrencyPipe.prototype._locale;\n}\n\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text: string): number {\n  const /** @type {?} */ result: number = parseInt(text);\n  if (isNaN(result)) {\n    throw new Error('Invalid integer literal when parsing ' + text);\n  }\n  return result;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isNumeric(value: any): boolean {\n  return !isNaN(value - parseFloat(value));\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, LOCALE_ID, Pipe, PipeTransform} from '@angular/core';\nimport {DateFormatter} from './intl';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\nimport {isNumeric} from './number_pipe';\n\nconst /** @type {?} */ ISO8601_DATE_REGEX =\n    /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Formats a date according to locale rules.\n * \\@howToUse `date_expression | date[:format]`\n * \\@description \n * \n * Where:\n * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n * (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. The format can be predefined as\n *   shown below or custom as shown in the table.\n *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n * \n * \n *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n * \n * In javascript, only the components specified will be respected (not the ordering,\n * punctuations, ...) and details of the formatting will be dependent on the locale.\n * \n * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n * \n * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n * applied and the formatted text will have the same day, month and year of the expression.\n * \n * WARNINGS:\n * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n *   Instead users should treat the date as an immutable object and change the reference when the\n *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n *   which would be an expensive operation).\n * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n *   browsers.\n * \n * ### Examples\n * \n * Assuming `dateObj` is (year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11)\n * in the _local_ time and locale is 'en-US':\n * \n * ```\n *     {{ dateObj | date }}               // output is 'Jun 15, 2015'\n *     {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n *     {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n *     {{ dateObj | date:'mmss' }}        // output is '43:11'\n * ```\n * \n * {\\@example common/pipes/ts/date_pipe.ts region='DatePipe'}\n * \n * \\@stable\n */\nexport class DatePipe implements PipeTransform {\n/**\n * \\@internal\n */\nstatic _ALIASES: {[key: string]: string} = {\n    'medium': 'yMMMdjms',\n    'short': 'yMdjm',\n    'fullDate': 'yMMMMEEEEd',\n    'longDate': 'yMMMMd',\n    'mediumDate': 'yMMMd',\n    'shortDate': 'yMd',\n    'mediumTime': 'jms',\n    'shortTime': 'jm'\n  };\n/**\n * @param {?} _locale\n */\nconstructor(\nprivate _locale: string) {}\n/**\n * @param {?} value\n * @param {?=} pattern\n * @return {?}\n */\ntransform(value: any, pattern: string = 'mediumDate'): string {\n    let /** @type {?} */ date: Date;\n\n    if (isBlank(value) || value !== value) return null;\n\n    if (typeof value === 'string') {\n      value = value.trim();\n    }\n\n    if (isDate(value)) {\n      date = value;\n    } else if (isNumeric(value)) {\n      date = new Date(parseFloat(value));\n    } else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n      /**\n      * For ISO Strings without time the day, month and year must be extracted from the ISO String\n      * before Date creation to avoid time offset and errors in the new Date.\n      * If we only replace '-' with ',' in the ISO String (\"2015,01,01\"), and try to create a new\n      * date, some browsers (e.g. IE 9) will throw an invalid Date error\n      * If we leave the '-' (\"2015-01-01\") and try to create a new Date(\"2015-01-01\") the timeoffset\n      * is applied\n      * Note: ISO months are 0 for January, 1 for February, ...\n      */\n      const [y, m, d] = value.split('-').map((val: string) => parseInt(val, 10));\n      date = new Date(y, m - 1, d);\n    } else {\n      date = new Date(value);\n    }\n\n    if (!isDate(date)) {\n      let /** @type {?} */ match: RegExpMatchArray;\n      if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n        date = isoStringToDate(match);\n      } else {\n        throw invalidPipeArgumentError(DatePipe, value);\n      }\n    }\n\n    return DateFormatter.format(date, this._locale, DatePipe._ALIASES[pattern] || pattern);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'date', pure: true}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction DatePipe_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nDatePipe._ALIASES;\n/** @type {?} */\nDatePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatePipe.ctorParameters;\n/** @type {?} */\nDatePipe.prototype._locale;\n}\n\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isBlank(obj: any): boolean {\n  return obj == null || obj === '';\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isDate(obj: any): obj is Date {\n  return obj instanceof Date && !isNaN(obj.valueOf());\n}\n/**\n * @param {?} match\n * @return {?}\n */\nfunction isoStringToDate(match: RegExpMatchArray): Date {\n  const /** @type {?} */ date = new Date(0);\n  let /** @type {?} */ tzHour = 0;\n  let /** @type {?} */ tzMin = 0;\n  const /** @type {?} */ dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n  const /** @type {?} */ timeSetter = match[8] ? date.setUTCHours : date.setHours;\n\n  if (match[9]) {\n    tzHour = toInt(match[9] + match[10]);\n    tzMin = toInt(match[9] + match[11]);\n  }\n  dateSetter.call(date, toInt(match[1]), toInt(match[2]) - 1, toInt(match[3]));\n  const /** @type {?} */ h = toInt(match[4] || '0') - tzHour;\n  const /** @type {?} */ m = toInt(match[5] || '0') - tzMin;\n  const /** @type {?} */ s = toInt(match[6] || '0');\n  const /** @type {?} */ ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n  timeSetter.call(date, h, m, s, ms);\n  return date;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction toInt(str: string): number {\n  return parseInt(str, 10);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {NgLocalization, getPluralCategory} from '../localization';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n\nconst /** @type {?} */ _INTERPOLATION_REGEXP: RegExp = /#/g;\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Maps a value to a string that pluralizes the value according to locale rules.\n * \\@howToUse `expression | i18nPlural:mapping`\n * \\@description \n * \n *  Where:\n *  - `expression` is a number.\n *  - `mapping` is an object that mimics the ICU format, see\n *    http://userguide.icu-project.org/formatparse/messages\n * \n *  ## Example\n * \n * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n * \n * \\@experimental\n */\nexport class I18nPluralPipe implements PipeTransform {\n/**\n * @param {?} _localization\n */\nconstructor(private _localization: NgLocalization) {}\n/**\n * @param {?} value\n * @param {?} pluralMap\n * @return {?}\n */\ntransform(value: number, pluralMap: {[count: string]: string}): string {\n    if (value == null) return '';\n\n    if (typeof pluralMap !== 'object' || pluralMap === null) {\n      throw invalidPipeArgumentError(I18nPluralPipe, pluralMap);\n    }\n\n    const /** @type {?} */ key = getPluralCategory(value, Object.keys(pluralMap), this._localization);\n\n    return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'i18nPlural', pure: true}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgLocalization, },\n];\n}\n\nfunction I18nPluralPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nI18nPluralPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nI18nPluralPipe.ctorParameters;\n/** @type {?} */\nI18nPluralPipe.prototype._localization;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Generic selector that displays the string that matches the current value.\n * \\@howToUse `expression | i18nSelect:mapping`\n * \\@description \n * \n *  Where `mapping` is an object that indicates the text that should be displayed\n *  for different values of the provided `expression`.\n *  If none of the keys of the mapping match the value of the `expression`, then the content\n *  of the `other` key is returned when present, otherwise an empty string is returned.\n * \n *  ## Example\n * \n * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n * \n *  \\@experimental\n */\nexport class I18nSelectPipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} mapping\n * @return {?}\n */\ntransform(value: string, mapping: {[key: string]: string}): string {\n    if (value == null) return '';\n\n    if (typeof mapping !== 'object' || typeof value !== 'string') {\n      throw invalidPipeArgumentError(I18nSelectPipe, mapping);\n    }\n\n    if (mapping.hasOwnProperty(value)) {\n      return mapping[value];\n    }\n\n    if (mapping.hasOwnProperty('other')) {\n      return mapping['other'];\n    }\n\n    return '';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'i18nSelect', pure: true}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction I18nSelectPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nI18nSelectPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nI18nSelectPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Pipe, PipeTransform} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Converts value into JSON string.\n * \\@howToUse `expression | json`\n * \\@description \n * \n * Converts value into string using `JSON.stringify`. Useful for debugging.\n * \n * ### Example\n * {\\@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n * \n * \\@stable\n */\nexport class JsonPipe implements PipeTransform {\n/**\n * @param {?} value\n * @return {?}\n */\ntransform(value: any): string { return JSON.stringify(value, null, 2); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'json', pure: false}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction JsonPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nJsonPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJsonPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {invalidPipeArgumentError} from './invalid_pipe_argument_error';\n/**\n * \\@ngModule CommonModule\n * \\@whatItDoes Creates a new List or String containing a subset (slice) of the elements.\n * \\@howToUse `array_or_string_expression | slice:start[:end]`\n * \\@description \n * \n * Where the input expression is a `List` or `String`, and:\n * - `start`: The starting index of the subset to return.\n *   - **a positive integer**: return the item at `start` index and all items after\n *     in the list or string expression.\n *   - **a negative integer**: return the item at `start` index from the end and all items after\n *     in the list or string expression.\n *   - **if positive and greater than the size of the expression**: return an empty list or string.\n *   - **if negative and greater than the size of the expression**: return entire list or string.\n * - `end`: The ending index of the subset to return.\n *   - **omitted**: return all items until the end.\n *   - **if positive**: return all items before `end` index of the list or string.\n *   - **if negative**: return all items before `end` index from the end of the list or string.\n * \n * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n * and `String.prototype.slice()`.\n * \n * When operating on a [List], the returned list is always a copy even when all\n * the elements are being returned.\n * \n * When operating on a blank value, the pipe returns the blank value.\n * \n * ## List Example\n * \n * This `ngFor` example:\n * \n * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n * \n * produces the following:\n * \n *     <li>b</li>\n *     <li>c</li>\n * \n * ## String Examples\n * \n * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n * \n * \\@stable\n */\nexport class SlicePipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?} start\n * @param {?=} end\n * @return {?}\n */\ntransform(value: any, start: number, end?: number): any {\n    if (value == null) return value;\n\n    if (!this.supports(value)) {\n      throw invalidPipeArgumentError(SlicePipe, value);\n    }\n\n    return value.slice(start, end);\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nprivate supports(obj: any): boolean { return typeof obj === 'string' || Array.isArray(obj); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'slice', pure: false}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SlicePipe_tsickle_Closure_declarations() {\n/** @type {?} */\nSlicePipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSlicePipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * This module provides a set of common Pipes.\n */\n\nimport {AsyncPipe} from './async_pipe';\nimport {LowerCasePipe, TitleCasePipe, UpperCasePipe} from './case_conversion_pipes';\nimport {DatePipe} from './date_pipe';\nimport {I18nPluralPipe} from './i18n_plural_pipe';\nimport {I18nSelectPipe} from './i18n_select_pipe';\nimport {JsonPipe} from './json_pipe';\nimport {CurrencyPipe, DecimalPipe, PercentPipe} from './number_pipe';\nimport {SlicePipe} from './slice_pipe';\n\nexport {\n  AsyncPipe,\n  CurrencyPipe,\n  DatePipe,\n  DecimalPipe,\n  I18nPluralPipe,\n  I18nSelectPipe,\n  JsonPipe,\n  LowerCasePipe,\n  PercentPipe,\n  SlicePipe,\n  TitleCasePipe,\n  UpperCasePipe\n};\n\n\n/**\n * A collection of Angular pipes that are likely to be used in each and every application.\n */\nexport const /** @type {?} */ COMMON_PIPES = [\n  AsyncPipe,\n  UpperCasePipe,\n  LowerCasePipe,\n  JsonPipe,\n  SlicePipe,\n  DecimalPipe,\n  PercentPipe,\n  TitleCasePipe,\n  CurrencyPipe,\n  DatePipe,\n  I18nPluralPipe,\n  I18nSelectPipe,\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\n\nimport {COMMON_DEPRECATED_DIRECTIVES, COMMON_DIRECTIVES} from './directives/index';\nimport {NgLocaleLocalization, NgLocalization} from './localization';\nimport {COMMON_PIPES} from './pipes/index';\n/**\n * The module that includes all the basic Angular directives like {\\@link NgIf}, {\\@link NgForOf}, ...\n * \n * \\@stable\n */\nexport class CommonModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n  exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n  providers: [\n    {provide: NgLocalization, useClass: NgLocaleLocalization},\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CommonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCommonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCommonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ɵglobal as global} from '@angular/core';\nimport {setRootDomAdapter} from '../dom/dom_adapter';\n\nimport {GenericBrowserDomAdapter} from './generic_browser_adapter';\n\nconst /** @type {?} */ _attrToPropMap = {\n  'class': 'className',\n  'innerHtml': 'innerHTML',\n  'readonly': 'readOnly',\n  'tabindex': 'tabIndex',\n};\n\nconst /** @type {?} */ DOM_KEY_LOCATION_NUMPAD = 3;\n\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nconst /** @type {?} */ _keyMap: {[k: string]: string} = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n};\n\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nconst /** @type {?} */ _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\n\nlet /** @type {?} */ nodeContains: (a: any, b: any) => boolean;\n\nif (global['Node']) {\n  nodeContains = global['Node'].prototype.contains || function(node) {\n    return !!(this.compareDocumentPosition(node) & 16);\n  };\n}\nexport class BrowserDomAdapter extends GenericBrowserDomAdapter {\n/**\n * @param {?} templateHtml\n * @return {?}\n */\nparse(templateHtml: string) { throw new Error('parse not implemented'); }\n/**\n * @return {?}\n */\nstatic makeCurrent() { setRootDomAdapter(new BrowserDomAdapter()); }\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\nhasProperty(element: Node, name: string): boolean { return name in element; }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: Node, name: string, value: any) { ( /** @type {?} */((<any>el)))[name] = value; }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\ngetProperty(el: Node, name: string): any { return ( /** @type {?} */((<any>el)))[name]; }\n/**\n * @param {?} el\n * @param {?} methodName\n * @param {?} args\n * @return {?}\n */\ninvoke(el: Node, methodName: string, args: any[]): any { ( /** @type {?} */((<any>el)))[methodName](...args); }\n/**\n * @param {?} error\n * @return {?}\n */\nlogError(error: string): void {\n    if (window.console) {\n      if (console.error) {\n        console.error(error);\n      } else {\n        console.log(error);\n      }\n    }\n  }\n/**\n * @param {?} error\n * @return {?}\n */\nlog(error: string): void {\n    if (window.console) {\n      window.console.log && window.console.log(error);\n    }\n  }\n/**\n * @param {?} error\n * @return {?}\n */\nlogGroup(error: string): void {\n    if (window.console) {\n      window.console.group && window.console.group(error);\n    }\n  }\n/**\n * @return {?}\n */\nlogGroupEnd(): void {\n    if (window.console) {\n      window.console.groupEnd && window.console.groupEnd();\n    }\n  }\n/**\n * @return {?}\n */\nget attrToPropMap(): any { return _attrToPropMap; }\n/**\n * @param {?} nodeA\n * @param {?} nodeB\n * @return {?}\n */\ncontains(nodeA: any, nodeB: any): boolean { return nodeContains.call(nodeA, nodeB); }\n/**\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nquerySelector(el: Element, selector: string): any { return el.querySelector(selector); }\n/**\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nquerySelectorAll(el: any, selector: string): any[] { return el.querySelectorAll(selector); }\n/**\n * @param {?} el\n * @param {?} evt\n * @param {?} listener\n * @return {?}\n */\non(el: Node, evt: any, listener: any) { el.addEventListener(evt, listener, false); }\n/**\n * @param {?} el\n * @param {?} evt\n * @param {?} listener\n * @return {?}\n */\nonAndCancel(el: Node, evt: any, listener: any): Function {\n    el.addEventListener(evt, listener, false);\n    // Needed to follow Dart's subscription semantic, until fix of\n    // https://code.google.com/p/dart/issues/detail?id=17406\n    return () => { el.removeEventListener(evt, listener, false); };\n  }\n/**\n * @param {?} el\n * @param {?} evt\n * @return {?}\n */\ndispatchEvent(el: Node, evt: any) { el.dispatchEvent(evt); }\n/**\n * @param {?} eventType\n * @return {?}\n */\ncreateMouseEvent(eventType: string): MouseEvent {\n    const /** @type {?} */ evt: MouseEvent = document.createEvent('MouseEvent');\n    evt.initEvent(eventType, true, true);\n    return evt;\n  }\n/**\n * @param {?} eventType\n * @return {?}\n */\ncreateEvent(eventType: any): Event {\n    const /** @type {?} */ evt: Event = document.createEvent('Event');\n    evt.initEvent(eventType, true, true);\n    return evt;\n  }\n/**\n * @param {?} evt\n * @return {?}\n */\npreventDefault(evt: Event) {\n    evt.preventDefault();\n    evt.returnValue = false;\n  }\n/**\n * @param {?} evt\n * @return {?}\n */\nisPrevented(evt: Event): boolean {\n    return evt.defaultPrevented || evt.returnValue != null && !evt.returnValue;\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ngetInnerHTML(el: HTMLElement): string { return el.innerHTML; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetTemplateContent(el: Node): Node {\n    return 'content' in el && el instanceof HTMLTemplateElement ? el.content : null;\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ngetOuterHTML(el: HTMLElement): string { return el.outerHTML; }\n/**\n * @param {?} node\n * @return {?}\n */\nnodeName(node: Node): string { return node.nodeName; }\n/**\n * @param {?} node\n * @return {?}\n */\nnodeValue(node: Node): string { return node.nodeValue; }\n/**\n * @param {?} node\n * @return {?}\n */\ntype(node: HTMLInputElement): string { return node.type; }\n/**\n * @param {?} node\n * @return {?}\n */\ncontent(node: Node): Node {\n    if (this.hasProperty(node, 'content')) {\n      return ( /** @type {?} */((<any>node))).content;\n    } else {\n      return node;\n    }\n  }\n/**\n * @param {?} el\n * @return {?}\n */\nfirstChild(el: Node): Node { return el.firstChild; }\n/**\n * @param {?} el\n * @return {?}\n */\nnextSibling(el: Node): Node { return el.nextSibling; }\n/**\n * @param {?} el\n * @return {?}\n */\nparentElement(el: Node): Node { return el.parentNode; }\n/**\n * @param {?} el\n * @return {?}\n */\nchildNodes(el: any): Node[] { return el.childNodes; }\n/**\n * @param {?} el\n * @return {?}\n */\nchildNodesAsList(el: Node): any[] {\n    const /** @type {?} */ childNodes = el.childNodes;\n    const /** @type {?} */ res = new Array(childNodes.length);\n    for (let /** @type {?} */ i = 0; i < childNodes.length; i++) {\n      res[i] = childNodes[i];\n    }\n    return res;\n  }\n/**\n * @param {?} el\n * @return {?}\n */\nclearNodes(el: Node) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n  }\n/**\n * @param {?} el\n * @param {?} node\n * @return {?}\n */\nappendChild(el: Node, node: Node) { el.appendChild(node); }\n/**\n * @param {?} el\n * @param {?} node\n * @return {?}\n */\nremoveChild(el: Node, node: Node) { el.removeChild(node); }\n/**\n * @param {?} el\n * @param {?} newChild\n * @param {?} oldChild\n * @return {?}\n */\nreplaceChild(el: Node, newChild: Node, oldChild: Node) { el.replaceChild(newChild, oldChild); }\n/**\n * @param {?} node\n * @return {?}\n */\nremove(node: Node): Node {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n    return node;\n  }\n/**\n * @param {?} parent\n * @param {?} ref\n * @param {?} node\n * @return {?}\n */\ninsertBefore(parent: Node, ref: Node, node: Node) { parent.insertBefore(node, ref); }\n/**\n * @param {?} parent\n * @param {?} ref\n * @param {?} nodes\n * @return {?}\n */\ninsertAllBefore(parent: Node, ref: Node, nodes: Node[]) {\n    nodes.forEach((n: any) => parent.insertBefore(n, ref));\n  }\n/**\n * @param {?} parent\n * @param {?} ref\n * @param {?} node\n * @return {?}\n */\ninsertAfter(parent: Node, ref: Node, node: any) { parent.insertBefore(node, ref.nextSibling); }\n/**\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetInnerHTML(el: Element, value: string) { el.innerHTML = value; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetText(el: Node): string { return el.textContent; }\n/**\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetText(el: Node, value: string) { el.textContent = value; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetValue(el: any): string { return el.value; }\n/**\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetValue(el: any, value: string) { el.value = value; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetChecked(el: any): boolean { return el.checked; }\n/**\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetChecked(el: any, value: boolean) { el.checked = value; }\n/**\n * @param {?} text\n * @return {?}\n */\ncreateComment(text: string): Comment { return document.createComment(text); }\n/**\n * @param {?} html\n * @return {?}\n */\ncreateTemplate(html: any): HTMLElement {\n    const /** @type {?} */ t = document.createElement('template');\n    t.innerHTML = html;\n    return t;\n  }\n/**\n * @param {?} tagName\n * @param {?=} doc\n * @return {?}\n */\ncreateElement(tagName: string, doc = document): HTMLElement { return doc.createElement(tagName); }\n/**\n * @param {?} ns\n * @param {?} tagName\n * @param {?=} doc\n * @return {?}\n */\ncreateElementNS(ns: string, tagName: string, doc = document): Element {\n    return doc.createElementNS(ns, tagName);\n  }\n/**\n * @param {?} text\n * @param {?=} doc\n * @return {?}\n */\ncreateTextNode(text: string, doc = document): Text { return doc.createTextNode(text); }\n/**\n * @param {?} attrName\n * @param {?} attrValue\n * @param {?=} doc\n * @return {?}\n */\ncreateScriptTag(attrName: string, attrValue: string, doc = document): HTMLScriptElement {\n    const /** @type {?} */ el = /** @type {?} */(( <HTMLScriptElement>doc.createElement('SCRIPT')));\n    el.setAttribute(attrName, attrValue);\n    return el;\n  }\n/**\n * @param {?} css\n * @param {?=} doc\n * @return {?}\n */\ncreateStyleElement(css: string, doc = document): HTMLStyleElement {\n    const /** @type {?} */ style = /** @type {?} */(( <HTMLStyleElement>doc.createElement('style')));\n    this.appendChild(style, this.createTextNode(css));\n    return style;\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ncreateShadowRoot(el: HTMLElement): DocumentFragment { return ( /** @type {?} */((<any>el))).createShadowRoot(); }\n/**\n * @param {?} el\n * @return {?}\n */\ngetShadowRoot(el: HTMLElement): DocumentFragment { return ( /** @type {?} */((<any>el))).shadowRoot; }\n/**\n * @param {?} el\n * @return {?}\n */\ngetHost(el: HTMLElement): HTMLElement { return ( /** @type {?} */((<any>el))).host; }\n/**\n * @param {?} node\n * @return {?}\n */\nclone(node: Node): Node { return node.cloneNode(true); }\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetElementsByClassName(element: any, name: string): HTMLElement[] {\n    return element.getElementsByClassName(name);\n  }\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetElementsByTagName(element: any, name: string): HTMLElement[] {\n    return element.getElementsByTagName(name);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nclassList(element: any): any[] { return Array.prototype.slice.call(element.classList, 0); }\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\naddClass(element: any, className: string) { element.classList.add(className); }\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nremoveClass(element: any, className: string) { element.classList.remove(className); }\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nhasClass(element: any, className: string): boolean {\n    return element.classList.contains(className);\n  }\n/**\n * @param {?} element\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetStyle(element: any, styleName: string, styleValue: string) {\n    element.style[styleName] = styleValue;\n  }\n/**\n * @param {?} element\n * @param {?} stylename\n * @return {?}\n */\nremoveStyle(element: any, stylename: string) {\n    // IE requires '' instead of null\n    // see https://github.com/angular/angular/issues/7916\n    element.style[stylename] = '';\n  }\n/**\n * @param {?} element\n * @param {?} stylename\n * @return {?}\n */\ngetStyle(element: any, stylename: string): string { return element.style[stylename]; }\n/**\n * @param {?} element\n * @param {?} styleName\n * @param {?=} styleValue\n * @return {?}\n */\nhasStyle(element: any, styleName: string, styleValue: string = null): boolean {\n    const /** @type {?} */ value = this.getStyle(element, styleName) || '';\n    return styleValue ? value == styleValue : value.length > 0;\n  }\n/**\n * @param {?} element\n * @return {?}\n */\ntagName(element: any): string { return element.tagName; }\n/**\n * @param {?} element\n * @return {?}\n */\nattributeMap(element: any): Map<string, string> {\n    const /** @type {?} */ res = new Map<string, string>();\n    const /** @type {?} */ elAttrs = element.attributes;\n    for (let /** @type {?} */ i = 0; i < elAttrs.length; i++) {\n      const /** @type {?} */ attrib = elAttrs[i];\n      res.set(attrib.name, attrib.value);\n    }\n    return res;\n  }\n/**\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\nhasAttribute(element: Element, attribute: string): boolean {\n    return element.hasAttribute(attribute);\n  }\n/**\n * @param {?} element\n * @param {?} ns\n * @param {?} attribute\n * @return {?}\n */\nhasAttributeNS(element: Element, ns: string, attribute: string): boolean {\n    return element.hasAttributeNS(ns, attribute);\n  }\n/**\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\ngetAttribute(element: Element, attribute: string): string {\n    return element.getAttribute(attribute);\n  }\n/**\n * @param {?} element\n * @param {?} ns\n * @param {?} name\n * @return {?}\n */\ngetAttributeNS(element: Element, ns: string, name: string): string {\n    return element.getAttributeNS(ns, name);\n  }\n/**\n * @param {?} element\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetAttribute(element: Element, name: string, value: string) { element.setAttribute(name, value); }\n/**\n * @param {?} element\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetAttributeNS(element: Element, ns: string, name: string, value: string) {\n    element.setAttributeNS(ns, name, value);\n  }\n/**\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\nremoveAttribute(element: Element, attribute: string) { element.removeAttribute(attribute); }\n/**\n * @param {?} element\n * @param {?} ns\n * @param {?} name\n * @return {?}\n */\nremoveAttributeNS(element: Element, ns: string, name: string) {\n    element.removeAttributeNS(ns, name);\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ntemplateAwareRoot(el: Node): any { return this.isTemplateElement(el) ? this.content(el) : el; }\n/**\n * @return {?}\n */\ncreateHtmlDocument(): HTMLDocument {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ngetBoundingClientRect(el: Element): any {\n    try {\n      return el.getBoundingClientRect();\n    } catch ( /** @type {?} */e) {\n      return {top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0};\n    }\n  }\n/**\n * @param {?} doc\n * @return {?}\n */\ngetTitle(doc: Document): string { return document.title; }\n/**\n * @param {?} doc\n * @param {?} newTitle\n * @return {?}\n */\nsetTitle(doc: Document, newTitle: string) { document.title = newTitle || ''; }\n/**\n * @param {?} n\n * @param {?} selector\n * @return {?}\n */\nelementMatches(n: any, selector: string): boolean {\n    if (n instanceof HTMLElement) {\n      return n.matches && n.matches(selector) ||\n          n.msMatchesSelector && n.msMatchesSelector(selector) ||\n          n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n\n    return false;\n  }\n/**\n * @param {?} el\n * @return {?}\n */\nisTemplateElement(el: Node): boolean {\n    return el instanceof HTMLElement && el.nodeName == 'TEMPLATE';\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nisTextNode(node: Node): boolean { return node.nodeType === Node.TEXT_NODE; }\n/**\n * @param {?} node\n * @return {?}\n */\nisCommentNode(node: Node): boolean { return node.nodeType === Node.COMMENT_NODE; }\n/**\n * @param {?} node\n * @return {?}\n */\nisElementNode(node: Node): boolean { return node.nodeType === Node.ELEMENT_NODE; }\n/**\n * @param {?} node\n * @return {?}\n */\nhasShadowRoot(node: any): boolean {\n    return node.shadowRoot != null && node instanceof HTMLElement;\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nisShadowRoot(node: any): boolean { return node instanceof DocumentFragment; }\n/**\n * @param {?} node\n * @return {?}\n */\nimportIntoDoc(node: Node): any { return document.importNode(this.templateAwareRoot(node), true); }\n/**\n * @param {?} node\n * @return {?}\n */\nadoptNode(node: Node): any { return document.adoptNode(node); }\n/**\n * @param {?} el\n * @return {?}\n */\ngetHref(el: Element): string { return ( /** @type {?} */((<any>el))).href; }\n/**\n * @param {?} event\n * @return {?}\n */\ngetEventKey(event: any): string {\n    let /** @type {?} */ key = event.key;\n    if (key == null) {\n      key = event.keyIdentifier;\n      // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n      // Safari cf\n      // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n      if (key == null) {\n        return 'Unidentified';\n      }\n      if (key.startsWith('U+')) {\n        key = String.fromCharCode(parseInt(key.substring(2), 16));\n        if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n          // There is a bug in Chrome for numeric keypad keys:\n          // https://code.google.com/p/chromium/issues/detail?id=155654\n          // 1, 2, 3 ... are reported as A, B, C ...\n          key = ( /** @type {?} */((_chromeNumKeyPadMap as any)))[key];\n        }\n      }\n    }\n\n    return _keyMap[key] || key;\n  }\n/**\n * @param {?} doc\n * @param {?} target\n * @return {?}\n */\ngetGlobalEventTarget(doc: Document, target: string): EventTarget {\n    if (target === 'window') {\n      return window;\n    }\n    if (target === 'document') {\n      return document;\n    }\n    if (target === 'body') {\n      return document.body;\n    }\n  }\n/**\n * @return {?}\n */\ngetHistory(): History { return window.history; }\n/**\n * @return {?}\n */\ngetLocation(): Location { return window.location; }\n/**\n * @param {?} doc\n * @return {?}\n */\ngetBaseHref(doc: Document): string {\n    const /** @type {?} */ href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n/**\n * @return {?}\n */\nresetBaseElement(): void { baseElement = null; }\n/**\n * @return {?}\n */\ngetUserAgent(): string { return window.navigator.userAgent; }\n/**\n * @param {?} element\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetData(element: Element, name: string, value: string) {\n    this.setAttribute(element, 'data-' + name, value);\n  }\n/**\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetData(element: Element, name: string): string {\n    return this.getAttribute(element, 'data-' + name);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\ngetComputedStyle(element: any): any { return getComputedStyle(element); }\n/**\n * @param {?} path\n * @param {?} value\n * @return {?}\n */\nsetGlobalVar(path: string, value: any) { setValueOnPath(global, path, value); }\n/**\n * @return {?}\n */\nsupportsWebAnimation(): boolean {\n    return typeof( /** @type {?} */((<any>Element))).prototype['animate'] === 'function';\n  }\n/**\n * @return {?}\n */\nperformanceNow(): number {\n    // performance.now() is not available in all browsers, see\n    // http://caniuse.com/#search=performance.now\n    return window.performance && window.performance.now ? window.performance.now() :\n                                                          new Date().getTime();\n  }\n/**\n * @return {?}\n */\nsupportsCookies(): boolean { return true; }\n/**\n * @param {?} name\n * @return {?}\n */\ngetCookie(name: string): string { return parseCookieValue(document.cookie, name); }\n/**\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetCookie(name: string, value: string) {\n    // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n    // not clear other cookies.\n    document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n  }\n}\n\nlet /** @type {?} */ baseElement: HTMLElement = null;\n/**\n * @return {?}\n */\nfunction getBaseElementHref(): string {\n  if (!baseElement) {\n    baseElement = document.querySelector('base');\n    if (!baseElement) {\n      return null;\n    }\n  }\n  return baseElement.getAttribute('href');\n}\n\n// based on urlUtils.js in AngularJS 1\nlet /** @type {?} */ urlParsingNode: any;\n/**\n * @param {?} url\n * @return {?}\n */\nfunction relativePath(url: any): string {\n  if (!urlParsingNode) {\n    urlParsingNode = document.createElement('a');\n  }\n  urlParsingNode.setAttribute('href', url);\n  return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n                                                       '/' + urlParsingNode.pathname;\n}\n/**\n * @param {?} cookieStr\n * @param {?} name\n * @return {?}\n */\nexport function parseCookieValue(cookieStr: string, name: string): string {\n  name = encodeURIComponent(name);\n  for (const /** @type {?} */ cookie of cookieStr.split(';')) {\n    const /** @type {?} */ eqIndex = cookie.indexOf('=');\n    const [cookieName, cookieValue]: string[] =\n        eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)];\n    if (cookieName.trim() === name) {\n      return decodeURIComponent(cookieValue);\n    }\n  }\n  return null;\n}\n/**\n * @param {?} global\n * @param {?} path\n * @param {?} value\n * @return {?}\n */\nexport function setValueOnPath(global: any, path: string, value: any) {\n  const /** @type {?} */ parts = path.split('.');\n  let /** @type {?} */ obj: any = global;\n  while (parts.length > 1) {\n    const /** @type {?} */ name = parts.shift();\n    if (obj.hasOwnProperty(name) && obj[name] != null) {\n      obj = obj[name];\n    } else {\n      obj = obj[name] = {};\n    }\n  }\n  if (obj === undefined || obj === null) {\n    obj = {};\n  }\n  obj[parts.shift()] = value;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '@angular/core';\n\nlet /** @type {?} */ _DOM: DomAdapter = null;\n/**\n * @return {?}\n */\nexport function getDOM() {\n  return _DOM;\n}\n/**\n * @param {?} adapter\n * @return {?}\n */\nexport function setDOM(adapter: DomAdapter) {\n  _DOM = adapter;\n}\n/**\n * @param {?} adapter\n * @return {?}\n */\nexport function setRootDomAdapter(adapter: DomAdapter) {\n  if (!_DOM) {\n    _DOM = adapter;\n  }\n}\n/**\n * Provides DOM operations in an environment-agnostic way.\n * \n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n * @abstract\n */\nexport abstract class DomAdapter {\npublic resourceLoaderType: Type<any> = null;\n/**\n * @abstract\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\nhasProperty(element: any, name: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: Element, name: string, value: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\ngetProperty(el: Element, name: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} methodName\n * @param {?} args\n * @return {?}\n */\ninvoke(el: Element, methodName: string, args: any[]) {}\n/**\n * @abstract\n * @param {?} error\n * @return {?}\n */\nlogError(error: any) {}\n/**\n * @abstract\n * @param {?} error\n * @return {?}\n */\nlog(error: any) {}\n/**\n * @abstract\n * @param {?} error\n * @return {?}\n */\nlogGroup(error: any) {}\n/**\n * @abstract\n * @return {?}\n */\nlogGroupEnd() {}\n/**\n * Maps attribute names to their corresponding property names for cases\n * where attribute name doesn't match property name.\n * @return {?}\n */\nget attrToPropMap(): {[key: string]: string} { return this._attrToPropMap; };\n/**\n * @param {?} value\n * @return {?}\n */\nset attrToPropMap(value: {[key: string]: string}) { this._attrToPropMap = value; };\n/**\n * \\@internal\n */\n_attrToPropMap: {[key: string]: string};\n/**\n * @abstract\n * @param {?} nodeA\n * @param {?} nodeB\n * @return {?}\n */\ncontains(nodeA: any, nodeB: any) {}\n/**\n * @abstract\n * @param {?} templateHtml\n * @return {?}\n */\nparse(templateHtml: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nquerySelector(el: any, selector: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nquerySelectorAll(el: any, selector: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} evt\n * @param {?} listener\n * @return {?}\n */\non(el: any, evt: any, listener: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} evt\n * @param {?} listener\n * @return {?}\n */\nonAndCancel(el: any, evt: any, listener: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} evt\n * @return {?}\n */\ndispatchEvent(el: any, evt: any) {}\n/**\n * @abstract\n * @param {?} eventType\n * @return {?}\n */\ncreateMouseEvent(eventType: any) {}\n/**\n * @abstract\n * @param {?} eventType\n * @return {?}\n */\ncreateEvent(eventType: string) {}\n/**\n * @abstract\n * @param {?} evt\n * @return {?}\n */\npreventDefault(evt: any) {}\n/**\n * @abstract\n * @param {?} evt\n * @return {?}\n */\nisPrevented(evt: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetInnerHTML(el: any) {}\n/**\n * Returns content if el is a <template> element, null otherwise.\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetTemplateContent(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetOuterHTML(el: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nnodeName(node: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nnodeValue(node: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\ntype(node: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\ncontent(node: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\nfirstChild(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\nnextSibling(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\nparentElement(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\nchildNodes(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\nchildNodesAsList(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\nclearNodes(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} node\n * @return {?}\n */\nappendChild(el: any, node: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} node\n * @return {?}\n */\nremoveChild(el: any, node: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} newNode\n * @param {?} oldNode\n * @return {?}\n */\nreplaceChild(el: any, newNode: any, oldNode: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\nremove(el: any) {}\n/**\n * @abstract\n * @param {?} parent\n * @param {?} ref\n * @param {?} node\n * @return {?}\n */\ninsertBefore(parent: any, ref: any, node: any) {}\n/**\n * @abstract\n * @param {?} parent\n * @param {?} ref\n * @param {?} nodes\n * @return {?}\n */\ninsertAllBefore(parent: any, ref: any, nodes: any) {}\n/**\n * @abstract\n * @param {?} parent\n * @param {?} el\n * @param {?} node\n * @return {?}\n */\ninsertAfter(parent: any, el: any, node: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetInnerHTML(el: any, value: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetText(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetText(el: any, value: string) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetValue(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetValue(el: any, value: string) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetChecked(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} value\n * @return {?}\n */\nsetChecked(el: any, value: boolean) {}\n/**\n * @abstract\n * @param {?} text\n * @return {?}\n */\ncreateComment(text: string) {}\n/**\n * @abstract\n * @param {?} html\n * @return {?}\n */\ncreateTemplate(html: any) {}\n/**\n * @abstract\n * @param {?} tagName\n * @param {?=} doc\n * @return {?}\n */\ncreateElement(tagName: any, doc?: any) {}\n/**\n * @abstract\n * @param {?} ns\n * @param {?} tagName\n * @param {?=} doc\n * @return {?}\n */\ncreateElementNS(ns: string, tagName: string, doc?: any) {}\n/**\n * @abstract\n * @param {?} text\n * @param {?=} doc\n * @return {?}\n */\ncreateTextNode(text: string, doc?: any) {}\n/**\n * @abstract\n * @param {?} attrName\n * @param {?} attrValue\n * @param {?=} doc\n * @return {?}\n */\ncreateScriptTag(attrName: string, attrValue: string, doc?: any) {}\n/**\n * @abstract\n * @param {?} css\n * @param {?=} doc\n * @return {?}\n */\ncreateStyleElement(css: string, doc?: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ncreateShadowRoot(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetShadowRoot(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetHost(el: any) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetDistributedNodes(el: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nclone /*<T extends Node>*/ (node: Node) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetElementsByClassName(element: any, name: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetElementsByTagName(element: any, name: string) {}\n/**\n * @abstract\n * @param {?} element\n * @return {?}\n */\nclassList(element: any) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\naddClass(element: any, className: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nremoveClass(element: any, className: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nhasClass(element: any, className: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetStyle(element: any, styleName: string, styleValue: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} styleName\n * @return {?}\n */\nremoveStyle(element: any, styleName: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} styleName\n * @return {?}\n */\ngetStyle(element: any, styleName: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} styleName\n * @param {?=} styleValue\n * @return {?}\n */\nhasStyle(element: any, styleName: string, styleValue?: string) {}\n/**\n * @abstract\n * @param {?} element\n * @return {?}\n */\ntagName(element: any) {}\n/**\n * @abstract\n * @param {?} element\n * @return {?}\n */\nattributeMap(element: any) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\nhasAttribute(element: any, attribute: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} ns\n * @param {?} attribute\n * @return {?}\n */\nhasAttributeNS(element: any, ns: string, attribute: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\ngetAttribute(element: any, attribute: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} ns\n * @param {?} attribute\n * @return {?}\n */\ngetAttributeNS(element: any, ns: string, attribute: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetAttribute(element: any, name: string, value: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetAttributeNS(element: any, ns: string, name: string, value: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} attribute\n * @return {?}\n */\nremoveAttribute(element: any, attribute: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} ns\n * @param {?} attribute\n * @return {?}\n */\nremoveAttributeNS(element: any, ns: string, attribute: string) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ntemplateAwareRoot(el: any) {}\n/**\n * @abstract\n * @return {?}\n */\ncreateHtmlDocument() {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\ngetBoundingClientRect(el: any) {}\n/**\n * @abstract\n * @param {?} doc\n * @return {?}\n */\ngetTitle(doc: Document) {}\n/**\n * @abstract\n * @param {?} doc\n * @param {?} newTitle\n * @return {?}\n */\nsetTitle(doc: Document, newTitle: string) {}\n/**\n * @abstract\n * @param {?} n\n * @param {?} selector\n * @return {?}\n */\nelementMatches(n: any, selector: string) {}\n/**\n * @abstract\n * @param {?} el\n * @return {?}\n */\nisTemplateElement(el: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nisTextNode(node: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nisCommentNode(node: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nisElementNode(node: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nhasShadowRoot(node: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nisShadowRoot(node: any) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nimportIntoDoc /*<T extends Node>*/ (node: Node) {}\n/**\n * @abstract\n * @param {?} node\n * @return {?}\n */\nadoptNode /*<T extends Node>*/ (node: Node) {}\n/**\n * @abstract\n * @param {?} element\n * @return {?}\n */\ngetHref(element: any) {}\n/**\n * @abstract\n * @param {?} event\n * @return {?}\n */\ngetEventKey(event: any) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} baseUrl\n * @param {?} href\n * @return {?}\n */\nresolveAndSetHref(element: any, baseUrl: string, href: string) {}\n/**\n * @abstract\n * @return {?}\n */\nsupportsDOMEvents() {}\n/**\n * @abstract\n * @return {?}\n */\nsupportsNativeShadowDOM() {}\n/**\n * @abstract\n * @param {?} doc\n * @param {?} target\n * @return {?}\n */\ngetGlobalEventTarget(doc: Document, target: string) {}\n/**\n * @abstract\n * @return {?}\n */\ngetHistory() {}\n/**\n * @abstract\n * @return {?}\n */\ngetLocation() {}\n/**\n * @abstract\n * @param {?} doc\n * @return {?}\n */\ngetBaseHref(doc: Document) {}\n/**\n * @abstract\n * @return {?}\n */\nresetBaseElement() {}\n/**\n * @abstract\n * @return {?}\n */\ngetUserAgent() {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetData(element: any, name: string, value: string) {}\n/**\n * @abstract\n * @param {?} element\n * @return {?}\n */\ngetComputedStyle(element: any) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} name\n * @return {?}\n */\ngetData(element: any, name: string) {}\n/**\n * @abstract\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetGlobalVar(name: string, value: any) {}\n/**\n * @abstract\n * @return {?}\n */\nsupportsWebAnimation() {}\n/**\n * @abstract\n * @return {?}\n */\nperformanceNow() {}\n/**\n * @abstract\n * @return {?}\n */\ngetAnimationPrefix() {}\n/**\n * @abstract\n * @return {?}\n */\ngetTransitionEnd() {}\n/**\n * @abstract\n * @return {?}\n */\nsupportsAnimation() {}\n/**\n * @abstract\n * @return {?}\n */\nsupportsCookies() {}\n/**\n * @abstract\n * @param {?} name\n * @return {?}\n */\ngetCookie(name: string) {}\n/**\n * @abstract\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetCookie(name: string, value: string) {}\n}\n\nfunction DomAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nDomAdapter.prototype.resourceLoaderType;\n/**\n * \\@internal\n * @type {?}\n */\nDomAdapter.prototype._attrToPropMap;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {DomAdapter} from '../dom/dom_adapter';\n/**\n * Provides DOM operations in any browser environment.\n * \n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n * @abstract\n */\nexport abstract class GenericBrowserDomAdapter extends DomAdapter {\nprivate _animationPrefix: string = null;\nprivate _transitionEnd: string = null;\nconstructor() {\n    super();\n    try {\n      const element = this.createElement('div', document);\n      if (this.getStyle(element, 'animationName') != null) {\n        this._animationPrefix = '';\n      } else {\n        const domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n\n        for (let i = 0; i < domPrefixes.length; i++) {\n          if (this.getStyle(element, domPrefixes[i] + 'AnimationName') != null) {\n            this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n            break;\n          }\n        }\n      }\n\n      const transEndEventNames: {[key: string]: string} = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend'\n      };\n\n      Object.keys(transEndEventNames).forEach((key: string) => {\n        if (this.getStyle(element, key) != null) {\n          this._transitionEnd = transEndEventNames[key];\n        }\n      });\n    } catch (e) {\n      this._animationPrefix = null;\n      this._transitionEnd = null;\n    }\n  }\n/**\n * @param {?} el\n * @return {?}\n */\ngetDistributedNodes(el: HTMLElement): Node[] { return ( /** @type {?} */((<any>el))).getDistributedNodes(); }\n/**\n * @param {?} el\n * @param {?} baseUrl\n * @param {?} href\n * @return {?}\n */\nresolveAndSetHref(el: HTMLAnchorElement, baseUrl: string, href: string) {\n    el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n  }\n/**\n * @return {?}\n */\nsupportsDOMEvents(): boolean { return true; }\n/**\n * @return {?}\n */\nsupportsNativeShadowDOM(): boolean {\n    return typeof( /** @type {?} */((<any>document.body))).createShadowRoot === 'function';\n  }\n/**\n * @return {?}\n */\ngetAnimationPrefix(): string { return this._animationPrefix ? this._animationPrefix : ''; }\n/**\n * @return {?}\n */\ngetTransitionEnd(): string { return this._transitionEnd ? this._transitionEnd : ''; }\n/**\n * @return {?}\n */\nsupportsAnimation(): boolean {\n    return this._animationPrefix != null && this._transitionEnd != null;\n  }\n}\n\nfunction GenericBrowserDomAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nGenericBrowserDomAdapter.prototype._animationPrefix;\n/** @type {?} */\nGenericBrowserDomAdapter.prototype._transitionEnd;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {LocationChangeListener, PlatformLocation} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\nimport {getDOM} from '../../dom/dom_adapter';\nimport {DOCUMENT} from '../../dom/dom_tokens';\n\nimport {supportsState} from './history';\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {\\@link Location}.\n */\nexport class BrowserPlatformLocation extends PlatformLocation {\nprivate _location: Location;\nprivate _history: History;\n/**\n * @param {?} _doc\n */\nconstructor(\nprivate _doc: any) {\n    super();\n    this._init();\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_init() {\n    this._location = getDOM().getLocation();\n    this._history = getDOM().getHistory();\n  }\n/**\n * @return {?}\n */\nget location(): Location { return this._location; }\n/**\n * @return {?}\n */\ngetBaseHrefFromDOM(): string { return getDOM().getBaseHref(this._doc); }\n/**\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener): void {\n    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonHashChange(fn: LocationChangeListener): void {\n    getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);\n  }\n/**\n * @return {?}\n */\nget pathname(): string { return this._location.pathname; }\n/**\n * @return {?}\n */\nget search(): string { return this._location.search; }\n/**\n * @return {?}\n */\nget hash(): string { return this._location.hash; }\n/**\n * @param {?} newPath\n * @return {?}\n */\nset pathname(newPath: string) { this._location.pathname = newPath; }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @return {?}\n */\npushState(state: any, title: string, url: string): void {\n    if (supportsState()) {\n      this._history.pushState(state, title, url);\n    } else {\n      this._location.hash = url;\n    }\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @return {?}\n */\nreplaceState(state: any, title: string, url: string): void {\n    if (supportsState()) {\n      this._history.replaceState(state, title, url);\n    } else {\n      this._location.hash = url;\n    }\n  }\n/**\n * @return {?}\n */\nforward(): void { this._history.forward(); }\n/**\n * @return {?}\n */\nback(): void { this._history.back(); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction BrowserPlatformLocation_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserPlatformLocation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserPlatformLocation.ctorParameters;\n/** @type {?} */\nBrowserPlatformLocation.prototype._location;\n/** @type {?} */\nBrowserPlatformLocation.prototype._history;\n/** @type {?} */\nBrowserPlatformLocation.prototype._doc;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable} from '@angular/core';\n\nimport {DomAdapter, getDOM} from '../dom/dom_adapter';\nimport {DOCUMENT} from '../dom/dom_tokens';\n\n\n/**\n * Represents a meta element.\n *\n * @experimental\n */\nexport type MetaDefinition = {\n  charset?: string; content?: string; httpEquiv?: string; id?: string; itemprop?: string;\n  name?: string;\n  property?: string;\n  scheme?: string;\n  url?: string;\n} &\n{\n  // TODO(IgorMinar): this type looks wrong\n  [prop: string]: string;\n};\n/**\n * A service that can be used to get and add meta tags.\n * \n * \\@experimental\n */\nexport class Meta {\nprivate _dom: DomAdapter;\n/**\n * @param {?} _doc\n */\nconstructor(\nprivate _doc: any) { this._dom = getDOM(); }\n/**\n * @param {?} tag\n * @param {?=} forceCreation\n * @return {?}\n */\naddTag(tag: MetaDefinition, forceCreation: boolean = false): HTMLMetaElement {\n    if (!tag) return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n/**\n * @param {?} tags\n * @param {?=} forceCreation\n * @return {?}\n */\naddTags(tags: MetaDefinition[], forceCreation: boolean = false): HTMLMetaElement[] {\n    if (!tags) return [];\n    return tags.reduce((result: HTMLMetaElement[], tag: MetaDefinition) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n      return result;\n    }, []);\n  }\n/**\n * @param {?} attrSelector\n * @return {?}\n */\ngetTag(attrSelector: string): HTMLMetaElement {\n    if (!attrSelector) return null;\n    return this._dom.querySelector(this._doc, `meta[${attrSelector}]`);\n  }\n/**\n * @param {?} attrSelector\n * @return {?}\n */\ngetTags(attrSelector: string): HTMLMetaElement[] {\n    if (!attrSelector) return [];\n    const /** @type {?} */ list /*NodeList*/ = this._dom.querySelectorAll(this._doc, `meta[${attrSelector}]`);\n    return list ? [].slice.call(list) : [];\n  }\n/**\n * @param {?} tag\n * @param {?=} selector\n * @return {?}\n */\nupdateTag(tag: MetaDefinition, selector?: string): HTMLMetaElement {\n    if (!tag) return null;\n    selector = selector || this._parseSelector(tag);\n    const /** @type {?} */ meta: HTMLMetaElement = this.getTag(selector);\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n    return this._getOrCreateElement(tag, true);\n  }\n/**\n * @param {?} attrSelector\n * @return {?}\n */\nremoveTag(attrSelector: string): void { this.removeTagElement(this.getTag(attrSelector)); }\n/**\n * @param {?} meta\n * @return {?}\n */\nremoveTagElement(meta: HTMLMetaElement): void {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n/**\n * @param {?} meta\n * @param {?=} forceCreation\n * @return {?}\n */\nprivate _getOrCreateElement(meta: MetaDefinition, forceCreation: boolean = false):\n      HTMLMetaElement {\n    if (!forceCreation) {\n      const /** @type {?} */ selector: string = this._parseSelector(meta);\n      const /** @type {?} */ elem: HTMLMetaElement = this.getTag(selector);\n      // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n      if (elem && this._containsAttributes(meta, elem)) return elem;\n    }\n    const /** @type {?} */ element: HTMLMetaElement = /** @type {?} */(( this._dom.createElement('meta') as HTMLMetaElement));\n    this._setMetaElementAttributes(meta, element);\n    const /** @type {?} */ head = this._dom.getElementsByTagName(this._doc, 'head')[0];\n    this._dom.appendChild(head, element);\n    return element;\n  }\n/**\n * @param {?} tag\n * @param {?} el\n * @return {?}\n */\nprivate _setMetaElementAttributes(tag: MetaDefinition, el: HTMLMetaElement): HTMLMetaElement {\n    Object.keys(tag).forEach((prop: string) => this._dom.setAttribute(el, prop, tag[prop]));\n    return el;\n  }\n/**\n * @param {?} tag\n * @return {?}\n */\nprivate _parseSelector(tag: MetaDefinition): string {\n    const /** @type {?} */ attr: string = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n/**\n * @param {?} tag\n * @param {?} elem\n * @return {?}\n */\nprivate _containsAttributes(tag: MetaDefinition, elem: HTMLMetaElement): boolean {\n    return Object.keys(tag).every((key: string) => this._dom.getAttribute(elem, key) === tag[key]);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction Meta_tsickle_Closure_declarations() {\n/** @type {?} */\nMeta.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMeta.ctorParameters;\n/** @type {?} */\nMeta.prototype._dom;\n/** @type {?} */\nMeta.prototype._doc;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {APP_INITIALIZER, Inject, InjectionToken, Provider} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\nimport {DOCUMENT} from '../dom/dom_tokens';\n\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nexport const /** @type {?} */ TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n/**\n * @param {?} transitionId\n * @param {?} document\n * @return {?}\n */\nexport function bootstrapListenerFactory(transitionId: string, document: any) {\n  const /** @type {?} */ factory = () => {\n    const /** @type {?} */ dom = getDOM();\n    const /** @type {?} */ styles: any[] =\n        Array.prototype.slice.apply(dom.querySelectorAll(document, `style[ng-transition]`));\n    styles.filter(el => dom.getAttribute(el, 'ng-transition') === transitionId)\n        .forEach(el => dom.remove(el));\n  };\n  return factory;\n}\n\nexport const /** @type {?} */ SERVER_TRANSITION_PROVIDERS: Provider[] = [\n  {\n    provide: APP_INITIALIZER,\n    useFactory: bootstrapListenerFactory,\n    deps: [TRANSITION_ID, DOCUMENT],\n    multi: true\n  },\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {GetTestability, Testability, TestabilityRegistry, setTestabilityGetter, ɵglobal as global} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\nexport class BrowserGetTestability implements GetTestability {\n/**\n * @return {?}\n */\nstatic init() { setTestabilityGetter(new BrowserGetTestability()); }\n/**\n * @param {?} registry\n * @return {?}\n */\naddToWindow(registry: TestabilityRegistry): void {\n    global['getAngularTestability'] = (elem: any, findInAncestors: boolean = true) => {\n      const /** @type {?} */ testability = registry.findTestabilityInTree(elem, findInAncestors);\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n      return testability;\n    };\n\n    global['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n\n    global['getAllAngularRootElements'] = () => registry.getAllRootElements();\n\n    const /** @type {?} */ whenAllStable = (callback: any /** TODO #9100 */) => {\n      const /** @type {?} */ testabilities = global['getAllAngularTestabilities']();\n      let /** @type {?} */ count = testabilities.length;\n      let /** @type {?} */ didWork = false;\n      const /** @type {?} */ decrement = function(didWork_: any /** TODO #9100 */) {\n        didWork = didWork || didWork_;\n        count--;\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n      testabilities.forEach(function(testability: any /** TODO #9100 */) {\n        testability.whenStable(decrement);\n      });\n    };\n\n    if (!global['frameworkStabilizers']) {\n      global['frameworkStabilizers'] = [];\n    }\n    global['frameworkStabilizers'].push(whenAllStable);\n  }\n/**\n * @param {?} registry\n * @param {?} elem\n * @param {?} findInAncestors\n * @return {?}\n */\nfindTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability {\n    if (elem == null) {\n      return null;\n    }\n    const /** @type {?} */ t = registry.getTestability(elem);\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n    if (getDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n    }\n    return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\nimport {DOCUMENT} from '../dom/dom_tokens';\n/**\n * A service that can be used to get and set the title of a current HTML document.\n * \n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n * \n * \\@experimental\n */\nexport class Title {\n/**\n * @param {?} _doc\n */\nconstructor(\nprivate _doc: any) {}\n/**\n * Get the title of the current HTML document.\n * @return {?}\n */\ngetTitle(): string { return getDOM().getTitle(this._doc); }\n/**\n * Set the title of the current HTML document.\n * @param {?} newTitle\n * @return {?}\n */\nsetTitle(newTitle: string) { getDOM().setTitle(this._doc, newTitle); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction Title_tsickle_Closure_declarations() {\n/** @type {?} */\nTitle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTitle.ctorParameters;\n/** @type {?} */\nTitle.prototype._doc;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport * as core from '@angular/core';\nimport {getDOM} from '../dom_adapter';\n\nconst /** @type {?} */ CORE_TOKENS = {\n  'ApplicationRef': core.ApplicationRef,\n  'NgZone': core.NgZone,\n};\n\nconst /** @type {?} */ INSPECT_GLOBAL_NAME = 'ng.probe';\nconst /** @type {?} */ CORE_TOKENS_GLOBAL_NAME = 'ng.coreTokens';\n/**\n * Returns a {\\@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n * @param {?} element\n * @return {?}\n */\nexport function inspectNativeElement(element: any): core.DebugNode {\n  return core.getDebugNode(element);\n}\n/**\n * Deprecated. Use the one from '\\@angular/core'.\n * @deprecated\n */\nexport class NgProbeToken {\n/**\n * @param {?} name\n * @param {?} token\n */\nconstructor(public name: string,\npublic token: any) {}\n}\n\nfunction NgProbeToken_tsickle_Closure_declarations() {\n/** @type {?} */\nNgProbeToken.prototype.name;\n/** @type {?} */\nNgProbeToken.prototype.token;\n}\n\n/**\n * @param {?} extraTokens\n * @param {?} coreTokens\n * @return {?}\n */\nexport function _createNgProbe(extraTokens: NgProbeToken[], coreTokens: core.NgProbeToken[]): any {\n  const /** @type {?} */ tokens = (extraTokens || []).concat(coreTokens || []);\n  getDOM().setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n  getDOM().setGlobalVar(\n      CORE_TOKENS_GLOBAL_NAME, core.ɵmerge(CORE_TOKENS, _ngProbeTokensToMap(tokens || [])));\n  return () => inspectNativeElement;\n}\n/**\n * @param {?} tokens\n * @return {?}\n */\nfunction _ngProbeTokensToMap(tokens: NgProbeToken[]): {[name: string]: any} {\n  return tokens.reduce((prev: any, t: any) => (prev[t.name] = t.token, prev), {});\n}\n\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nexport const /** @type {?} */ ELEMENT_PROBE_PROVIDERS: core.Provider[] = [\n  {\n    provide: core.APP_INITIALIZER,\n    useFactory: _createNgProbe,\n    deps: [\n      [NgProbeToken, new core.Optional()],\n      [core.NgProbeToken, new core.Optional()],\n    ],\n    multi: true,\n  },\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isJsObject} from '../change_detection_util';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory} from './keyvalue_differs';\nexport class DefaultKeyValueDifferFactory<K, V> implements KeyValueDifferFactory {\nconstructor() {}\n/**\n * @param {?} obj\n * @return {?}\n */\nsupports(obj: any): boolean { return obj instanceof Map || isJsObject(obj); }\n\n  create<K, V>(): DefaultKeyValueDiffer<K, V>;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @template K, V\n * @param {?=} cd\n * @return {?}\n */\ncreate<K, V>(cd?: ChangeDetectorRef): KeyValueDiffer<K, V> {\n    return new DefaultKeyValueDiffer<K, V>();\n  }\n}\nexport class DefaultKeyValueDiffer<K, V> implements KeyValueDiffer<K, V>, KeyValueChanges<K, V> {\nprivate _records: Map<K, V> = new Map<K, V>();\nprivate _mapHead: KeyValueChangeRecord_<K, V> = null;\nprivate _previousMapHead: KeyValueChangeRecord_<K, V> = null;\nprivate _changesHead: KeyValueChangeRecord_<K, V> = null;\nprivate _changesTail: KeyValueChangeRecord_<K, V> = null;\nprivate _additionsHead: KeyValueChangeRecord_<K, V> = null;\nprivate _additionsTail: KeyValueChangeRecord_<K, V> = null;\nprivate _removalsHead: KeyValueChangeRecord_<K, V> = null;\nprivate _removalsTail: KeyValueChangeRecord_<K, V> = null;\n/**\n * @return {?}\n */\nget isDirty(): boolean {\n    return this._additionsHead !== null || this._changesHead !== null ||\n        this._removalsHead !== null;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._mapHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} map\n * @return {?}\n */\ndiff(map: Map<any, any>|{[k: string]: any}): any {\n    if (!map) {\n      map = new Map();\n    } else if (!(map instanceof Map || isJsObject(map))) {\n      throw new Error(`Error trying to diff '${map}'`);\n    }\n\n    return this.check(map) ? this : null;\n  }\n/**\n * @return {?}\n */\nonDestroy() {}\n/**\n * @param {?} map\n * @return {?}\n */\ncheck(map: Map<any, any>|{[k: string]: any}): boolean {\n    this._reset();\n    const /** @type {?} */ records = this._records;\n    let /** @type {?} */ oldSeqRecord: KeyValueChangeRecord_<K, V> = this._mapHead;\n    let /** @type {?} */ lastOldSeqRecord: KeyValueChangeRecord_<K, V> = null;\n    let /** @type {?} */ lastNewSeqRecord: KeyValueChangeRecord_<K, V> = null;\n    let /** @type {?} */ seqChanged: boolean = false;\n\n    this._forEach(map, (value: any, key: any) => {\n      let /** @type {?} */ newSeqRecord: any;\n      if (oldSeqRecord && key === oldSeqRecord.key) {\n        newSeqRecord = oldSeqRecord;\n        this._maybeAddToChanges(newSeqRecord, value);\n      } else {\n        seqChanged = true;\n        if (oldSeqRecord !== null) {\n          this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);\n          this._addToRemovals(oldSeqRecord);\n        }\n        if (records.has(key)) {\n          newSeqRecord = records.get(key);\n          this._maybeAddToChanges(newSeqRecord, value);\n        } else {\n          newSeqRecord = new KeyValueChangeRecord_<K, V>(key);\n          records.set(key, newSeqRecord);\n          newSeqRecord.currentValue = value;\n          this._addToAdditions(newSeqRecord);\n        }\n      }\n\n      if (seqChanged) {\n        if (this._isInRemovals(newSeqRecord)) {\n          this._removeFromRemovals(newSeqRecord);\n        }\n        if (lastNewSeqRecord == null) {\n          this._mapHead = newSeqRecord;\n        } else {\n          lastNewSeqRecord._next = newSeqRecord;\n        }\n      }\n      lastOldSeqRecord = oldSeqRecord;\n      lastNewSeqRecord = newSeqRecord;\n      oldSeqRecord = oldSeqRecord && oldSeqRecord._next;\n    });\n    this._truncate(lastOldSeqRecord, oldSeqRecord);\n    return this.isDirty;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_reset() {\n    if (this.isDirty) {\n      let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n      // Record the state of the mapping\n      for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._changesHead; record !== null; record = record._nextChanged) {\n        record.previousValue = record.currentValue;\n      }\n\n      for (record = this._additionsHead; record != null; record = record._nextAdded) {\n        record.previousValue = record.currentValue;\n      }\n\n      this._changesHead = this._changesTail = null;\n      this._additionsHead = this._additionsTail = null;\n      this._removalsHead = this._removalsTail = null;\n    }\n  }\n/**\n * @param {?} lastRecord\n * @param {?} record\n * @return {?}\n */\nprivate _truncate(lastRecord: KeyValueChangeRecord_<K, V>, record: KeyValueChangeRecord_<K, V>) {\n    while (record !== null) {\n      if (lastRecord === null) {\n        this._mapHead = null;\n      } else {\n        lastRecord._next = null;\n      }\n      const /** @type {?} */ nextRecord = record._next;\n      this._addToRemovals(record);\n      lastRecord = record;\n      record = nextRecord;\n    }\n\n    for (let /** @type {?} */ rec: KeyValueChangeRecord_<K, V> = this._removalsHead; rec !== null;\n         rec = rec._nextRemoved) {\n      rec.previousValue = rec.currentValue;\n      rec.currentValue = null;\n      this._records.delete(rec.key);\n    }\n  }\n/**\n * @param {?} record\n * @param {?} newValue\n * @return {?}\n */\nprivate _maybeAddToChanges(record: KeyValueChangeRecord_<K, V>, newValue: any): void {\n    if (!looseIdentical(newValue, record.currentValue)) {\n      record.previousValue = record.currentValue;\n      record.currentValue = newValue;\n      this._addToChanges(record);\n    }\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _isInRemovals(record: KeyValueChangeRecord_<K, V>) {\n    return record === this._removalsHead || record._nextRemoved !== null ||\n        record._prevRemoved !== null;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToRemovals(record: KeyValueChangeRecord_<K, V>) {\n    if (this._removalsHead === null) {\n      this._removalsHead = this._removalsTail = record;\n    } else {\n      this._removalsTail._nextRemoved = record;\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = record;\n    }\n  }\n/**\n * @param {?} prev\n * @param {?} record\n * @return {?}\n */\nprivate _removeFromSeq(prev: KeyValueChangeRecord_<K, V>, record: KeyValueChangeRecord_<K, V>) {\n    const /** @type {?} */ next = record._next;\n    if (prev === null) {\n      this._mapHead = next;\n    } else {\n      prev._next = next;\n    }\n    record._next = null;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _removeFromRemovals(record: KeyValueChangeRecord_<K, V>) {\n    const /** @type {?} */ prev = record._prevRemoved;\n    const /** @type {?} */ next = record._nextRemoved;\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n    record._prevRemoved = record._nextRemoved = null;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToAdditions(record: KeyValueChangeRecord_<K, V>) {\n    if (this._additionsHead === null) {\n      this._additionsHead = this._additionsTail = record;\n    } else {\n      this._additionsTail._nextAdded = record;\n      this._additionsTail = record;\n    }\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToChanges(record: KeyValueChangeRecord_<K, V>) {\n    if (this._changesHead === null) {\n      this._changesHead = this._changesTail = record;\n    } else {\n      this._changesTail._nextChanged = record;\n      this._changesTail = record;\n    }\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    const /** @type {?} */ items: any[] = [];\n    const /** @type {?} */ previous: any[] = [];\n    const /** @type {?} */ changes: any[] = [];\n    const /** @type {?} */ additions: any[] = [];\n    const /** @type {?} */ removals: any[] = [];\n    let /** @type {?} */ record: KeyValueChangeRecord_<K, V>;\n\n    for (record = this._mapHead; record !== null; record = record._next) {\n      items.push(stringify(record));\n    }\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      previous.push(stringify(record));\n    }\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      changes.push(stringify(record));\n    }\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      additions.push(stringify(record));\n    }\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      removals.push(stringify(record));\n    }\n\n    return 'map: ' + items.join(', ') + '\\n' +\n        'previous: ' + previous.join(', ') + '\\n' +\n        'additions: ' + additions.join(', ') + '\\n' +\n        'changes: ' + changes.join(', ') + '\\n' +\n        'removals: ' + removals.join(', ') + '\\n';\n  }\n/**\n * \\@internal\n * @template K, V\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nprivate _forEach<K, V>(obj: Map<K, V>|{[k: string]: V}, fn: (v: V, k: any) => void) {\n    if (obj instanceof Map) {\n      obj.forEach(fn);\n    } else {\n      Object.keys(obj).forEach(k => fn(obj[k], k));\n    }\n  }\n}\n\nfunction DefaultKeyValueDiffer_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._records;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._mapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._previousMapHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._changesTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._additionsTail;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsHead;\n/** @type {?} */\nDefaultKeyValueDiffer.prototype._removalsTail;\n}\n\n/**\n * \\@stable\n */\nclass KeyValueChangeRecord_<K, V> implements KeyValueChangeRecord<K, V> {\n  previousValue: V = null;\n  currentValue: V = null;\n/**\n * \\@internal\n */\n_nextPrevious: KeyValueChangeRecord_<K, V> = null;\n/**\n * \\@internal\n */\n_next: KeyValueChangeRecord_<K, V> = null;\n/**\n * \\@internal\n */\n_nextAdded: KeyValueChangeRecord_<K, V> = null;\n/**\n * \\@internal\n */\n_nextRemoved: KeyValueChangeRecord_<K, V> = null;\n/**\n * \\@internal\n */\n_prevRemoved: KeyValueChangeRecord_<K, V> = null;\n/**\n * \\@internal\n */\n_nextChanged: KeyValueChangeRecord_<K, V> = null;\n/**\n * @param {?} key\n */\nconstructor(public key: K) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return looseIdentical(this.previousValue, this.currentValue) ?\n        stringify(this.key) :\n        (stringify(this.key) + '[' + stringify(this.previousValue) + '->' +\n         stringify(this.currentValue) + ']');\n  }\n}\n\nfunction KeyValueChangeRecord__tsickle_Closure_declarations() {\n/** @type {?} */\nKeyValueChangeRecord_.prototype.previousValue;\n/** @type {?} */\nKeyValueChangeRecord_.prototype.currentValue;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextPrevious;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._next;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextAdded;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._prevRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nKeyValueChangeRecord_.prototype._nextChanged;\n/** @type {?} */\nKeyValueChangeRecord_.prototype.key;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Optional, Provider, SkipSelf} from '../../di';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\n/**\n * A type describing supported interable types.\n *\n * @stable\n */\nexport type NgIterable<T> = Array<T>| Iterable<T>;\n\n/**\n * A strategy for tracking changes over time to an iterable. Used by {@link NgFor} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * @stable\n */\nexport interface IterableDiffer<V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: NgIterable<V>): IterableChanges<V>;\n}\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * @stable\n */\nexport interface IterableChanges<V> {\n  /**\n   * Iterate over all changes. `IterableChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /**\n   * Iterate over a set of operations which when applied to the original `Iterable` will produce the\n   * new `Iterable`.\n   *\n   * NOTE: These are not necessarily the actual operations which were applied to the original\n   * `Iterable`, rather these are a set of computed operations which may not be the same as the\n   * ones applied.\n   *\n   * @param record A change which needs to be applied\n   * @param previousIndex The `IterableChangeRecord#previousIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `previousIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   * @param currentIndex The `IterableChangeRecord#currentIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `currentIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   */\n  forEachOperation(\n      fn: (record: IterableChangeRecord<V>, previousIndex: number, currentIndex: number) => void):\n      void;\n\n  /**\n   * Iterate over changes in the order of original `Iterable` showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all added items. */\n  forEachAddedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all moved items. */\n  forEachMovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all removed items. */\n  forEachRemovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all items which had their identity (as computed by the `trackByFn`) changed. */\n  forEachIdentityChange(fn: (record: IterableChangeRecord<V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @stable\n */\nexport interface IterableChangeRecord<V> {\n  /** Current index of the item in `Iterable` or null if removed. */\n  // TODO(TS2.1): make readonly once we move to TS v2.1\n  /* readonly */ currentIndex: number;\n\n  /** Previous index of the item in `Iterable` or null if added. */\n  // TODO(TS2.1): make readonly once we move to TS v2.1\n  /* readonly */ previousIndex: number;\n\n  /** The item. */\n  // TODO(TS2.1): make readonly once we move to TS v2.1\n  /* readonly */ item: V;\n\n  /** Track by identity as computed by the `trackByFn`. */\n  // TODO(TS2.1): make readonly once we move to TS v2.1\n  /* readonly */ trackById: any;\n}\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n */\nexport interface CollectionChangeRecord<V> extends IterableChangeRecord<V> {}\n\n\n/**\n * Nolonger used.\n *\n * @deprecated v4.0.0 - Use TrackByFunction instead\n */\nexport interface TrackByFn { (index: number, item: any): any; }\n\n/**\n * An optional function passed into {@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * @stable\n */\nexport interface TrackByFunction<T> { (index: number, item: T): any; }\n\n/**\n * Provides a factory for {@link IterableDiffer}.\n *\n * @stable\n */\nexport interface IterableDifferFactory {\n  supports(objects: any): boolean;\n  create<V>(trackByFn?: TrackByFunction<V>): IterableDiffer<V>;\n\n  /**\n   * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n   */\n  create<V>(_cdr?: ChangeDetectorRef|TrackByFunction<V>, trackByFn?: TrackByFunction<V>):\n      IterableDiffer<V>;\n}\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nexport class IterableDiffers {\n/**\n * @deprecated v4.0.0 - Should be private\n */\nfactories: IterableDifferFactory[];\n/**\n * @param {?} factories\n */\nconstructor(factories: IterableDifferFactory[]) { this.factories = factories; }\n/**\n * @param {?} factories\n * @param {?=} parent\n * @return {?}\n */\nstatic create(factories: IterableDifferFactory[], parent?: IterableDiffers): IterableDiffers {\n    if (parent != null) {\n      const /** @type {?} */ copied = parent.factories.slice();\n      factories = factories.concat(copied);\n      return new IterableDiffers(factories);\n    } else {\n      return new IterableDiffers(factories);\n    }\n  }\n/**\n * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n * {\\@link IterableDiffers} instance.\n * \n * The following example shows how to extend an existing list of factories,\n * which will only be applied to the injector for this component and its children.\n * This step is all that's required to make a new {\\@link IterableDiffer} available.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   viewProviders: [\n *     IterableDiffers.extend([new ImmutableListDiffer()])\n *   ]\n * })\n * ```\n * @param {?} factories\n * @return {?}\n */\nstatic extend(factories: IterableDifferFactory[]): Provider {\n    return {\n      provide: IterableDiffers,\n      useFactory: (parent: IterableDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n          // to\n          // bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend IterableDiffers without a parent injector');\n        }\n        return IterableDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n/**\n * @param {?} iterable\n * @return {?}\n */\nfind(iterable: any): IterableDifferFactory {\n    const /** @type {?} */ factory = this.factories.find(f => f.supports(iterable));\n    if (factory != null) {\n      return factory;\n    } else {\n      throw new Error(\n          `Cannot find a differ supporting object '${iterable}' of type '${getTypeNameForDebugging(iterable)}'`);\n    }\n  }\n}\n\nfunction IterableDiffers_tsickle_Closure_declarations() {\n/**\n * @deprecated v4.0.0 - Should be private\n * @type {?}\n */\nIterableDiffers.prototype.factories;\n}\n\n/**\n * @param {?} type\n * @return {?}\n */\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Optional, Provider, SkipSelf} from '../../di';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\n\n\n/**\n * A differ that tracks changes made to an object over time.\n *\n * @stable\n */\nexport interface KeyValueDiffer<K, V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: Map<K, V>): KeyValueChanges<K, V>;\n\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: {[key: string]: V}): KeyValueChanges<string, V>;\n  // TODO(TS2.1): diff<KP extends string>(this: KeyValueDiffer<KP, V>, object: Record<KP, V>):\n  // KeyValueDiffer<KP, V>;\n}\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * @stable\n */\nexport interface KeyValueChanges<K, V> {\n  /**\n   * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over changes in the order of original Map showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all keys for which values have changed.\n   */\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all added items.\n   */\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all removed items.\n   */\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @stable\n */\nexport interface KeyValueChangeRecord<K, V> {\n  /**\n   * Current key in the Map.\n   */\n  /* readonly */ key: K;\n\n  /**\n   * Current value for the key or `undefined` if removed.\n   */\n  /* readonly */ currentValue: V;\n\n  /**\n   * Previous value for the key or `undefined` if added.\n   */\n  /* readonly */ previousValue: V;\n}\n\n/**\n * Provides a factory for {@link KeyValueDiffer}.\n *\n * @stable\n */\nexport interface KeyValueDifferFactory {\n  /**\n   * Test to see if the differ knows how to diff this kind of object.\n   */\n  supports(objects: any): boolean;\n\n  /**\n   * Create a `KeyValueDiffer`.\n   */\n  create<K, V>(): KeyValueDiffer<K, V>;\n\n  /**\n   * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n   */\n  create<K, V>(_cdr?: ChangeDetectorRef): KeyValueDiffer<K, V>;\n}\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nexport class KeyValueDiffers {\n/**\n * @deprecated v4.0.0 - Should be private.\n */\nfactories: KeyValueDifferFactory[];\n/**\n * @param {?} factories\n */\nconstructor(factories: KeyValueDifferFactory[]) { this.factories = factories; }\n/**\n * @template S\n * @param {?} factories\n * @param {?=} parent\n * @return {?}\n */\nstatic create<S>(factories: KeyValueDifferFactory[], parent?: KeyValueDiffers): KeyValueDiffers {\n    if (parent) {\n      const /** @type {?} */ copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n    return new KeyValueDiffers(factories);\n  }\n/**\n * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n * {\\@link KeyValueDiffers} instance.\n * \n * The following example shows how to extend an existing list of factories,\n * which will only be applied to the injector for this component and its children.\n * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   viewProviders: [\n *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n *   ]\n * })\n * ```\n * @template S\n * @param {?} factories\n * @return {?}\n */\nstatic extend<S>(factories: KeyValueDifferFactory[]): Provider {\n    return {\n      provide: KeyValueDiffers,\n      useFactory: (parent: KeyValueDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n          // to bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n        }\n        return KeyValueDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n/**\n * @param {?} kv\n * @return {?}\n */\nfind(kv: any): KeyValueDifferFactory {\n    const /** @type {?} */ factory = this.factories.find(f => f.supports(kv));\n    if (factory) {\n      return factory;\n    }\n    throw new Error(`Cannot find a differ supporting object '${kv}'`);\n  }\n}\n\nfunction KeyValueDiffers_tsickle_Closure_declarations() {\n/**\n * @deprecated v4.0.0 - Should be private.\n * @type {?}\n */\nKeyValueDiffers.prototype.factories;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nimport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nimport {IterableDifferFactory, IterableDiffers} from './differs/iterable_differs';\nimport {KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\n\nexport {SimpleChanges} from '../metadata/lifecycle_hooks';\nexport {SimpleChange, ValueUnwrapper, WrappedValue, devModeEqual} from './change_detection_util';\nexport {ChangeDetectorRef} from './change_detector_ref';\nexport {ChangeDetectionStrategy, ChangeDetectorStatus, isDefaultChangeDetectionStrategy} from './constants';\nexport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nexport {DefaultIterableDiffer} from './differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nexport {CollectionChangeRecord, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, IterableDiffers, NgIterable, TrackByFn, TrackByFunction} from './differs/iterable_differs';\nexport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\nexport {PipeTransform} from './pipe_transform';\n\n\n\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nconst /** @type {?} */ keyValDiff: KeyValueDifferFactory[] = [new DefaultKeyValueDifferFactory()];\n\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nconst /** @type {?} */ iterableDiff: IterableDifferFactory[] = [new DefaultIterableDifferFactory()];\n\nexport const /** @type {?} */ defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\nexport const /** @type {?} */ defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {PlatformRef, PlatformRef_, createPlatformFactory} from './application_ref';\nimport {PLATFORM_ID} from './application_tokens';\nimport {Console} from './console';\nimport {Provider} from './di';\nimport {Reflector, reflector} from './reflection/reflection';\nimport {ReflectorReader} from './reflection/reflector_reader';\nimport {TestabilityRegistry} from './testability/testability';\n/**\n * @return {?}\n */\nfunction _reflector(): Reflector {\n  return reflector;\n}\n\nconst /** @type {?} */ _CORE_PLATFORM_PROVIDERS: Provider[] = [\n  // Set a default platform name for platforms that don't set it explicitly.\n  {provide: PLATFORM_ID, useValue: 'unknown'},\n  PlatformRef_,\n  {provide: PlatformRef, useExisting: PlatformRef_},\n  {provide: Reflector, useFactory: _reflector, deps: []},\n  {provide: ReflectorReader, useExisting: Reflector},\n  TestabilityRegistry,\n  Console,\n];\n/**\n * This platform has to be included in any other platform\n * \n * \\@experimental\n */\nexport const platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n","\nexport type SecurityContext = number;\nexport let SecurityContext: any = {};\nSecurityContext.NONE = 0;\nSecurityContext.HTML = 1;\nSecurityContext.STYLE = 2;\nSecurityContext.SCRIPT = 3;\nSecurityContext.URL = 4;\nSecurityContext.RESOURCE_URL = 5;\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Sanitizer {\n/**\n * @abstract\n * @param {?} context\n * @param {?} value\n * @return {?}\n */\nsanitize(context: SecurityContext, value: string) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '../di/injection_token';\n/**\n * \\@experimental i18n support is experimental.\n */\nexport const LOCALE_ID = new InjectionToken<string>('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nexport const TRANSLATIONS = new InjectionToken<string>('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nexport const TRANSLATIONS_FORMAT = new InjectionToken<string>('TranslationsFormat');\nexport type MissingTranslationStrategy = number;\nexport let MissingTranslationStrategy: any = {};\nMissingTranslationStrategy.Error = 0;\nMissingTranslationStrategy.Warning = 1;\nMissingTranslationStrategy.Ignore = 2;\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer2, RendererFactory2, RendererType2} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../security';\n\n// -------------------------------------\n// Defs\n// -------------------------------------\n\nexport interface ViewDefinition {\n  factory: ViewDefinitionFactory;\n  flags: ViewFlags;\n  updateDirectives: ViewUpdateFn;\n  updateRenderer: ViewUpdateFn;\n  handleEvent: ViewHandleEventFn;\n  /**\n   * Order: Depth first.\n   * Especially providers are before elements / anchors.\n   */\n  nodes: NodeDef[];\n  /** aggregated NodeFlags for all nodes **/\n  nodeFlags: NodeFlags;\n  rootNodeFlags: NodeFlags;\n  lastRenderRootNode: NodeDef;\n  bindingCount: number;\n  outputCount: number;\n  /**\n   * Binary or of all query ids that are matched by one of the nodes.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  nodeMatchedQueries: number;\n}\n\n/**\n * Factory for ViewDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n */\nexport interface ViewDefinitionFactory { (logger: NodeLogger): ViewDefinition; }\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n */\nexport interface NodeLogger { (): () => void; }\n\nexport interface ViewUpdateFn { (check: NodeCheckFn, view: ViewData): void; }\n\n// helper functions to create an overloaded function type.\nexport interface NodeCheckFn {\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n   v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n}\n\nexport const enum ArgumentType {Inline, Dynamic}\n\nexport interface ViewHandleEventFn {\n  (view: ViewData, nodeIndex: number, eventName: string, event: any): boolean;\n}\n\n/**\n * Bitmask for ViewDefintion.flags.\n */\nexport const enum ViewFlags {\n  None = 0,\n  OnPush = 1 << 1,\n}\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n */\nexport interface NodeDef {\n  flags: NodeFlags;\n  index: number;\n  parent: NodeDef;\n  renderParent: NodeDef;\n  /** this is checked against NgContentDef.index to find matched nodes */\n  ngContentIndex: number;\n  /** number of transitive children */\n  childCount: number;\n  /** aggregated NodeFlags for all transitive children (does not include self) **/\n  childFlags: NodeFlags;\n  /** aggregated NodeFlags for all direct children (does not include self) **/\n  directChildFlags: NodeFlags;\n\n  bindingIndex: number;\n  bindings: BindingDef[];\n  bindingFlags: BindingFlags;\n  outputIndex: number;\n  outputs: OutputDef[];\n  /**\n   * references that the user placed on the element\n   */\n  references: {[refId: string]: QueryValueType};\n  /**\n   * ids and value types of all queries that are matched by this node.\n   */\n  matchedQueries: {[queryId: number]: QueryValueType};\n  /** Binary or of all matched query ids of this node. */\n  matchedQueryIds: number;\n  /**\n   * Binary or of all query ids that are matched by one of the children.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  childMatchedQueries: number;\n  element: ElementDef;\n  provider: ProviderDef;\n  text: TextDef;\n  query: QueryDef;\n  ngContent: NgContentDef;\n}\n\n/**\n * Bitmask for NodeDef.flags.\n * Naming convention:\n * - `Type...`: flags that are mutually exclusive\n * - `Cat...`: union of multiple `Type...` (short for category).\n */\nexport const enum NodeFlags {\n  None = 0,\n  TypeElement = 1 << 0,\n  TypeText = 1 << 1,\n  CatRenderNode = TypeElement | TypeText,\n  TypeNgContent = 1 << 2,\n  TypePipe = 1 << 3,\n  TypePureArray = 1 << 4,\n  TypePureObject = 1 << 5,\n  TypePurePipe = 1 << 6,\n  CatPureExpression = TypePureArray | TypePureObject | TypePurePipe,\n  TypeValueProvider = 1 << 7,\n  TypeClassProvider = 1 << 8,\n  TypeFactoryProvider = 1 << 9,\n  TypeUseExistingProvider = 1 << 10,\n  LazyProvider = 1 << 11,\n  PrivateProvider = 1 << 12,\n  TypeDirective = 1 << 13,\n  Component = 1 << 14,\n  CatProvider = TypeValueProvider | TypeClassProvider | TypeFactoryProvider |\n      TypeUseExistingProvider | TypeDirective,\n  OnInit = 1 << 15,\n  OnDestroy = 1 << 16,\n  DoCheck = 1 << 17,\n  OnChanges = 1 << 18,\n  AfterContentInit = 1 << 19,\n  AfterContentChecked = 1 << 20,\n  AfterViewInit = 1 << 21,\n  AfterViewChecked = 1 << 22,\n  EmbeddedViews = 1 << 23,\n  ComponentView = 1 << 24,\n  TypeContentQuery = 1 << 25,\n  TypeViewQuery = 1 << 26,\n  StaticQuery = 1 << 27,\n  DynamicQuery = 1 << 28,\n  CatQuery = TypeContentQuery | TypeViewQuery,\n\n  // mutually exclusive values...\n  Types = CatRenderNode | TypeNgContent | TypePipe | CatPureExpression | CatProvider | CatQuery\n}\n\nexport interface BindingDef {\n  flags: BindingFlags;\n  ns: string;\n  name: string;\n  nonMinifiedName: string;\n  securityContext: SecurityContext;\n  suffix: string;\n}\n\nexport const enum BindingFlags {\n  TypeElementAttribute = 1 << 0,\n  TypeElementClass = 1 << 1,\n  TypeElementStyle = 1 << 2,\n  TypeProperty = 1 << 3,\n  SyntheticProperty = 1 << 4,\n  SyntheticHostProperty = 1 << 5,\n  CatSyntheticProperty = SyntheticProperty | SyntheticHostProperty,\n\n  // mutually exclusive values...\n  Types = TypeElementAttribute | TypeElementClass | TypeElementStyle | TypeProperty\n}\n\nexport interface OutputDef {\n  type: OutputType;\n  target: 'window'|'document'|'body'|'component';\n  eventName: string;\n  propName: string;\n}\n\nexport const enum OutputType {ElementOutput, DirectiveOutput}\n\nexport const enum QueryValueType {\n  ElementRef,\n  RenderElement,\n  TemplateRef,\n  ViewContainerRef,\n  Provider\n}\n\nexport interface ElementDef {\n  name: string;\n  ns: string;\n  /** ns, name, value */\n  attrs: [string, string, string][];\n  template: ViewDefinition;\n  componentProvider: NodeDef;\n  componentRendererType: RendererType2;\n  // closure to allow recursive components\n  componentView: ViewDefinitionFactory;\n  /**\n   * visible public providers for DI in the view,\n   * as see from this element. This does not include private providers.\n   */\n  publicProviders: {[tokenKey: string]: NodeDef};\n  /**\n   * same as visiblePublicProviders, but also includes private providers\n   * that are located on this element.\n   */\n  allProviders: {[tokenKey: string]: NodeDef};\n  handleEvent: ElementHandleEventFn;\n}\n\nexport interface ElementHandleEventFn { (view: ViewData, eventName: string, event: any): boolean; }\n\nexport interface ProviderDef {\n  token: any;\n  tokenKey: string;\n  value: any;\n  deps: DepDef[];\n}\n\nexport interface DepDef {\n  flags: DepFlags;\n  token: any;\n  tokenKey: string;\n}\n\n/**\n * Bitmask for DI flags\n */\nexport const enum DepFlags {\n  None = 0,\n  SkipSelf = 1 << 0,\n  Optional = 1 << 1,\n  Value = 2 << 2,\n}\n\nexport interface TextDef { prefix: string; }\n\nexport interface QueryDef {\n  id: number;\n  // variant of the id that can be used to check against NodeDef.matchedQueryIds, ...\n  filterId: number;\n  bindings: QueryBindingDef[];\n}\n\nexport interface QueryBindingDef {\n  propName: string;\n  bindingType: QueryBindingType;\n}\n\nexport const enum QueryBindingType {First, All}\n\nexport interface NgContentDef {\n  /**\n   * this index is checked against NodeDef.ngContentIndex to find the nodes\n   * that are matched by this ng-content.\n   * Note that a NodeDef with an ng-content can be reprojected, i.e.\n   * have a ngContentIndex on its own.\n   */\n  index: number;\n}\n\n// -------------------------------------\n// Data\n// -------------------------------------\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ViewData {\n  def: ViewDefinition;\n  root: RootData;\n  renderer: Renderer2;\n  // index of component provider / anchor.\n  parentNodeDef: NodeDef;\n  parent: ViewData;\n  viewContainerParent: ViewData;\n  component: any;\n  context: any;\n  // Attention: Never loop over this, as this will\n  // create a polymorphic usage site.\n  // Instead: Always loop over ViewDefinition.nodes,\n  // and call the right accessor (e.g. `elementData`) based on\n  // the NodeType.\n  nodes: {[key: number]: NodeData};\n  state: ViewState;\n  oldValues: any[];\n  disposables: DisposableFn[];\n}\n\n/**\n * Bitmask of states\n */\nexport const enum ViewState {\n  FirstCheck = 1 << 0,\n  ChecksEnabled = 1 << 1,\n  Errored = 1 << 2,\n  Destroyed = 1 << 3\n}\n\nexport interface DisposableFn { (): void; }\n/**\n * Node instance data.\n * \n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n * \n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport class NodeData {\nprivate __brand: any; }\n\nfunction NodeData_tsickle_Closure_declarations() {\n/** @type {?} */\nNodeData.prototype.__brand;\n}\n\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface TextData { renderText: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asTextData(view: ViewData, index: number): TextData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ElementData {\n  renderElement: any;\n  componentView: ViewData;\n  viewContainer: ViewContainerData;\n  template: TemplateData;\n}\n\nexport interface ViewContainerData extends ViewContainerRef { _embeddedViews: ViewData[]; }\n\nexport interface TemplateData extends TemplateRef<any> {\n  // views that have been created from the template\n  // of this element,\n  // but inserted into the embeddedViews of another element.\n  // By default, this is undefined.\n  _projectedViews: ViewData[];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asElementData(view: ViewData, index: number): ElementData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ProviderData { instance: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asProviderData(view: ViewData, index: number): ProviderData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface PureExpressionData { value: any; }\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asPureExpressionData(view: ViewData, index: number): PureExpressionData {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function asQueryList(view: ViewData, index: number): QueryList<any> {\n  return /** @type {?} */(( <any>view.nodes[index]));\n}\n\nexport interface RootData {\n  injector: Injector;\n  ngModule: NgModuleRef<any>;\n  projectableNodes: any[][];\n  selectorOrNode: any;\n  renderer: Renderer2;\n  rendererFactory: RendererFactory2;\n  sanitizer: Sanitizer;\n}\n/**\n * @abstract\n */\nexport abstract class DebugContext {\n/**\n * @abstract\n * @return {?}\n */\nview() {}\n/**\n * @abstract\n * @return {?}\n */\nnodeIndex() {}\n/**\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponent() {}\n/**\n * @abstract\n * @return {?}\n */\nproviderTokens() {}\n/**\n * @abstract\n * @return {?}\n */\nreferences() {}\n/**\n * @abstract\n * @return {?}\n */\ncontext() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponentRenderElement() {}\n/**\n * @abstract\n * @return {?}\n */\nrenderNode() {}\n/**\n * @abstract\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nlogError(console: Console, ...values: any[]) {}\n}\n\n// -------------------------------------\n// Other\n// -------------------------------------\n\nexport const enum CheckType {CheckAndUpdate, CheckNoChanges}\n\nexport interface Services {\n  setCurrentNode(view: ViewData, nodeIndex: number): void;\n  createRootView(\n      injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string|any,\n      def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData;\n  createEmbeddedView(parent: ViewData, anchorDef: NodeDef, context?: any): ViewData;\n  checkAndUpdateView(view: ViewData): void;\n  checkNoChangesView(view: ViewData): void;\n  destroyView(view: ViewData): void;\n  resolveDep(\n      view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, depDef: DepDef,\n      notFoundValue?: any): any;\n  createDebugContext(view: ViewData, nodeIndex: number): DebugContext;\n  handleEvent: ViewHandleEventFn;\n  updateDirectives: (view: ViewData, checkType: CheckType) => void;\n  updateRenderer: (view: ViewData, checkType: CheckType) => void;\n  dirtyParentQueries: (view: ViewData) => void;\n}\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nexport const /** @type {?} */ Services: Services = {\n  setCurrentNode: undefined,\n  createRootView: undefined,\n  createEmbeddedView: undefined,\n  checkAndUpdateView: undefined,\n  checkNoChangesView: undefined,\n  destroyView: undefined,\n  resolveDep: undefined,\n  createDebugContext: undefined,\n  handleEvent: undefined,\n  updateDirectives: undefined,\n  updateRenderer: undefined,\n  dirtyParentQueries: undefined,\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ERROR_DEBUG_CONTEXT, ERROR_LOGGER, getDebugContext} from '../errors';\nimport {DebugContext, ViewState} from './types';\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nexport function expressionChangedAfterItHasBeenCheckedError(\n    context: DebugContext, oldValue: any, currValue: any, isFirstCheck: boolean): Error {\n  let /** @type {?} */ msg =\n      `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n  if (isFirstCheck) {\n    msg +=\n        ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n        ` Has it been created in a change detection hook ?`;\n  }\n  return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nexport function viewWrappedDebugError(err: any, context: DebugContext): Error {\n  if (!(err instanceof Error)) {\n    // errors that are not Error instances don't have a stack,\n    // so it is ok to wrap them into a new Error object...\n    err = new Error(err.toString());\n  }\n  _addDebugContext(err, context);\n  return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nexport function viewDebugError(msg: string, context: DebugContext): Error {\n  const /** @type {?} */ err = new Error(msg);\n  _addDebugContext(err, context);\n  return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err: Error, context: DebugContext) {\n  ( /** @type {?} */((err as any)))[ERROR_DEBUG_CONTEXT] = context;\n  ( /** @type {?} */((err as any)))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nexport function isViewDebugError(err: Error): boolean {\n  return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nexport function viewDestroyedError(action: string): Error {\n  return new Error(`ViewDestroyedError: Attempt to use a destroyed view: ${action}`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ComponentFactoryBoundToModule} from '../linker/component_factory_resolver';\nimport {ElementRef} from '../linker/element_ref';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, InternalViewRef, ViewRef} from '../linker/view_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {Type} from '../type';\nimport {VERSION} from '../version';\n\nimport {DepFlags, ElementData, NodeDef, NodeFlags, Services, TemplateData, ViewContainerData, ViewData, ViewDefinitionFactory, ViewState, asElementData, asProviderData, asTextData} from './types';\nimport {markParentViewsForCheck, resolveViewDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl} from './util';\nimport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView, renderDetachView} from './view_attach';\n\nconst /** @type {?} */ EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nexport function createComponentFactory(\n    selector: string, componentType: Type<any>, viewDefFactory: ViewDefinitionFactory,\n    inputs: {[propName: string]: string}, outputs: {[propName: string]: string},\n    ngContentSelectors: string[]): ComponentFactory<any> {\n  return new ComponentFactory_(\n      selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nexport function getComponentViewDefinitionFactory(componentFactory: ComponentFactory<any>):\n    ViewDefinitionFactory {\n  return ( /** @type {?} */((componentFactory as ComponentFactory_))).viewDefFactory;\n}\nclass ComponentFactory_ extends ComponentFactory<any> {\n/**\n * \\@internal\n */\nviewDefFactory: ViewDefinitionFactory;\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} _inputs\n * @param {?} _outputs\n * @param {?} ngContentSelectors\n */\nconstructor(\npublic selector: string,\npublic componentType: Type<any>,\n      viewDefFactory: ViewDefinitionFactory,\nprivate _inputs: {[propName: string]: string},\nprivate _outputs: {[propName: string]: string},\npublic ngContentSelectors: string[]) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n    this.viewDefFactory = viewDefFactory;\n  }\n/**\n * @return {?}\n */\nget inputs() {\n    const /** @type {?} */ inputsArr: {propName: string, templateName: string}[] = [];\n    for (let /** @type {?} */ propName in this._inputs) {\n      const /** @type {?} */ templateName = this._inputs[propName];\n      inputsArr.push({propName, templateName});\n    }\n    return inputsArr;\n  }\n/**\n * @return {?}\n */\nget outputs() {\n    const /** @type {?} */ outputsArr: {propName: string, templateName: string}[] = [];\n    for (let /** @type {?} */ propName in this._outputs) {\n      const /** @type {?} */ templateName = this._outputs[propName];\n      outputsArr.push({propName, templateName});\n    }\n    return outputsArr;\n  }\n/**\n * Creates a new component.\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<any> {\n    if (!ngModule) {\n      throw new Error('ngModule should be provided');\n    }\n    const /** @type {?} */ viewDef = resolveViewDefinition(this.viewDefFactory);\n    const /** @type {?} */ componentNodeIndex = viewDef.nodes[0].element.componentProvider.index;\n    const /** @type {?} */ view = Services.createRootView(\n        injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n    const /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n    view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\n\nfunction ComponentFactory__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nComponentFactory_.prototype.viewDefFactory;\n/** @type {?} */\nComponentFactory_.prototype.selector;\n/** @type {?} */\nComponentFactory_.prototype.componentType;\n/** @type {?} */\nComponentFactory_.prototype._inputs;\n/** @type {?} */\nComponentFactory_.prototype._outputs;\n/** @type {?} */\nComponentFactory_.prototype.ngContentSelectors;\n}\n\nclass ComponentRef_ extends ComponentRef<any> {\nprivate _elDef: NodeDef;\n/**\n * @param {?} _view\n * @param {?} _viewRef\n * @param {?} _component\n */\nconstructor(private _view: ViewData,\nprivate _viewRef: ViewRef,\nprivate _component: any) {\n    super();\n    this._elDef = this._view.def.nodes[0];\n  }\n/**\n * @return {?}\n */\nget location(): ElementRef {\n    return new ElementRef(asElementData(this._view, this._elDef.index).renderElement);\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget instance(): any { return this._component; };\n/**\n * @return {?}\n */\nget hostView(): ViewRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget changeDetectorRef(): ChangeDetectorRef { return this._viewRef; };\n/**\n * @return {?}\n */\nget componentType(): Type<any> { return /** @type {?} */(( <any>this._component.constructor)); }\n/**\n * @return {?}\n */\ndestroy(): void { this._viewRef.destroy(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nfunction ComponentRef__tsickle_Closure_declarations() {\n/** @type {?} */\nComponentRef_.prototype._elDef;\n/** @type {?} */\nComponentRef_.prototype._view;\n/** @type {?} */\nComponentRef_.prototype._viewRef;\n/** @type {?} */\nComponentRef_.prototype._component;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nexport function createViewContainerData(\n    view: ViewData, elDef: NodeDef, elData: ElementData): ViewContainerData {\n  return new ViewContainerRef_(view, elDef, elData);\n}\nclass ViewContainerRef_ implements ViewContainerData {\n/**\n * \\@internal\n */\n_embeddedViews: ViewData[] = [];\n/**\n * @param {?} _view\n * @param {?} _elDef\n * @param {?} _data\n */\nconstructor(private _view: ViewData,\nprivate _elDef: NodeDef,\nprivate _data: ElementData) {}\n/**\n * @return {?}\n */\nget element(): ElementRef { return new ElementRef(this._data.renderElement); }\n/**\n * @return {?}\n */\nget injector(): Injector { return new Injector_(this._view, this._elDef); }\n/**\n * @return {?}\n */\nget parentInjector(): Injector {\n    let /** @type {?} */ view = this._view;\n    let /** @type {?} */ elDef = this._elDef.parent;\n    while (!elDef && view) {\n      elDef = viewParentEl(view);\n      view = view.parent;\n    }\n\n    return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n  }\n/**\n * @return {?}\n */\nclear(): void {\n    const /** @type {?} */ len = this._embeddedViews.length;\n    for (let /** @type {?} */ i = len - 1; i >= 0; i--) {\n      const /** @type {?} */ view = detachEmbeddedView(this._data, i);\n      Services.destroyView(view);\n    }\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nget(index: number): ViewRef {\n    const /** @type {?} */ view = this._embeddedViews[index];\n    if (view) {\n      const /** @type {?} */ ref = new ViewRef_(view);\n      ref.attachToViewContainerRef(this);\n      return ref;\n    }\n    return null;\n  }\n/**\n * @return {?}\n */\nget length(): number { return this._embeddedViews.length; };\n/**\n * @template C\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\ncreateEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */(( <any>{})));\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n/**\n * @template C\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @param {?=} ngModuleRef\n * @return {?}\n */\ncreateComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModuleRef?: NgModuleRef<any>): ComponentRef<C> {\n    const /** @type {?} */ contextInjector = injector || this.parentInjector;\n    if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n      ngModuleRef = contextInjector.get(NgModuleRef);\n    }\n    const /** @type {?} */ componentRef =\n        componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\ninsert(viewRef: ViewRef, index?: number): ViewRef {\n    const /** @type {?} */ viewRef_ = /** @type {?} */(( <ViewRef_>viewRef));\n    const /** @type {?} */ viewData = viewRef_._view;\n    attachEmbeddedView(this._view, this._data, index, viewData);\n    viewRef_.attachToViewContainerRef(this);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nmove(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    const /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n    moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nindexOf(viewRef: ViewRef): number {\n    return this._embeddedViews.indexOf(( /** @type {?} */((<ViewRef_>viewRef)))._view);\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\nremove(index?: number): void {\n    const /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n    if (viewData) {\n      Services.destroyView(viewData);\n    }\n  }\n/**\n * @param {?=} index\n * @return {?}\n */\ndetach(index?: number): ViewRef {\n    const /** @type {?} */ view = detachEmbeddedView(this._data, index);\n    return view ? new ViewRef_(view) : null;\n  }\n}\n\nfunction ViewContainerRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewContainerRef_.prototype._embeddedViews;\n/** @type {?} */\nViewContainerRef_.prototype._view;\n/** @type {?} */\nViewContainerRef_.prototype._elDef;\n/** @type {?} */\nViewContainerRef_.prototype._data;\n}\n\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createChangeDetectorRef(view: ViewData): ChangeDetectorRef {\n  return new ViewRef_(view);\n}\nexport class ViewRef_ implements EmbeddedViewRef<any>, InternalViewRef {\n/**\n * \\@internal\n */\n_view: ViewData;\nprivate _viewContainerRef: ViewContainerRef;\nprivate _appRef: ApplicationRef;\n/**\n * @param {?} _view\n */\nconstructor(_view: ViewData) {\n    this._view = _view;\n    this._viewContainerRef = null;\n    this._appRef = null;\n  }\n/**\n * @return {?}\n */\nget rootNodes(): any[] { return rootRenderNodes(this._view); }\n/**\n * @return {?}\n */\nget context() { return this._view.context; }\n/**\n * @return {?}\n */\nget destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n/**\n * @return {?}\n */\nmarkForCheck(): void { markParentViewsForCheck(this._view); }\n/**\n * @return {?}\n */\ndetach(): void { this._view.state &= ~ViewState.ChecksEnabled; }\n/**\n * @return {?}\n */\ndetectChanges(): void { Services.checkAndUpdateView(this._view); }\n/**\n * @return {?}\n */\ncheckNoChanges(): void { Services.checkNoChangesView(this._view); }\n/**\n * @return {?}\n */\nreattach(): void { this._view.state |= ViewState.ChecksEnabled; }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {\n    if (!this._view.disposables) {\n      this._view.disposables = [];\n    }\n    this._view.disposables.push( /** @type {?} */((<any>callback)));\n  }\n/**\n * @return {?}\n */\ndestroy() {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._viewContainerRef) {\n      this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n    }\n    Services.destroyView(this._view);\n  }\n/**\n * @return {?}\n */\ndetachFromAppRef() {\n    this._appRef = null;\n    renderDetachView(this._view);\n    Services.dirtyParentQueries(this._view);\n  }\n/**\n * @param {?} appRef\n * @return {?}\n */\nattachToAppRef(appRef: ApplicationRef) {\n    if (this._viewContainerRef) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n/**\n * @param {?} vcRef\n * @return {?}\n */\nattachToViewContainerRef(vcRef: ViewContainerRef) {\n    if (this._appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._viewContainerRef = vcRef;\n  }\n}\n\nfunction ViewRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nViewRef_.prototype._view;\n/** @type {?} */\nViewRef_.prototype._viewContainerRef;\n/** @type {?} */\nViewRef_.prototype._appRef;\n}\n\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createTemplateData(view: ViewData, def: NodeDef): TemplateData {\n  return new TemplateRef_(view, def);\n}\nclass TemplateRef_ extends TemplateRef<any> implements TemplateData {\n/**\n * \\@internal\n */\n_projectedViews: ViewData[];\n/**\n * @param {?} _parentView\n * @param {?} _def\n */\nconstructor(private _parentView: ViewData,\nprivate _def: NodeDef) { super(); }\n/**\n * @param {?} context\n * @return {?}\n */\ncreateEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, context));\n  }\n/**\n * @return {?}\n */\nget elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.index).renderElement);\n  }\n}\n\nfunction TemplateRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nTemplateRef_.prototype._projectedViews;\n/** @type {?} */\nTemplateRef_.prototype._parentView;\n/** @type {?} */\nTemplateRef_.prototype._def;\n}\n\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nexport function createInjector(view: ViewData, elDef: NodeDef): Injector {\n  return new Injector_(view, elDef);\n}\nclass Injector_ implements Injector {\n/**\n * @param {?} view\n * @param {?} elDef\n */\nconstructor(private view: ViewData,\nprivate elDef: NodeDef|null) {}\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    const /** @type {?} */ allowPrivateServices =\n        this.elDef ? (this.elDef.flags & NodeFlags.ComponentView) !== 0 : false;\n    return Services.resolveDep(\n        this.view, this.elDef, allowPrivateServices,\n        {flags: DepFlags.None, token, tokenKey: tokenKey(token)}, notFoundValue);\n  }\n}\n\nfunction Injector__tsickle_Closure_declarations() {\n/** @type {?} */\nInjector_.prototype.view;\n/** @type {?} */\nInjector_.prototype.elDef;\n}\n\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nexport function nodeValue(view: ViewData, index: number): any {\n  const /** @type {?} */ def = view.def.nodes[index];\n  if (def.flags & NodeFlags.TypeElement) {\n    const /** @type {?} */ elData = asElementData(view, def.index);\n    return def.element.template ? elData.template : elData.renderElement;\n  } else if (def.flags & NodeFlags.TypeText) {\n    return asTextData(view, def.index).renderText;\n  } else if (def.flags & (NodeFlags.CatProvider | NodeFlags.TypePipe)) {\n    return asProviderData(view, def.index).instance;\n  }\n  throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function createRendererV1(view: ViewData): RendererV1 {\n  return new RendererAdapter(view.renderer);\n}\nclass RendererAdapter implements RendererV1 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: Renderer2) {}\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|Element): Element {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n/**\n * @param {?} parent\n * @param {?} namespaceAndName\n * @return {?}\n */\ncreateElement(parent: Element|DocumentFragment, namespaceAndName: string): Element {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    const /** @type {?} */ el = this.delegate.createElement(name, ns);\n    if (parent) {\n      this.delegate.appendChild(parent, el);\n    }\n    return el;\n  }\n/**\n * @param {?} hostElement\n * @return {?}\n */\ncreateViewRoot(hostElement: Element): Element|DocumentFragment { return hostElement; }\n/**\n * @param {?} parentElement\n * @return {?}\n */\ncreateTemplateAnchor(parentElement: Element|DocumentFragment): Comment {\n    const /** @type {?} */ comment = this.delegate.createComment('');\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, comment);\n    }\n    return comment;\n  }\n/**\n * @param {?} parentElement\n * @param {?} value\n * @return {?}\n */\ncreateText(parentElement: Element|DocumentFragment, value: string): any {\n    const /** @type {?} */ node = this.delegate.createText(value);\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, node);\n    }\n    return node;\n  }\n/**\n * @param {?} parentElement\n * @param {?} nodes\n * @return {?}\n */\nprojectNodes(parentElement: Element|DocumentFragment, nodes: Node[]) {\n    for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n      this.delegate.appendChild(parentElement, nodes[i]);\n    }\n  }\n/**\n * @param {?} node\n * @param {?} viewRootNodes\n * @return {?}\n */\nattachViewAfter(node: Node, viewRootNodes: Node[]) {\n    const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n    const /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n    for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n      this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n    }\n  }\n/**\n * @param {?} viewRootNodes\n * @return {?}\n */\ndetachView(viewRootNodes: (Element|Text|Comment)[]) {\n    for (let /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n      const /** @type {?} */ node = viewRootNodes[i];\n      const /** @type {?} */ parentElement = this.delegate.parentNode(node);\n      this.delegate.removeChild(parentElement, node);\n    }\n  }\n/**\n * @param {?} hostElement\n * @param {?} viewAllNodes\n * @return {?}\n */\ndestroyView(hostElement: Element|DocumentFragment, viewAllNodes: Node[]) {\n    for (let /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n      this.delegate.destroyNode(viewAllNodes[i]);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlisten(renderElement: any, name: string, callback: Function): Function {\n    return this.delegate.listen(renderElement, name, /** @type {?} */(( <any>callback)));\n  }\n/**\n * @param {?} target\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlistenGlobal(target: string, name: string, callback: Function): Function {\n    return this.delegate.listen(target, name, /** @type {?} */(( <any>callback)));\n  }\n/**\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetElementProperty(\n      renderElement: Element|DocumentFragment, propertyName: string, propertyValue: any): void {\n    this.delegate.setProperty(renderElement, propertyName, propertyValue);\n  }\n/**\n * @param {?} renderElement\n * @param {?} namespaceAndName\n * @param {?} attributeValue\n * @return {?}\n */\nsetElementAttribute(renderElement: Element, namespaceAndName: string, attributeValue: string):\n      void {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    if (attributeValue != null) {\n      this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n    } else {\n      this.delegate.removeAttribute(renderElement, name, ns);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetBindingDebugInfo(renderElement: Element, propertyName: string, propertyValue: string): void {}\n/**\n * @param {?} renderElement\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nsetElementClass(renderElement: Element, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this.delegate.addClass(renderElement, className);\n    } else {\n      this.delegate.removeClass(renderElement, className);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetElementStyle(renderElement: HTMLElement, styleName: string, styleValue: string): void {\n    if (styleValue != null) {\n      this.delegate.setStyle(renderElement, styleName, styleValue);\n    } else {\n      this.delegate.removeStyle(renderElement, styleName);\n    }\n  }\n/**\n * @param {?} renderElement\n * @param {?} methodName\n * @param {?} args\n * @return {?}\n */\ninvokeElementMethod(renderElement: Element, methodName: string, args: any[]): void {\n    ( /** @type {?} */((renderElement as any)))[methodName].apply(renderElement, args);\n  }\n/**\n * @param {?} renderNode\n * @param {?} text\n * @return {?}\n */\nsetText(renderNode: Text, text: string): void { this.delegate.setValue(renderNode, text); }\n/**\n * @return {?}\n */\nanimate(): any { throw new Error('Renderer.animate is no longer supported!'); }\n}\n\nfunction RendererAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nRendererAdapter.prototype.delegate;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectorRef, SimpleChange, SimpleChanges, WrappedValue} from '../change_detection/change_detection';\nimport {Injector} from '../di';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\n\nimport {createChangeDetectorRef, createInjector, createRendererV1} from './refs';\nimport {BindingDef, BindingFlags, DepDef, DepFlags, NodeDef, NodeFlags, OutputDef, OutputType, ProviderData, QueryValueType, Services, ViewData, ViewFlags, ViewState, asElementData, asProviderData} from './types';\nimport {calcBindingFlags, checkBinding, dispatchEvent, isComponentView, splitMatchedQueriesDsl, tokenKey, viewParentEl} from './util';\n\nconst /** @type {?} */ RendererV1TokenKey = tokenKey(RendererV1);\nconst /** @type {?} */ Renderer2TokenKey = tokenKey(Renderer2);\nconst /** @type {?} */ ElementRefTokenKey = tokenKey(ElementRef);\nconst /** @type {?} */ ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nconst /** @type {?} */ TemplateRefTokenKey = tokenKey(TemplateRef);\nconst /** @type {?} */ ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nconst /** @type {?} */ InjectorRefTokenKey = tokenKey(Injector);\n\nconst /** @type {?} */ NOT_CREATED = new Object();\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nexport function directiveDef(\n    flags: NodeFlags, matchedQueries: [string | number, QueryValueType][], childCount: number,\n    ctor: any, deps: ([DepFlags, any] | any)[], props?: {[name: string]: [number, string]},\n    outputs?: {[name: string]: string}): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = [];\n  if (props) {\n    for (let /** @type {?} */ prop in props) {\n      const [bindingIndex, nonMinifiedName] = props[prop];\n      bindings[bindingIndex] = {\n        flags: BindingFlags.TypeProperty,\n        name: prop, nonMinifiedName,\n        ns: undefined,\n        securityContext: undefined,\n        suffix: undefined\n      };\n    }\n  }\n  const /** @type {?} */ outputDefs: OutputDef[] = [];\n  if (outputs) {\n    for (let /** @type {?} */ propName in outputs) {\n      outputDefs.push(\n          {type: OutputType.DirectiveOutput, propName, target: null, eventName: outputs[propName]});\n    }\n  }\n  flags |= NodeFlags.TypeDirective;\n  return _def(flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nexport function pipeDef(flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  flags |= NodeFlags.TypePipe;\n  return _def(flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nexport function providerDef(\n    flags: NodeFlags, matchedQueries: [string | number, QueryValueType][], token: any, value: any,\n    deps: ([DepFlags, any] | any)[]): NodeDef {\n  return _def(flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nexport function _def(\n    flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][], childCount: number,\n    token: any, value: any, deps: ([DepFlags, any] | any)[], bindings?: BindingDef[],\n    outputs?: OutputDef[]): NodeDef {\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  if (!outputs) {\n    outputs = [];\n  }\n  if (!bindings) {\n    bindings = [];\n  }\n\n  const /** @type {?} */ depDefs: DepDef[] = deps.map(value => {\n    let /** @type {?} */ token: any;\n    let /** @type {?} */ flags: DepFlags;\n    if (Array.isArray(value)) {\n      [flags, token] = value;\n    } else {\n      flags = DepFlags.None;\n      token = value;\n    }\n    return {flags, token, tokenKey: tokenKey(token)};\n  });\n\n  return {\n    // will bet set by the view definition\n    index: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    outputIndex: undefined,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references,\n    ngContentIndex: undefined, childCount, bindings,\n    bindingFlags: calcBindingFlags(bindings), outputs,\n    element: undefined,\n    provider: {token, tokenKey: tokenKey(token), value, deps: depDefs},\n    text: undefined,\n    query: undefined,\n    ngContent: undefined\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createProviderInstance(view: ViewData, def: NodeDef): any {\n  return def.flags & NodeFlags.LazyProvider ? NOT_CREATED : _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPipeInstance(view: ViewData, def: NodeDef): any {\n  // deps are looked up from component.\n  let /** @type {?} */ compView = view;\n  while (compView.parent && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  // pipes can see the private services of the component\n  const /** @type {?} */ allowPrivateServices = true;\n  // pipes are always eager and classes!\n  return createClass(\n      compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value,\n      def.provider.deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createDirectiveInstance(view: ViewData, def: NodeDef): any {\n  // components can see other private services, other directives can't.\n  const /** @type {?} */ allowPrivateServices = (def.flags & NodeFlags.Component) > 0;\n  // directives are always eager and classes!\n  const /** @type {?} */ instance =\n      createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n  if (def.outputs.length) {\n    for (let /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n      const /** @type {?} */ output = def.outputs[i];\n      const /** @type {?} */ subscription = instance[output.propName].subscribe(\n          eventHandlerClosure(view, def.parent.index, output.eventName));\n      view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n    }\n  }\n  return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateDirectiveInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ providerData = asProviderData(view, def.index);\n  const /** @type {?} */ directive = providerData.instance;\n  let /** @type {?} */ changed = false;\n  let /** @type {?} */ changes: SimpleChanges;\n  const /** @type {?} */ bindLen = def.bindings.length;\n  if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 0, v0, changes);\n  };\n  if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 1, v1, changes);\n  };\n  if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 2, v2, changes);\n  };\n  if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 3, v3, changes);\n  };\n  if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 4, v4, changes);\n  };\n  if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 5, v5, changes);\n  };\n  if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 6, v6, changes);\n  };\n  if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 7, v7, changes);\n  };\n  if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 8, v8, changes);\n  };\n  if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 9, v9, changes);\n  };\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateDirectiveDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ providerData = asProviderData(view, def.index);\n  const /** @type {?} */ directive = providerData.instance;\n  let /** @type {?} */ changed = false;\n  let /** @type {?} */ changes: SimpleChanges;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    if (checkBinding(view, def, i, values[i])) {\n      changed = true;\n      changes = updateProp(view, providerData, def, i, values[i], changes);\n    }\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((view.state & ViewState.FirstCheck) && (def.flags & NodeFlags.OnInit)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view: ViewData, def: NodeDef): any {\n  // private services can see other private services\n  const /** @type {?} */ allowPrivateServices = (def.flags & NodeFlags.PrivateProvider) > 0;\n  const /** @type {?} */ providerDef = def.provider;\n  let /** @type {?} */ injectable: any;\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      injectable =\n          createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeFactoryProvider:\n      injectable =\n          callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeUseExistingProvider:\n      injectable = resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n      break;\n    case NodeFlags.TypeValueProvider:\n      injectable = providerDef.value;\n      break;\n  }\n  return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, ctor: any, deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = new ctor();\n      break;\n    case 1:\n      injectable = new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n      break;\n    case 2:\n      injectable = new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n      break;\n    case 3:\n      injectable = new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = new Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      injectable = new ctor(...depValues);\n  }\n  return injectable;\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, factory: any,\n    deps: DepDef[]): any {\n  const /** @type {?} */ len = deps.length;\n  let /** @type {?} */ injectable: any;\n  switch (len) {\n    case 0:\n      injectable = factory();\n      break;\n    case 1:\n      injectable = factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n      break;\n    case 2:\n      injectable = factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n      break;\n    case 3:\n      injectable = factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n      break;\n    default:\n      const /** @type {?} */ depValues = Array(len);\n      for (let /** @type {?} */ i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      injectable = factory(...depValues);\n  }\n  return injectable;\n}\n\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nexport const /** @type {?} */ NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nexport function resolveDep(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, depDef: DepDef,\n    notFoundValue = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  const /** @type {?} */ startView = view;\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  const /** @type {?} */ tokenKey = depDef.tokenKey;\n\n  if (elDef && (depDef.flags & DepFlags.SkipSelf)) {\n    allowPrivateServices = false;\n    elDef = elDef.parent;\n  }\n\n  while (view) {\n    if (elDef) {\n      switch (tokenKey) {\n        case RendererV1TokenKey: {\n          const /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n          return createRendererV1(compView);\n        }\n        case Renderer2TokenKey: {\n          const /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n          return compView.renderer;\n        }\n        case ElementRefTokenKey:\n          return new ElementRef(asElementData(view, elDef.index).renderElement);\n        case ViewContainerRefTokenKey:\n          return asElementData(view, elDef.index).viewContainer;\n        case TemplateRefTokenKey: {\n          if (elDef.element.template) {\n            return asElementData(view, elDef.index).template;\n          }\n          break;\n        }\n        case ChangeDetectorRefTokenKey: {\n          let /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n          return createChangeDetectorRef(cdView);\n        }\n        case InjectorRefTokenKey:\n          return createInjector(view, elDef);\n        default:\n          const /** @type {?} */ providerDef =\n              (allowPrivateServices ? elDef.element.allProviders :\n                                      elDef.element.publicProviders)[tokenKey];\n          if (providerDef) {\n            const /** @type {?} */ providerData = asProviderData(view, providerDef.index);\n            if (providerData.instance === NOT_CREATED) {\n              providerData.instance = _createProviderInstance(view, providerDef);\n            }\n            return providerData.instance;\n          }\n      }\n    }\n    allowPrivateServices = isComponentView(view);\n    elDef = viewParentEl(view);\n    view = view.parent;\n  }\n\n  const /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n\n  if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n      notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n    // Return the value from the root element injector when\n    // - it provides it\n    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    // - the module injector should not be checked\n    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    return value;\n  }\n\n  return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view: ViewData, elDef: NodeDef, allowPrivateServices: boolean) {\n  let /** @type {?} */ compView: ViewData;\n  if (allowPrivateServices) {\n    compView = asElementData(view, elDef.index).componentView;\n  } else {\n    compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n      compView = compView.parent;\n    }\n  }\n  return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(\n    view: ViewData, providerData: ProviderData, def: NodeDef, bindingIdx: number, value: any,\n    changes: SimpleChanges): SimpleChanges {\n  if (def.flags & NodeFlags.Component) {\n    const /** @type {?} */ compView = asElementData(view, def.parent.index).componentView;\n    if (compView.def.flags & ViewFlags.OnPush) {\n      compView.state |= ViewState.ChecksEnabled;\n    }\n  }\n  const /** @type {?} */ binding = def.bindings[bindingIdx];\n  const /** @type {?} */ propName = binding.name;\n  // Note: This is still safe with Closure Compiler as\n  // the user passed in the property name as an object has to `providerDef`,\n  // so Closure Compiler will have renamed the property correctly already.\n  providerData.instance[propName] = value;\n  if (def.flags & NodeFlags.OnChanges) {\n    changes = changes || {};\n    let /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if (oldValue instanceof WrappedValue) {\n      oldValue = oldValue.wrapped;\n    }\n    const /** @type {?} */ binding = def.bindings[bindingIdx];\n    changes[binding.nonMinifiedName] =\n        new SimpleChange(oldValue, value, (view.state & ViewState.FirstCheck) !== 0);\n  }\n  view.oldValues[def.bindingIndex + bindingIdx] = value;\n  return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nexport function callLifecycleHooksChildrenFirst(view: ViewData, lifecycles: NodeFlags) {\n  if (!(view.def.nodeFlags & lifecycles)) {\n    return;\n  }\n  const /** @type {?} */ nodes = view.def.nodes;\n  for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n    const /** @type {?} */ nodeDef = nodes[i];\n    let /** @type {?} */ parent = nodeDef.parent;\n    if (!parent && nodeDef.flags & lifecycles) {\n      // matching root node (e.g. a pipe)\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n    }\n    if ((nodeDef.childFlags & lifecycles) === 0) {\n      // no child matches one of the lifecycles\n      i += nodeDef.childCount;\n    }\n    while (parent && (parent.flags & NodeFlags.TypeElement) &&\n           i === parent.index + parent.childCount) {\n      // last child of an element\n      if (parent.directChildFlags & lifecycles) {\n        callElementProvidersLifecycles(view, parent, lifecycles);\n      }\n      parent = parent.parent;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view: ViewData, elDef: NodeDef, lifecycles: NodeFlags) {\n  for (let /** @type {?} */ i = elDef.index + 1; i <= elDef.index + elDef.childCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & lifecycles) {\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n    }\n    // only visit direct children\n    i += nodeDef.childCount;\n  }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view: ViewData, index: number, lifecycles: NodeFlags) {\n  const /** @type {?} */ provider = asProviderData(view, index).instance;\n  if (provider === NOT_CREATED) {\n    return;\n  }\n  Services.setCurrentNode(view, index);\n  if (lifecycles & NodeFlags.AfterContentInit) {\n    provider.ngAfterContentInit();\n  }\n  if (lifecycles & NodeFlags.AfterContentChecked) {\n    provider.ngAfterContentChecked();\n  }\n  if (lifecycles & NodeFlags.AfterViewInit) {\n    provider.ngAfterViewInit();\n  }\n  if (lifecycles & NodeFlags.AfterViewChecked) {\n    provider.ngAfterViewChecked();\n  }\n  if (lifecycles & NodeFlags.OnDestroy) {\n    provider.ngOnDestroy();\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Renderer2} from '../render/api';\n\nimport {checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement, listenToElementOutputs} from './element';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {appendNgContent} from './ng_content';\nimport {callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance} from './provider';\nimport {checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression} from './pure_expression';\nimport {checkAndUpdateQuery, createQuery} from './query';\nimport {createTemplateData, createViewContainerData} from './refs';\nimport {checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText} from './text';\nimport {ArgumentType, CheckType, ElementData, NodeData, NodeDef, NodeFlags, ProviderData, RootData, Services, ViewData, ViewDefinition, ViewFlags, ViewHandleEventFn, ViewState, ViewUpdateFn, asElementData, asQueryList, asTextData} from './types';\nimport {NOOP, checkBindingNoChanges, isComponentView, resolveViewDefinition} from './util';\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nexport function viewDef(\n    flags: ViewFlags, nodes: NodeDef[], updateDirectives?: ViewUpdateFn,\n    updateRenderer?: ViewUpdateFn): ViewDefinition {\n  // clone nodes and set auto calculated values\n  let /** @type {?} */ viewBindingCount = 0;\n  let /** @type {?} */ viewDisposableCount = 0;\n  let /** @type {?} */ viewNodeFlags = 0;\n  let /** @type {?} */ viewRootNodeFlags = 0;\n  let /** @type {?} */ viewMatchedQueries = 0;\n  let /** @type {?} */ currentParent: NodeDef = null;\n  let /** @type {?} */ currentElementHasPublicProviders = false;\n  let /** @type {?} */ currentElementHasPrivateProviders = false;\n  let /** @type {?} */ lastRenderRootNode: NodeDef = null;\n  for (let /** @type {?} */ i = 0; i < nodes.length; i++) {\n    while (currentParent && i > currentParent.index + currentParent.childCount) {\n      const /** @type {?} */ newParent = currentParent.parent;\n      if (newParent) {\n        newParent.childFlags |= currentParent.childFlags;\n        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n      }\n      currentParent = newParent;\n    }\n    const /** @type {?} */ node = nodes[i];\n    node.index = i;\n    node.parent = currentParent;\n    node.bindingIndex = viewBindingCount;\n    node.outputIndex = viewDisposableCount;\n\n    // renderParent needs to account for ng-container!\n    let /** @type {?} */ currentRenderParent: NodeDef;\n    if (currentParent && currentParent.flags & NodeFlags.TypeElement &&\n        !currentParent.element.name) {\n      currentRenderParent = currentParent.renderParent;\n    } else {\n      currentRenderParent = currentParent;\n    }\n    node.renderParent = currentRenderParent;\n\n    if (node.element) {\n      const /** @type {?} */ elDef = node.element;\n      elDef.publicProviders =\n          currentParent ? currentParent.element.publicProviders : Object.create(null);\n      elDef.allProviders = elDef.publicProviders;\n      // Note: We assume that all providers of an element are before any child element!\n      currentElementHasPublicProviders = false;\n      currentElementHasPrivateProviders = false;\n    }\n    validateNode(currentParent, node, nodes.length);\n\n    viewNodeFlags |= node.flags;\n    viewMatchedQueries |= node.matchedQueryIds;\n    if (node.element && node.element.template) {\n      viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n    }\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      currentParent.directChildFlags |= node.flags;\n      currentParent.childMatchedQueries |= node.matchedQueryIds;\n      if (node.element && node.element.template) {\n        currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    } else {\n      viewRootNodeFlags |= node.flags;\n    }\n\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.outputs.length;\n\n    if (!currentRenderParent && (node.flags & NodeFlags.CatRenderNode)) {\n      lastRenderRootNode = node;\n    }\n    if (node.flags & NodeFlags.CatProvider) {\n      if (!currentElementHasPublicProviders) {\n        currentElementHasPublicProviders = true;\n        // Use prototypical inheritance to not get O(n^2) complexity...\n        currentParent.element.publicProviders =\n            Object.create(currentParent.element.publicProviders);\n        currentParent.element.allProviders = currentParent.element.publicProviders;\n      }\n      const /** @type {?} */ isPrivateService = (node.flags & NodeFlags.PrivateProvider) !== 0;\n      const /** @type {?} */ isComponent = (node.flags & NodeFlags.Component) !== 0;\n      if (!isPrivateService || isComponent) {\n        currentParent.element.publicProviders[node.provider.tokenKey] = node;\n      } else {\n        if (!currentElementHasPrivateProviders) {\n          currentElementHasPrivateProviders = true;\n          // Use protoyypical inheritance to not get O(n^2) complexity...\n          currentParent.element.allProviders = Object.create(currentParent.element.publicProviders);\n        }\n        currentParent.element.allProviders[node.provider.tokenKey] = node;\n      }\n      if (isComponent) {\n        currentParent.element.componentProvider = node;\n      }\n    }\n    if (node.childCount) {\n      currentParent = node;\n    }\n  }\n  while (currentParent) {\n    const /** @type {?} */ newParent = currentParent.parent;\n    if (newParent) {\n      newParent.childFlags |= currentParent.childFlags;\n      newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n    }\n    currentParent = newParent;\n  }\n  const /** @type {?} */ handleEvent: ViewHandleEventFn = (view, nodeIndex, eventName, event) =>\n      nodes[nodeIndex].element.handleEvent(view, eventName, event);\n  return {\n    // Will be filled later...\n    factory: undefined,\n    nodeFlags: viewNodeFlags,\n    rootNodeFlags: viewRootNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries, flags,\n    nodes: nodes,\n    updateDirectives: updateDirectives || NOOP,\n    updateRenderer: updateRenderer || NOOP,\n    handleEvent: handleEvent || NOOP,\n    bindingCount: viewBindingCount,\n    outputCount: viewDisposableCount, lastRenderRootNode\n  };\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent: NodeDef, node: NodeDef, nodeCount: number) {\n  const /** @type {?} */ template = node.element && node.element.template;\n  if (template) {\n    if (!template.lastRenderRootNode) {\n      throw new Error(`Illegal State: Embedded templates without nodes are not allowed!`);\n    }\n    if (template.lastRenderRootNode &&\n        template.lastRenderRootNode.flags & NodeFlags.EmbeddedViews) {\n      throw new Error(\n          `Illegal State: Last root node of a template can't have embedded views, at index ${node.index}!`);\n    }\n  }\n  if (node.flags & NodeFlags.CatProvider) {\n    const /** @type {?} */ parentFlags = parent ? parent.flags : null;\n    if ((parentFlags & NodeFlags.TypeElement) === 0) {\n      throw new Error(\n          `Illegal State: Provider/Directive nodes need to be children of elements or anchors, at index ${node.index}!`);\n    }\n  }\n  if (node.query) {\n    if (node.flags & NodeFlags.TypeContentQuery &&\n        (!parent || (parent.flags & NodeFlags.TypeDirective) === 0)) {\n      throw new Error(\n          `Illegal State: Content Query nodes need to be children of directives, at index ${node.index}!`);\n    }\n    if (node.flags & NodeFlags.TypeViewQuery && parent) {\n      throw new Error(\n          `Illegal State: View Query nodes have to be top level nodes, at index ${node.index}!`);\n    }\n  }\n  if (node.childCount) {\n    const /** @type {?} */ parentEnd = parent ? parent.index + parent.childCount : nodeCount - 1;\n    if (node.index <= parentEnd && node.index + node.childCount > parentEnd) {\n      throw new Error(\n          `Illegal State: childCount of node leads outside of parent, at index ${node.index}!`);\n    }\n  }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?=} context\n * @return {?}\n */\nexport function createEmbeddedView(parent: ViewData, anchorDef: NodeDef, context?: any): ViewData {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const /** @type {?} */ view =\n      createView(parent.root, parent.renderer, parent, anchorDef, anchorDef.element.template);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nexport function createRootView(root: RootData, def: ViewDefinition, context?: any): ViewData {\n  const /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(\n    root: RootData, renderer: Renderer2, parent: ViewData, parentNodeDef: NodeDef,\n    def: ViewDefinition): ViewData {\n  const /** @type {?} */ nodes: NodeData[] = new Array(def.nodes.length);\n  const /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : undefined;\n  const /** @type {?} */ view: ViewData = {\n    def,\n    parent,\n    viewContainerParent: undefined, parentNodeDef,\n    context: undefined,\n    component: undefined, nodes,\n    state: ViewState.FirstCheck | ViewState.ChecksEnabled, root, renderer,\n    oldValues: new Array(def.bindingCount), disposables\n  };\n  return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view: ViewData, component: any, context: any) {\n  view.component = component;\n  view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view: ViewData) {\n  let /** @type {?} */ renderHost: any;\n  if (isComponentView(view)) {\n    const /** @type {?} */ hostDef = view.parentNodeDef;\n    renderHost = asElementData(view.parent, hostDef.parent.index).renderElement;\n  }\n  const /** @type {?} */ def = view.def;\n  const /** @type {?} */ nodes = view.nodes;\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    Services.setCurrentNode(view, i);\n    let /** @type {?} */ nodeData: any;\n    switch (nodeDef.flags & NodeFlags.Types) {\n      case NodeFlags.TypeElement:\n        const /** @type {?} */ el = /** @type {?} */(( createElement(view, renderHost, nodeDef) as any));\n        let /** @type {?} */ componentView: ViewData;\n        if (nodeDef.flags & NodeFlags.ComponentView) {\n          const /** @type {?} */ compViewDef = resolveViewDefinition(nodeDef.element.componentView);\n          const /** @type {?} */ rendererType = nodeDef.element.componentRendererType;\n          let /** @type {?} */ compRenderer: Renderer2;\n          if (!rendererType) {\n            compRenderer = view.root.renderer;\n          } else {\n            compRenderer = view.root.rendererFactory.createRenderer(el, rendererType);\n          }\n          componentView = createView(\n              view.root, compRenderer, view, nodeDef.element.componentProvider, compViewDef);\n        }\n        listenToElementOutputs(view, componentView, nodeDef, el);\n        nodeData = /** @type {?} */(( <ElementData>{\n          renderElement: el,\n          componentView,\n          viewContainer: undefined,\n          template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n        }));\n        if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n          nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n        }\n        break;\n      case NodeFlags.TypeText:\n        nodeData = /** @type {?} */(( createText(view, renderHost, nodeDef) as any));\n        break;\n      case NodeFlags.TypeClassProvider:\n      case NodeFlags.TypeFactoryProvider:\n      case NodeFlags.TypeUseExistingProvider:\n      case NodeFlags.TypeValueProvider: {\n        const /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        break;\n      }\n      case NodeFlags.TypePipe: {\n        const /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        break;\n      }\n      case NodeFlags.TypeDirective: {\n        const /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n        nodeData = /** @type {?} */(( <ProviderData>{instance}));\n        if (nodeDef.flags & NodeFlags.Component) {\n          const /** @type {?} */ compView = asElementData(view, nodeDef.parent.index).componentView;\n          initView(compView, instance, instance);\n        }\n        break;\n      }\n      case NodeFlags.TypePureArray:\n      case NodeFlags.TypePureObject:\n      case NodeFlags.TypePurePipe:\n        nodeData = /** @type {?} */(( createPureExpression(view, nodeDef) as any));\n        break;\n      case NodeFlags.TypeContentQuery:\n      case NodeFlags.TypeViewQuery:\n        nodeData = /** @type {?} */(( createQuery() as any));\n        break;\n      case NodeFlags.TypeNgContent:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodeData = undefined;\n        break;\n    }\n    nodes[i] = nodeData;\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n\n  // fill static content and view queries\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery | NodeFlags.TypeViewQuery, NodeFlags.StaticQuery,\n      CheckType.CheckAndUpdate);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkNoChangesView(view: ViewData) {\n  Services.updateDirectives(view, CheckType.CheckNoChanges);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  Services.updateRenderer(view, CheckType.CheckNoChanges);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  // Note: We don't check queries for changes as we didn't do this in v2.x.\n  // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function checkAndUpdateView(view: ViewData) {\n  Services.updateDirectives(view, CheckType.CheckAndUpdate);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterContentChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterContentInit : 0));\n\n  Services.updateRenderer(view, CheckType.CheckAndUpdate);\n\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeViewQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterViewChecked |\n          (view.state & ViewState.FirstCheck ? NodeFlags.AfterViewInit : 0));\n\n  if (view.def.flags & ViewFlags.OnPush) {\n    view.state &= ~ViewState.ChecksEnabled;\n  }\n  view.state &= ~ViewState.FirstCheck;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  if (argStyle === ArgumentType.Inline) {\n    return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0?: any, v1?: any, v2?: any, v3?: any, v4?: any, v5?: any,\n    v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  let /** @type {?} */ changed = false;\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      changed = checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n    case NodeFlags.TypeText:\n      changed = checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n    case NodeFlags.TypeDirective:\n      changed =\n          checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      changed =\n          checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n      break;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): boolean {\n  let /** @type {?} */ changed = false;\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      changed = checkAndUpdateElementDynamic(view, nodeDef, values);\n      break;\n    case NodeFlags.TypeText:\n      changed = checkAndUpdateTextDynamic(view, nodeDef, values);\n      break;\n    case NodeFlags.TypeDirective:\n      changed = checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n      break;\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      changed = checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n      break;\n  }\n  if (changed) {\n    // Update oldValues after all bindings have been updated,\n    // as a setter for a property might update other properties.\n    const /** @type {?} */ bindLen = nodeDef.bindings.length;\n    const /** @type {?} */ bindingStart = nodeDef.bindingIndex;\n    const /** @type {?} */ oldValues = view.oldValues;\n    for (let /** @type {?} */ i = 0; i < bindLen; i++) {\n      oldValues[bindingStart + i] = values[i];\n    }\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nexport function checkNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    checkNoChangesNodeDynamic(view, nodeDef, v0);\n  }\n  // Returning false is ok here as we would have thrown in case of a change.\n  return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): void {\n  const /** @type {?} */ bindLen = nodeDef.bindings.length;\n  if (bindLen > 0) checkBindingNoChanges(view, nodeDef, 0, v0);\n  if (bindLen > 1) checkBindingNoChanges(view, nodeDef, 1, v1);\n  if (bindLen > 2) checkBindingNoChanges(view, nodeDef, 2, v2);\n  if (bindLen > 3) checkBindingNoChanges(view, nodeDef, 3, v3);\n  if (bindLen > 4) checkBindingNoChanges(view, nodeDef, 4, v4);\n  if (bindLen > 5) checkBindingNoChanges(view, nodeDef, 5, v5);\n  if (bindLen > 6) checkBindingNoChanges(view, nodeDef, 6, v6);\n  if (bindLen > 7) checkBindingNoChanges(view, nodeDef, 7, v7);\n  if (bindLen > 8) checkBindingNoChanges(view, nodeDef, 8, v8);\n  if (bindLen > 9) checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): void {\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, nodeDef.index), `Query ${nodeDef.query.id} not dirty`,\n        `Query ${nodeDef.query.id} dirty`, (view.state & ViewState.FirstCheck) !== 0);\n  }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function destroyView(view: ViewData) {\n  if (view.state & ViewState.Destroyed) {\n    return;\n  }\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  execComponentViewsAction(view, ViewAction.Destroy);\n  callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n  if (view.disposables) {\n    for (let /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  if (view.renderer.destroyNode) {\n    destroyViewNodes(view);\n  }\n  if (isComponentView(view)) {\n    view.renderer.destroy();\n  }\n  view.state |= ViewState.Destroyed;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view: ViewData) {\n  const /** @type {?} */ len = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < len; i++) {\n    const /** @type {?} */ def = view.def.nodes[i];\n    if (def.flags & NodeFlags.TypeElement) {\n      view.renderer.destroyNode(asElementData(view, i).renderElement);\n    } else if (def.flags & NodeFlags.TypeText) {\n      view.renderer.destroyNode(asTextData(view, i).renderText);\n    }\n  }\n}\ntype ViewAction = number;\nlet ViewAction: any = {};\nViewAction.CreateViewNodes = 0;\nViewAction.CheckNoChanges = 1;\nViewAction.CheckAndUpdate = 2;\nViewAction.Destroy = 3;\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ComponentView)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ComponentView) {\n      // a leaf\n      callViewAction(asElementData(view, i).componentView, action);\n    } else if ((nodeDef.childFlags & NodeFlags.ComponentView) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ def = view.def;\n  if (!(def.nodeFlags & NodeFlags.EmbeddedViews)) {\n    return;\n  }\n  for (let /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      // a leaf\n      const /** @type {?} */ embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n      for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n        callViewAction(embeddedViews[k], action);\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.EmbeddedViews) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view: ViewData, action: ViewAction) {\n  const /** @type {?} */ viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & ViewState.ChecksEnabled) &&\n          (viewState & (ViewState.Errored | ViewState.Destroyed)) === 0) {\n        checkNoChangesView(view);\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & ViewState.ChecksEnabled) &&\n          (viewState & (ViewState.Errored | ViewState.Destroyed)) === 0) {\n        checkAndUpdateView(view);\n      }\n      break;\n    case ViewAction.Destroy:\n      destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      createViewNodes(view);\n      break;\n  }\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(\n    view: ViewData, queryFlags: NodeFlags, staticDynamicQueryFlag: NodeFlags,\n    checkType: CheckType) {\n  if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n    return;\n  }\n  const /** @type {?} */ nodeCount = view.def.nodes.length;\n  for (let /** @type {?} */ i = 0; i < nodeCount; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n      Services.setCurrentNode(view, nodeDef.index);\n      switch (checkType) {\n        case CheckType.CheckAndUpdate:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case CheckType.CheckNoChanges:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    }\n    if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n      // no child has a matching query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {isDevMode} from '../application_ref';\nimport {DebugElement, DebugNode, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex} from '../debug/debug_node';\nimport {Injector} from '../di';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '../render/api';\nimport {Sanitizer} from '../security';\n\nimport {isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {resolveDep} from './provider';\nimport {dirtyParentQueries, getQueryValue} from './query';\nimport {createInjector} from './refs';\nimport {ArgumentType, BindingFlags, CheckType, DebugContext, ElementData, NodeDef, NodeFlags, NodeLogger, RootData, Services, ViewData, ViewDefinition, ViewState, asElementData, asPureExpressionData} from './types';\nimport {NOOP, isComponentView, renderNode, viewParentEl} from './util';\nimport {checkAndUpdateNode, checkAndUpdateView, checkNoChangesNode, checkNoChangesView, createEmbeddedView, createRootView, destroyView} from './view';\n\n\nlet /** @type {?} */ initialized = false;\n/**\n * @return {?}\n */\nexport function initServicesIfNeeded() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n  Services.setCurrentNode = services.setCurrentNode;\n  Services.createRootView = services.createRootView;\n  Services.createEmbeddedView = services.createEmbeddedView;\n  Services.checkAndUpdateView = services.checkAndUpdateView;\n  Services.checkNoChangesView = services.checkNoChangesView;\n  Services.destroyView = services.destroyView;\n  Services.resolveDep = resolveDep;\n  Services.createDebugContext = services.createDebugContext;\n  Services.handleEvent = services.handleEvent;\n  Services.updateDirectives = services.updateDirectives;\n  Services.updateRenderer = services.updateRenderer;\n  Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n  return {\n    setCurrentNode: () => {},\n    createRootView: createProdRootView,\n    createEmbeddedView: createEmbeddedView,\n    checkAndUpdateView: checkAndUpdateView,\n    checkNoChangesView: checkNoChangesView,\n    destroyView: destroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: (view: ViewData, nodeIndex: number, eventName: string, event: any) =>\n                     view.def.handleEvent(view, nodeIndex, eventName, event),\n    updateDirectives: (view: ViewData, checkType: CheckType) => view.def.updateDirectives(\n                          checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                   prodCheckNoChangesNode,\n                          view),\n    updateRenderer: (view: ViewData, checkType: CheckType) => view.def.updateRenderer(\n                        checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                 prodCheckNoChangesNode,\n                        view),\n  };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n  return {\n    setCurrentNode: debugSetCurrentNode,\n    createRootView: debugCreateRootView,\n    createEmbeddedView: debugCreateEmbeddedView,\n    checkAndUpdateView: debugCheckAndUpdateView,\n    checkNoChangesView: debugCheckNoChangesView,\n    destroyView: debugDestroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: debugHandleEvent,\n    updateDirectives: debugUpdateDirectives,\n    updateRenderer: debugUpdateRenderer\n  };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const /** @type {?} */ rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  return createRootView(\n      createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode),\n      def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const /** @type {?} */ rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  const /** @type {?} */ root = createRootData(\n      elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes,\n      rootSelectorOrNode);\n  return callWithDebugContext(DebugAction.create, createRootView, null, [root, def, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(\n    elInjector: Injector, ngModule: NgModuleRef<any>, rendererFactory: RendererFactory2,\n    projectableNodes: any[][], rootSelectorOrNode: any): RootData {\n  const /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n  const /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n  return {\n    ngModule,\n    injector: elInjector, projectableNodes,\n    selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer\n  };\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(\n    view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, nodeIndex).value :\n      undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(\n    view: ViewData, nodeIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n  checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, nodeIndex).value :\n      undefined;\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parent: ViewData, anchorDef: NodeDef, context?: any): ViewData {\n  return callWithDebugContext(\n      DebugAction.create, createEmbeddedView, null, [parent, anchorDef, context]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view: ViewData) {\n  return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view: ViewData) {\n  return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view: ViewData) {\n  return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\ntype DebugAction = number;\nlet DebugAction: any = {};\nDebugAction.create = 0;\nDebugAction.detectChanges = 1;\nDebugAction.checkNoChanges = 2;\nDebugAction.destroy = 3;\nDebugAction.handleEvent = 4;\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\n\n\nlet /** @type {?} */ _currentAction: DebugAction;\nlet /** @type {?} */ _currentView: ViewData;\nlet /** @type {?} */ _currentNodeIndex: number;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view: ViewData, nodeIndex: number) {\n  _currentView = view;\n  _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view: ViewData, nodeIndex: number, eventName: string, event: any) {\n  debugSetCurrentNode(view, nodeIndex);\n  return callWithDebugContext(\n      DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n  return view.def.updateDirectives(debugCheckDirectivesFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {...?} values\n * @return {?}\n */\nfunction debugCheckDirectivesFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.index).value :\n        undefined;\n  }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n  return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} argStyle\n * @param {...?} values\n * @return {?}\n */\nfunction debugCheckRenderNodeFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.index).value :\n        undefined;\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, givenValues: any[]): void {\n  const /** @type {?} */ changed = ( /** @type {?} */((<any>checkAndUpdateNode)))(view, nodeDef, argStyle, ...givenValues);\n  if (changed) {\n    const /** @type {?} */ values = argStyle === ArgumentType.Dynamic ? givenValues[0] : givenValues;\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      const /** @type {?} */ bindingValues: {[key: string]: string} = {};\n      for (let /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n        const /** @type {?} */ binding = nodeDef.bindings[i];\n        const /** @type {?} */ value = values[i];\n        if (binding.flags & BindingFlags.TypeProperty) {\n          bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n              normalizeDebugBindingValue(value);\n        }\n      }\n      const /** @type {?} */ elDef = nodeDef.parent;\n      const /** @type {?} */ el = asElementData(view, elDef.index).renderElement;\n      if (!elDef.element.name) {\n        // a comment.\n        view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n      } else {\n        // a regular element.\n        for (let /** @type {?} */ attr in bindingValues) {\n          const /** @type {?} */ value = bindingValues[attr];\n          if (value != null) {\n            view.renderer.setAttribute(el, attr, value);\n          } else {\n            view.renderer.removeAttribute(el, attr);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, values: any[]): void {\n  ( /** @type {?} */((<any>checkNoChangesNode)))(view, nodeDef, argStyle, ...values);\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name: string) {\n  // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n  name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n  return `ng-reflect-${name}`;\n}\n\nconst /** @type {?} */ CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: any[]) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value: any): string {\n  try {\n    // Limit the size of the value as otherwise the DOM just gets polluted.\n    return value ? value.toString().slice(0, 30) : value;\n  } catch ( /** @type {?} */e) {\n    return '[ERROR] Exception while trying to serialize the value';\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view: ViewData, nodeIndex: number): number {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & NodeFlags.TypeDirective && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view: ViewData, nodeIndex: number): number {\n  for (let /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & NodeFlags.CatRenderNode) && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return undefined;\n}\nclass DebugContext_ implements DebugContext {\nprivate nodeDef: NodeDef;\nprivate elView: ViewData;\nprivate elDef: NodeDef;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n */\nconstructor(public view: ViewData,\npublic nodeIndex: number) {\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = 0;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    let elDef = this.nodeDef;\n    let elView = view;\n    while (elDef && (elDef.flags & NodeFlags.TypeElement) === 0) {\n      elDef = elDef.parent;\n    }\n    if (!elDef) {\n      while (!elDef && elView) {\n        elDef = viewParentEl(elView);\n        elView = elView.parent;\n      }\n    }\n    this.elDef = elDef;\n    this.elView = elView;\n  }\n/**\n * @return {?}\n */\nprivate get elOrCompView() {\n    // Has to be done lazily as we use the DebugContext also during creation of elements...\n    return asElementData(this.elView, this.elDef.index).componentView || this.view;\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return createInjector(this.elView, this.elDef); }\n/**\n * @return {?}\n */\nget component(): any { return this.elOrCompView.component; }\n/**\n * @return {?}\n */\nget context(): any { return this.elOrCompView.context; }\n/**\n * @return {?}\n */\nget providerTokens(): any[] {\n    const /** @type {?} */ tokens: any[] = [];\n    if (this.elDef) {\n      for (let /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n        const /** @type {?} */ childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          tokens.push(childDef.provider.token);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return tokens;\n  }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} {\n    const /** @type {?} */ references: {[key: string]: any} = {};\n    if (this.elDef) {\n      collectReferences(this.elView, this.elDef, references);\n\n      for (let /** @type {?} */ i = this.elDef.index + 1; i <= this.elDef.index + this.elDef.childCount; i++) {\n        const /** @type {?} */ childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          collectReferences(this.elView, childDef, references);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return references;\n  }\n/**\n * @return {?}\n */\nget componentRenderElement() {\n    const /** @type {?} */ elData = findHostElement(this.elOrCompView);\n    return elData ? elData.renderElement : undefined;\n  }\n/**\n * @return {?}\n */\nget renderNode(): any {\n    return this.nodeDef.flags & NodeFlags.TypeText ? renderNode(this.view, this.nodeDef) :\n                                                     renderNode(this.elView, this.elDef);\n  }\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nlogError(console: Console, ...values: any[]) {\n    let /** @type {?} */ logViewDef: ViewDefinition;\n    let /** @type {?} */ logNodeIndex: number;\n    if (this.nodeDef.flags & NodeFlags.TypeText) {\n      logViewDef = this.view.def;\n      logNodeIndex = this.nodeDef.index;\n    } else {\n      logViewDef = this.elView.def;\n      logNodeIndex = this.elDef.index;\n    }\n    // Note: we only generate a log function for text and element nodes\n    // to make the generated code as small as possible.\n    const /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n    let /** @type {?} */ currRenderNodeIndex = -1;\n    let /** @type {?} */ nodeLogger: NodeLogger = () => {\n      currRenderNodeIndex++;\n      if (currRenderNodeIndex === renderNodeIndex) {\n        return console.error.bind(console, ...values);\n      } else {\n        return NOOP;\n      }\n    };\n    logViewDef.factory(nodeLogger);\n    if (currRenderNodeIndex < renderNodeIndex) {\n      console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n      ( /** @type {?} */((<any>console.error)))(...values);\n    }\n  }\n}\n\nfunction DebugContext__tsickle_Closure_declarations() {\n/** @type {?} */\nDebugContext_.prototype.nodeDef;\n/** @type {?} */\nDebugContext_.prototype.elView;\n/** @type {?} */\nDebugContext_.prototype.elDef;\n/** @type {?} */\nDebugContext_.prototype.view;\n/** @type {?} */\nDebugContext_.prototype.nodeIndex;\n}\n\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef: ViewDefinition, nodeIndex: number): number {\n  let /** @type {?} */ renderNodeIndex = -1;\n  for (let /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n    const /** @type {?} */ nodeDef = viewDef.nodes[i];\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      renderNodeIndex++;\n    }\n  }\n  return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view: ViewData): ElementData {\n  while (view && !isComponentView(view)) {\n    view = view.parent;\n  }\n  if (view.parent) {\n    return asElementData(view.parent, viewParentEl(view).index);\n  }\n  return undefined;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view: ViewData, nodeDef: NodeDef, references: {[key: string]: any}) {\n  for (let /** @type {?} */ refName in nodeDef.references) {\n    references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n  }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action: DebugAction, fn: any, self: any, args: any[]) {\n  const /** @type {?} */ oldAction = _currentAction;\n  const /** @type {?} */ oldView = _currentView;\n  const /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n  try {\n    _currentAction = action;\n    const /** @type {?} */ result = fn.apply(self, args);\n    _currentView = oldView;\n    _currentNodeIndex = oldNodeIndex;\n    _currentAction = oldAction;\n    return result;\n  } catch ( /** @type {?} */e) {\n    if (isViewDebugError(e) || !_currentView) {\n      throw e;\n    }\n    _currentView.state |= ViewState.Errored;\n    throw viewWrappedDebugError(e, getCurrentDebugContext());\n  }\n}\n/**\n * @return {?}\n */\nexport function getCurrentDebugContext(): DebugContext {\n  return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nclass DebugRendererFactory2 implements RendererFactory2 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: RendererFactory2) {}\n/**\n * @param {?} element\n * @param {?} renderData\n * @return {?}\n */\ncreateRenderer(element: any, renderData: RendererType2): Renderer2 {\n    return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n  }\n}\n\nfunction DebugRendererFactory2_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRendererFactory2.prototype.delegate;\n}\n\nclass DebugRenderer2 implements Renderer2 {\n/**\n * @param {?} delegate\n */\nconstructor(private delegate: Renderer2) {}\n/**\n * @return {?}\n */\nget data() { return this.delegate.data; }\n/**\n * @param {?} node\n * @return {?}\n */\ndestroyNode(node: any) {\n    removeDebugNodeFromIndex(getDebugNode(node));\n    if (this.delegate.destroyNode) {\n      this.delegate.destroyNode(node);\n    }\n  }\n/**\n * @return {?}\n */\ndestroy() { this.delegate.destroy(); }\n/**\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string): any {\n    const /** @type {?} */ el = this.delegate.createElement(name, namespace);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      const /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n      debugEl.name = name;\n      indexDebugNode(debugEl);\n    }\n    return el;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string): any {\n    const /** @type {?} */ comment = this.delegate.createComment(value);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(comment, null, debugCtx));\n    }\n    return comment;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string): any {\n    const /** @type {?} */ text = this.delegate.createText(value);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugNode(text, null, debugCtx));\n    }\n    return text;\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.addChild(debugChildEl);\n    }\n    this.delegate.appendChild(parent, newChild);\n  }\n/**\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(newChild);\n    const /** @type {?} */ debugRefEl = getDebugNode(refChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.insertBefore(debugRefEl, debugChildEl);\n    }\n\n    this.delegate.insertBefore(parent, newChild, refChild);\n  }\n/**\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(parent);\n    const /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n      debugEl.removeChild(debugChildEl);\n    }\n    this.delegate.removeChild(parent, oldChild);\n  }\n/**\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any): any {\n    const /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n    const /** @type {?} */ debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugElement(el, null, debugCtx));\n    }\n    return el;\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = value;\n    }\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      const /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = null;\n    }\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = true;\n    }\n    this.delegate.addClass(el, name);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.classes[name] = false;\n    }\n    this.delegate.removeClass(el, name);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = value;\n    }\n    this.delegate.setStyle(el, style, value, flags);\n  }\n/**\n * @param {?} el\n * @param {?} style\n * @param {?} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.styles[style] = null;\n    }\n    this.delegate.removeStyle(el, style, flags);\n  }\n/**\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any): void {\n    const /** @type {?} */ debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement) {\n      debugEl.properties[name] = value;\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n/**\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      target: 'document'|'windows'|'body'|any, eventName: string,\n      callback: (event: any) => boolean): () => void {\n    if (typeof target !== 'string') {\n      const /** @type {?} */ debugEl = getDebugNode(target);\n      if (debugEl) {\n        debugEl.listeners.push(new EventListener(eventName, callback));\n      }\n    }\n\n    return this.delegate.listen(target, eventName, callback);\n  }\n/**\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any): any { return this.delegate.parentNode(node); }\n/**\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any): any { return this.delegate.nextSibling(node); }\n/**\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string): void { return this.delegate.setValue(node, value); }\n}\n\nfunction DebugRenderer2_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugRenderer2.prototype.delegate;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {APP_INITIALIZER, ApplicationInitStatus} from './application_init';\nimport {ApplicationRef, ApplicationRef_} from './application_ref';\nimport {APP_ID_RANDOM_PROVIDER} from './application_tokens';\nimport {IterableDiffers, KeyValueDiffers, defaultIterableDiffers, defaultKeyValueDiffers} from './change_detection/change_detection';\nimport {Inject, Optional, SkipSelf} from './di/metadata';\nimport {LOCALE_ID} from './i18n/tokens';\nimport {Compiler} from './linker/compiler';\nimport {NgModule} from './metadata';\nimport {initServicesIfNeeded} from './view/index';\n/**\n * @return {?}\n */\nexport function _iterableDiffersFactory() {\n  return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nexport function _keyValueDiffersFactory() {\n  return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nexport function _localeFactory(locale?: string): string {\n  return locale || 'en-US';\n}\n/**\n * @return {?}\n */\nexport function _initViewEngine() {\n  initServicesIfNeeded();\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n * \n * \\@experimental\n */\nexport class ApplicationModule {\n/**\n * @param {?} appRef\n */\nconstructor(appRef: ApplicationRef) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    ApplicationRef_,\n    {provide: ApplicationRef, useExisting: ApplicationRef_},\n    ApplicationInitStatus,\n    Compiler,\n    APP_ID_RANDOM_PROVIDER,\n    {provide: IterableDiffers, useFactory: _iterableDiffersFactory},\n    {provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory},\n    {\n      provide: LOCALE_ID,\n      useFactory: _localeFactory,\n      deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n    {provide: APP_INITIALIZER, useValue: _initViewEngine, multi: true},\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ApplicationRef, },\n];\n}\n\nfunction ApplicationModule_tsickle_Closure_declarations() {\n/** @type {?} */\nApplicationModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '@angular/core';\n/**\n * This class should not be used directly by an application developer. Instead, use\n * {\\@link Location}.\n * \n * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n * agnostic.\n * This means that we can have different implementation of `PlatformLocation` for the different\n * platforms\n * that angular supports. For example, the default `PlatformLocation` is {\\@link\n * BrowserPlatformLocation},\n * however when you run your app in a WebWorker you use {\\@link WebWorkerPlatformLocation}.\n * \n * The `PlatformLocation` class is used directly by all implementations of {\\@link LocationStrategy}\n * when\n * they need to interact with the DOM apis like pushState, popState, etc...\n * \n * {\\@link LocationStrategy} in turn is used by the {\\@link Location} service which is used directly\n * by\n * the {\\@link Router} in order to navigate between routes. Since all interactions between {\\@link\n * Router} /\n * {\\@link Location} / {\\@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n * class\n * they are all platform independent.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class PlatformLocation {\n/**\n * @abstract\n * @return {?}\n */\ngetBaseHrefFromDOM() {}\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener) {}\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nonHashChange(fn: LocationChangeListener) {}\n/**\n * @return {?}\n */\nget pathname(): string { return null; }\n/**\n * @return {?}\n */\nget search(): string { return null; }\n/**\n * @return {?}\n */\nget hash(): string { return null; }\n/**\n * @abstract\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @return {?}\n */\nreplaceState(state: any, title: string, url: string) {}\n/**\n * @abstract\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @return {?}\n */\npushState(state: any, title: string, url: string) {}\n/**\n * @abstract\n * @return {?}\n */\nforward() {}\n/**\n * @abstract\n * @return {?}\n */\nback() {}\n}\n/**\n * \\@whatItDoes indicates when a location is initialized\n * \\@experimental\n */\nexport const LOCATION_INITIALIZED = new InjectionToken<Promise<any>>('Location Initialized');\n\n/**\n * A serializable version of the event from onPopState or onHashChange\n *\n * @experimental\n */\nexport interface LocationChangeEvent { type: string; }\n\n/**\n * @experimental\n */\nexport interface LocationChangeListener { (e: LocationChangeEvent): any; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '@angular/core';\nimport {LocationChangeListener} from './platform_location';\n/**\n * `LocationStrategy` is responsible for representing and reading route state\n * from the browser's URL. Angular provides two strategies:\n * {\\@link HashLocationStrategy} and {\\@link PathLocationStrategy}.\n * \n * This is used under the hood of the {\\@link Location} service.\n * \n * Applications should use the {\\@link Router} or {\\@link Location} services to\n * interact with application route state.\n * \n * For instance, {\\@link HashLocationStrategy} produces URLs like\n * `http://example.com#/foo`, and {\\@link PathLocationStrategy} produces\n * `http://example.com/foo` as an equivalent URL.\n * \n * See these two classes for more.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class LocationStrategy {\n/**\n * @abstract\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash?: boolean) {}\n/**\n * @abstract\n * @param {?} internal\n * @return {?}\n */\nprepareExternalUrl(internal: string) {}\n/**\n * @abstract\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @param {?} queryParams\n * @return {?}\n */\npushState(state: any, title: string, url: string, queryParams: string) {}\n/**\n * @abstract\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @param {?} queryParams\n * @return {?}\n */\nreplaceState(state: any, title: string, url: string, queryParams: string) {}\n/**\n * @abstract\n * @return {?}\n */\nforward() {}\n/**\n * @abstract\n * @return {?}\n */\nback() {}\n/**\n * @abstract\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener) {}\n/**\n * @abstract\n * @return {?}\n */\ngetBaseHref() {}\n}\n/**\n * The `APP_BASE_HREF` token represents the base href to be used with the\n * {\\@link PathLocationStrategy}.\n * \n * If you're using {\\@link PathLocationStrategy}, you must provide a provider to a string\n * representing the URL prefix that should be preserved when generating and recognizing\n * URLs.\n * \n * ### Example\n * \n * ```typescript\n * import {Component, NgModule} from '\\@angular/core';\n * import {APP_BASE_HREF} from '\\@angular/common';\n * \n * \\@NgModule({ \n *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n * })\n * class AppModule {}\n * ```\n * \n * \\@stable\n */\nexport const APP_BASE_HREF = new InjectionToken<string>('appBaseHref');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {EventEmitter, Injectable} from '@angular/core';\n\nimport {LocationStrategy} from './location_strategy';\n\n/** @experimental */\nexport interface PopStateEvent {\n  pop?: boolean;\n  type?: string;\n  url?: string;\n}\n/**\n * \\@whatItDoes `Location` is a service that applications can use to interact with a browser's URL.\n * \\@description \n * Depending on which {\\@link LocationStrategy} is used, `Location` will either persist\n * to the URL's path or the URL's hash segment.\n * \n * Note: it's better to use {\\@link Router#navigate} service to trigger route changes. Use\n * `Location` only if you need to interact with or create normalized URLs outside of\n * routing.\n * \n * `Location` is responsible for normalizing the URL against the application's base href.\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n * trailing slash:\n * - `/my/app/user/123` is normalized\n * - `my/app/user/123` **is not** normalized\n * - `/my/app/user/123/` **is not** normalized\n * \n * ### Example\n * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n * \\@stable\n */\nexport class Location {\n/**\n * \\@internal\n */\n_subject: EventEmitter<any> = new EventEmitter();\n/**\n * \\@internal\n */\n_baseHref: string;\n/**\n * \\@internal\n */\n_platformStrategy: LocationStrategy;\n/**\n * @param {?} platformStrategy\n */\nconstructor(platformStrategy: LocationStrategy) {\n    this._platformStrategy = platformStrategy;\n    const browserBaseHref = this._platformStrategy.getBaseHref();\n    this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n    this._platformStrategy.onPopState((ev) => {\n      this._subject.emit({\n        'url': this.path(true),\n        'pop': true,\n        'type': ev.type,\n      });\n    });\n  }\n/**\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash: boolean = false): string {\n    return this.normalize(this._platformStrategy.path(includeHash));\n  }\n/**\n * Normalizes the given path and compares to the current normalized path.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\nisCurrentPathEqualTo(path: string, query: string = ''): boolean {\n    return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n  }\n/**\n * Given a string representing a URL, returns the normalized URL path without leading or\n * trailing slashes.\n * @param {?} url\n * @return {?}\n */\nnormalize(url: string): string {\n    return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n  }\n/**\n * Given a string representing a URL, returns the platform-specific external URL path.\n * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n * @param {?} url\n * @return {?}\n */\nprepareExternalUrl(url: string): string {\n    if (url && url[0] !== '/') {\n      url = '/' + url;\n    }\n    return this._platformStrategy.prepareExternalUrl(url);\n  }\n/**\n * Changes the browsers URL to the normalized version of the given URL, and pushes a\n * new item onto the platform's history.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\ngo(path: string, query: string = ''): void {\n    this._platformStrategy.pushState(null, '', path, query);\n  }\n/**\n * Changes the browsers URL to the normalized version of the given URL, and replaces\n * the top item on the platform's history stack.\n * @param {?} path\n * @param {?=} query\n * @return {?}\n */\nreplaceState(path: string, query: string = ''): void {\n    this._platformStrategy.replaceState(null, '', path, query);\n  }\n/**\n * Navigates forward in the platform's history.\n * @return {?}\n */\nforward(): void { this._platformStrategy.forward(); }\n/**\n * Navigates back in the platform's history.\n * @return {?}\n */\nback(): void { this._platformStrategy.back(); }\n/**\n * Subscribe to the platform's `popState` events.\n * @param {?} onNext\n * @param {?=} onThrow\n * @param {?=} onReturn\n * @return {?}\n */\nsubscribe(\n      onNext: (value: PopStateEvent) => void, onThrow: (exception: any) => void = null,\n      onReturn: () => void = null): Object {\n    return this._subject.subscribe({next: onNext, error: onThrow, complete: onReturn});\n  }\n/**\n * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n * is.\n * @param {?} params\n * @return {?}\n */\npublic static normalizeQueryParams(params: string): string {\n    return params && params[0] !== '?' ? '?' + params : params;\n  }\n/**\n * Given 2 parts of a url, join them with a slash if needed.\n * @param {?} start\n * @param {?} end\n * @return {?}\n */\npublic static joinWithSlash(start: string, end: string): string {\n    if (start.length == 0) {\n      return end;\n    }\n    if (end.length == 0) {\n      return start;\n    }\n    let /** @type {?} */ slashes = 0;\n    if (start.endsWith('/')) {\n      slashes++;\n    }\n    if (end.startsWith('/')) {\n      slashes++;\n    }\n    if (slashes == 2) {\n      return start + end.substring(1);\n    }\n    if (slashes == 1) {\n      return start + end;\n    }\n    return start + '/' + end;\n  }\n/**\n * If url has a trailing slash, remove it, otherwise return url as is.\n * @param {?} url\n * @return {?}\n */\npublic static stripTrailingSlash(url: string): string { return url.replace(/\\/$/, ''); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LocationStrategy, },\n];\n}\n\nfunction Location_tsickle_Closure_declarations() {\n/** @type {?} */\nLocation.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocation.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nLocation.prototype._subject;\n/**\n * \\@internal\n * @type {?}\n */\nLocation.prototype._baseHref;\n/**\n * \\@internal\n * @type {?}\n */\nLocation.prototype._platformStrategy;\n}\n\n/**\n * @param {?} baseHref\n * @param {?} url\n * @return {?}\n */\nfunction _stripBaseHref(baseHref: string, url: string): string {\n  return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction _stripIndexHtml(url: string): string {\n  return url.replace(/\\/index.html$/, '');\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, Optional} from '@angular/core';\n\n\nimport {Location} from './location';\nimport {APP_BASE_HREF, LocationStrategy} from './location_strategy';\nimport {LocationChangeListener, PlatformLocation} from './platform_location';\n/**\n * \\@whatItDoes Use URL hash for storing application location data.\n * \\@description \n * `HashLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n * {\\@link Location} service to represent its state in the\n * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n * of the browser's URL.\n * \n * For instance, if you call `location.go('/foo')`, the browser's URL will become\n * `example.com#/foo`.\n * \n * ### Example\n * \n * {\\@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n * \n * \\@stable\n */\nexport class HashLocationStrategy extends LocationStrategy {\nprivate _baseHref: string = '';\n/**\n * @param {?} _platformLocation\n * @param {?=} _baseHref\n */\nconstructor(\nprivate _platformLocation: PlatformLocation,\n        _baseHref?: string) {\n    super();\n    if (_baseHref != null) {\n      this._baseHref = _baseHref;\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener): void {\n    this._platformLocation.onPopState(fn);\n    this._platformLocation.onHashChange(fn);\n  }\n/**\n * @return {?}\n */\ngetBaseHref(): string { return this._baseHref; }\n/**\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash: boolean = false): string {\n    // the hash value is always prefixed with a `#`\n    // and if it is empty then it will stay empty\n    let /** @type {?} */ path = this._platformLocation.hash;\n    if (path == null) path = '#';\n\n    return path.length > 0 ? path.substring(1) : path;\n  }\n/**\n * @param {?} internal\n * @return {?}\n */\nprepareExternalUrl(internal: string): string {\n    const /** @type {?} */ url = Location.joinWithSlash(this._baseHref, internal);\n    return url.length > 0 ? ('#' + url) : url;\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} path\n * @param {?} queryParams\n * @return {?}\n */\npushState(state: any, title: string, path: string, queryParams: string) {\n    let /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n    if (url.length == 0) {\n      url = this._platformLocation.pathname;\n    }\n    this._platformLocation.pushState(state, title, url);\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} path\n * @param {?} queryParams\n * @return {?}\n */\nreplaceState(state: any, title: string, path: string, queryParams: string) {\n    let /** @type {?} */ url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n    if (url.length == 0) {\n      url = this._platformLocation.pathname;\n    }\n    this._platformLocation.replaceState(state, title, url);\n  }\n/**\n * @return {?}\n */\nforward(): void { this._platformLocation.forward(); }\n/**\n * @return {?}\n */\nback(): void { this._platformLocation.back(); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PlatformLocation, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF, ] }, ]},\n];\n}\n\nfunction HashLocationStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nHashLocationStrategy.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHashLocationStrategy.ctorParameters;\n/** @type {?} */\nHashLocationStrategy.prototype._baseHref;\n/** @type {?} */\nHashLocationStrategy.prototype._platformLocation;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, Optional} from '@angular/core';\n\n\nimport {Location} from './location';\nimport {APP_BASE_HREF, LocationStrategy} from './location_strategy';\nimport {LocationChangeListener, PlatformLocation} from './platform_location';\n/**\n * \\@whatItDoes Use URL for storing application location data.\n * \\@description \n * `PathLocationStrategy` is a {\\@link LocationStrategy} used to configure the\n * {\\@link Location} service to represent its state in the\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n * browser's URL.\n * \n * If you're using `PathLocationStrategy`, you must provide a {\\@link APP_BASE_HREF}\n * or add a base element to the document. This URL prefix that will be preserved\n * when generating and recognizing URLs.\n * \n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n * \n * Similarly, if you add `<base href='/my/app'/>` to the document and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n * \n * ### Example\n * \n * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n * \n * \\@stable\n */\nexport class PathLocationStrategy extends LocationStrategy {\nprivate _baseHref: string;\n/**\n * @param {?} _platformLocation\n * @param {?=} href\n */\nconstructor(\nprivate _platformLocation: PlatformLocation,\n        href?: string) {\n    super();\n\n    if (href == null) {\n      href = this._platformLocation.getBaseHrefFromDOM();\n    }\n\n    if (href == null) {\n      throw new Error(\n          `No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.`);\n    }\n\n    this._baseHref = href;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nonPopState(fn: LocationChangeListener): void {\n    this._platformLocation.onPopState(fn);\n    this._platformLocation.onHashChange(fn);\n  }\n/**\n * @return {?}\n */\ngetBaseHref(): string { return this._baseHref; }\n/**\n * @param {?} internal\n * @return {?}\n */\nprepareExternalUrl(internal: string): string {\n    return Location.joinWithSlash(this._baseHref, internal);\n  }\n/**\n * @param {?=} includeHash\n * @return {?}\n */\npath(includeHash: boolean = false): string {\n    const /** @type {?} */ pathname = this._platformLocation.pathname +\n        Location.normalizeQueryParams(this._platformLocation.search);\n    const /** @type {?} */ hash = this._platformLocation.hash;\n    return hash && includeHash ? `${pathname}${hash}` : pathname;\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @param {?} queryParams\n * @return {?}\n */\npushState(state: any, title: string, url: string, queryParams: string) {\n    const /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n    this._platformLocation.pushState(state, title, externalUrl);\n  }\n/**\n * @param {?} state\n * @param {?} title\n * @param {?} url\n * @param {?} queryParams\n * @return {?}\n */\nreplaceState(state: any, title: string, url: string, queryParams: string) {\n    const /** @type {?} */ externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n    this._platformLocation.replaceState(state, title, externalUrl);\n  }\n/**\n * @return {?}\n */\nforward(): void { this._platformLocation.forward(); }\n/**\n * @return {?}\n */\nback(): void { this._platformLocation.back(); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PlatformLocation, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF, ] }, ]},\n];\n}\n\nfunction PathLocationStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nPathLocationStrategy.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPathLocationStrategy.ctorParameters;\n/** @type {?} */\nPathLocationStrategy.prototype._baseHref;\n/** @type {?} */\nPathLocationStrategy.prototype._platformLocation;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {PlatformLocation,LOCATION_INITIALIZED,LocationChangeEvent,LocationChangeListener} from './platform_location';\nexport {LocationStrategy,APP_BASE_HREF} from './location_strategy';\nexport {HashLocationStrategy} from './hash_location_strategy';\nexport {PathLocationStrategy} from './path_location_strategy';\nexport {PopStateEvent,Location} from './location';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, LOCALE_ID} from '@angular/core';\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class NgLocalization {\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\ngetPluralCategory(value: any) {} }\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n * \n * \\@internal\n * @param {?} value\n * @param {?} cases\n * @param {?} ngLocalization\n * @return {?}\n */\nexport function getPluralCategory(\n    value: number, cases: string[], ngLocalization: NgLocalization): string {\n  let /** @type {?} */ key = `=${value}`;\n\n  if (cases.indexOf(key) > -1) {\n    return key;\n  }\n\n  key = ngLocalization.getPluralCategory(value);\n\n  if (cases.indexOf(key) > -1) {\n    return key;\n  }\n\n  if (cases.indexOf('other') > -1) {\n    return 'other';\n  }\n\n  throw new Error(`No plural message found for value \"${value}\"`);\n}\n/**\n * Returns the plural case based on the locale\n * \n * \\@experimental\n */\nexport class NgLocaleLocalization extends NgLocalization {\n/**\n * @param {?} locale\n */\nconstructor( protected locale: string) { super(); }\n/**\n * @param {?} value\n * @return {?}\n */\ngetPluralCategory(value: any): string {\n    const /** @type {?} */ plural = getPluralCase(this.locale, value);\n\n    switch (plural) {\n      case Plural.Zero:\n        return 'zero';\n      case Plural.One:\n        return 'one';\n      case Plural.Two:\n        return 'two';\n      case Plural.Few:\n        return 'few';\n      case Plural.Many:\n        return 'many';\n      default:\n        return 'other';\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction NgLocaleLocalization_tsickle_Closure_declarations() {\n/** @type {?} */\nNgLocaleLocalization.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgLocaleLocalization.ctorParameters;\n/** @type {?} */\nNgLocaleLocalization.prototype.locale;\n}\n\nexport type Plural = number;\nexport let Plural: any = {};\nPlural.Zero = 0;\nPlural.One = 1;\nPlural.Two = 2;\nPlural.Few = 3;\nPlural.Many = 4;\nPlural.Other = 5;\nPlural[Plural.Zero] = \"Zero\";\nPlural[Plural.One] = \"One\";\nPlural[Plural.Two] = \"Two\";\nPlural[Plural.Few] = \"Few\";\nPlural[Plural.Many] = \"Many\";\nPlural[Plural.Other] = \"Other\";\n\n/**\n * Returns the plural case based on the locale\n * \n * \\@experimental\n * @param {?} locale\n * @param {?} nLike\n * @return {?}\n */\nexport function getPluralCase(locale: string, nLike: number | string): Plural {\n  // TODO(vicb): lazy compute\n  if (typeof nLike === 'string') {\n    nLike = parseInt( /** @type {?} */((<string>nLike)), 10);\n  }\n  const /** @type {?} */ n: number = /** @type {?} */(( nLike as number));\n  const /** @type {?} */ nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n  const /** @type {?} */ i = Math.floor(Math.abs(n));\n  const /** @type {?} */ v = nDecimal.length;\n  const /** @type {?} */ f = parseInt(nDecimal, 10);\n  const /** @type {?} */ t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n\n  const /** @type {?} */ lang = locale.split('-')[0].toLowerCase();\n\n  switch (lang) {\n    case 'af':\n    case 'asa':\n    case 'az':\n    case 'bem':\n    case 'bez':\n    case 'bg':\n    case 'brx':\n    case 'ce':\n    case 'cgg':\n    case 'chr':\n    case 'ckb':\n    case 'ee':\n    case 'el':\n    case 'eo':\n    case 'es':\n    case 'eu':\n    case 'fo':\n    case 'fur':\n    case 'gsw':\n    case 'ha':\n    case 'haw':\n    case 'hu':\n    case 'jgo':\n    case 'jmc':\n    case 'ka':\n    case 'kk':\n    case 'kkj':\n    case 'kl':\n    case 'ks':\n    case 'ksb':\n    case 'ky':\n    case 'lb':\n    case 'lg':\n    case 'mas':\n    case 'mgo':\n    case 'ml':\n    case 'mn':\n    case 'nb':\n    case 'nd':\n    case 'ne':\n    case 'nn':\n    case 'nnh':\n    case 'nyn':\n    case 'om':\n    case 'or':\n    case 'os':\n    case 'ps':\n    case 'rm':\n    case 'rof':\n    case 'rwk':\n    case 'saq':\n    case 'seh':\n    case 'sn':\n    case 'so':\n    case 'sq':\n    case 'ta':\n    case 'te':\n    case 'teo':\n    case 'tk':\n    case 'tr':\n    case 'ug':\n    case 'uz':\n    case 'vo':\n    case 'vun':\n    case 'wae':\n    case 'xog':\n      if (n === 1) return Plural.One;\n      return Plural.Other;\n    case 'agq':\n    case 'bas':\n    case 'cu':\n    case 'dav':\n    case 'dje':\n    case 'dua':\n    case 'dyo':\n    case 'ebu':\n    case 'ewo':\n    case 'guz':\n    case 'kam':\n    case 'khq':\n    case 'ki':\n    case 'kln':\n    case 'kok':\n    case 'ksf':\n    case 'lrc':\n    case 'lu':\n    case 'luo':\n    case 'luy':\n    case 'mer':\n    case 'mfe':\n    case 'mgh':\n    case 'mua':\n    case 'mzn':\n    case 'nmg':\n    case 'nus':\n    case 'qu':\n    case 'rn':\n    case 'rw':\n    case 'sbp':\n    case 'twq':\n    case 'vai':\n    case 'yav':\n    case 'yue':\n    case 'zgh':\n    case 'ak':\n    case 'ln':\n    case 'mg':\n    case 'pa':\n    case 'ti':\n      if (n === Math.floor(n) && n >= 0 && n <= 1) return Plural.One;\n      return Plural.Other;\n    case 'am':\n    case 'as':\n    case 'bn':\n    case 'fa':\n    case 'gu':\n    case 'hi':\n    case 'kn':\n    case 'mr':\n    case 'zu':\n      if (i === 0 || n === 1) return Plural.One;\n      return Plural.Other;\n    case 'ar':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10) return Plural.Few;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99) return Plural.Many;\n      return Plural.Other;\n    case 'ast':\n    case 'ca':\n    case 'de':\n    case 'en':\n    case 'et':\n    case 'fi':\n    case 'fy':\n    case 'gl':\n    case 'it':\n    case 'nl':\n    case 'sv':\n    case 'sw':\n    case 'ur':\n    case 'yi':\n      if (i === 1 && v === 0) return Plural.One;\n      return Plural.Other;\n    case 'be':\n      if (n % 10 === 1 && !(n % 100 === 11)) return Plural.One;\n      if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n          !(n % 100 >= 12 && n % 100 <= 14))\n        return Plural.Few;\n      if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n          n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'br':\n      if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91)) return Plural.One;\n      if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92)) return Plural.Two;\n      if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n          !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n            n % 100 >= 90 && n % 100 <= 99))\n        return Plural.Few;\n      if (!(n === 0) && n % 1e6 === 0) return Plural.Many;\n      return Plural.Other;\n    case 'bs':\n    case 'hr':\n    case 'sr':\n      if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n        return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n              !(i % 100 >= 12 && i % 100 <= 14) ||\n          f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n              !(f % 100 >= 12 && f % 100 <= 14))\n        return Plural.Few;\n      return Plural.Other;\n    case 'cs':\n    case 'sk':\n      if (i === 1 && v === 0) return Plural.One;\n      if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0) return Plural.Few;\n      if (!(v === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'cy':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n === 3) return Plural.Few;\n      if (n === 6) return Plural.Many;\n      return Plural.Other;\n    case 'da':\n      if (n === 1 || !(t === 0) && (i === 0 || i === 1)) return Plural.One;\n      return Plural.Other;\n    case 'dsb':\n    case 'hsb':\n      if (v === 0 && i % 100 === 1 || f % 100 === 1) return Plural.One;\n      if (v === 0 && i % 100 === 2 || f % 100 === 2) return Plural.Two;\n      if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n          f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n        return Plural.Few;\n      return Plural.Other;\n    case 'ff':\n    case 'fr':\n    case 'hy':\n    case 'kab':\n      if (i === 0 || i === 1) return Plural.One;\n      return Plural.Other;\n    case 'fil':\n      if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n          v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n          !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n        return Plural.One;\n      return Plural.Other;\n    case 'ga':\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n === Math.floor(n) && n >= 3 && n <= 6) return Plural.Few;\n      if (n === Math.floor(n) && n >= 7 && n <= 10) return Plural.Many;\n      return Plural.Other;\n    case 'gd':\n      if (n === 1 || n === 11) return Plural.One;\n      if (n === 2 || n === 12) return Plural.Two;\n      if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19)) return Plural.Few;\n      return Plural.Other;\n    case 'gv':\n      if (v === 0 && i % 10 === 1) return Plural.One;\n      if (v === 0 && i % 10 === 2) return Plural.Two;\n      if (v === 0 &&\n          (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n        return Plural.Few;\n      if (!(v === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'he':\n      if (i === 1 && v === 0) return Plural.One;\n      if (i === 2 && v === 0) return Plural.Two;\n      if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0) return Plural.Many;\n      return Plural.Other;\n    case 'is':\n      if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0)) return Plural.One;\n      return Plural.Other;\n    case 'ksh':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      return Plural.Other;\n    case 'kw':\n    case 'naq':\n    case 'se':\n    case 'smn':\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      return Plural.Other;\n    case 'lag':\n      if (n === 0) return Plural.Zero;\n      if ((i === 0 || i === 1) && !(n === 0)) return Plural.One;\n      return Plural.Other;\n    case 'lt':\n      if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19)) return Plural.One;\n      if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n          !(n % 100 >= 11 && n % 100 <= 19))\n        return Plural.Few;\n      if (!(f === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'lv':\n    case 'prg':\n      if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n          v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n        return Plural.Zero;\n      if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n          !(v === 2) && f % 10 === 1)\n        return Plural.One;\n      return Plural.Other;\n    case 'mk':\n      if (v === 0 && i % 10 === 1 || f % 10 === 1) return Plural.One;\n      return Plural.Other;\n    case 'mt':\n      if (n === 1) return Plural.One;\n      if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n        return Plural.Few;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19) return Plural.Many;\n      return Plural.Other;\n    case 'pl':\n      if (i === 1 && v === 0) return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n          !(i % 100 >= 12 && i % 100 <= 14))\n        return Plural.Few;\n      if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n          v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n          v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'pt':\n      if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2)) return Plural.One;\n      return Plural.Other;\n    case 'ro':\n      if (i === 1 && v === 0) return Plural.One;\n      if (!(v === 0) || n === 0 ||\n          !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n        return Plural.Few;\n      return Plural.Other;\n    case 'ru':\n    case 'uk':\n      if (v === 0 && i % 10 === 1 && !(i % 100 === 11)) return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n          !(i % 100 >= 12 && i % 100 <= 14))\n        return Plural.Few;\n      if (v === 0 && i % 10 === 0 ||\n          v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n          v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'shi':\n      if (i === 0 || n === 1) return Plural.One;\n      if (n === Math.floor(n) && n >= 2 && n <= 10) return Plural.Few;\n      return Plural.Other;\n    case 'si':\n      if (n === 0 || n === 1 || i === 0 && f === 1) return Plural.One;\n      return Plural.Other;\n    case 'sl':\n      if (v === 0 && i % 100 === 1) return Plural.One;\n      if (v === 0 && i % 100 === 2) return Plural.Two;\n      if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n        return Plural.Few;\n      return Plural.Other;\n    case 'tzm':\n      if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n        return Plural.One;\n      return Plural.Other;\n    default:\n      return Plural.Other;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, DoCheck, ElementRef, Input, IterableChanges, IterableDiffer, IterableDiffers, KeyValueChanges, KeyValueDiffer, KeyValueDiffers, Renderer, ɵisListLikeIterable as isListLikeIterable, ɵstringify as stringify} from '@angular/core';\n/**\n * \\@ngModule CommonModule\n * \n * \\@whatItDoes Adds and removes CSS classes on an HTML element.\n * \n * \\@howToUse \n * ```\n *     <some-element [ngClass]=\"'first second'\">...</some-element>\n * \n *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n * \n *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n * \n *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n * \n *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n * ```\n * \n * \\@description \n * \n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n * - `string` - the CSS classes listed in the string (space delimited) are added,\n * - `Array` - the CSS classes declared as Array elements are added,\n * - `Object` - keys are CSS classes that get added when the expression given in the value\n *              evaluates to a truthy value, otherwise they are removed.\n * \n * \\@stable\n */\nexport class NgClass implements DoCheck {\nprivate _iterableDiffer: IterableDiffer<string>;\nprivate _keyValueDiffer: KeyValueDiffer<string, any>;\nprivate _initialClasses: string[] = [];\nprivate _rawClass: string[]|Set<string>|{[klass: string]: any};\n/**\n * @param {?} _iterableDiffers\n * @param {?} _keyValueDiffers\n * @param {?} _ngEl\n * @param {?} _renderer\n */\nconstructor(\nprivate _iterableDiffers: IterableDiffers,\nprivate _keyValueDiffers: KeyValueDiffers,\nprivate _ngEl: ElementRef,\nprivate _renderer: Renderer) {}\n/**\n * @param {?} v\n * @return {?}\n */\nset klass(v: string) {\n    this._applyInitialClasses(true);\n    this._initialClasses = typeof v === 'string' ? v.split(/\\s+/) : [];\n    this._applyInitialClasses(false);\n    this._applyClasses(this._rawClass, false);\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset ngClass(v: string|string[]|Set<string>|{[klass: string]: any}) {\n    this._cleanupClasses(this._rawClass);\n\n    this._iterableDiffer = null;\n    this._keyValueDiffer = null;\n\n    this._rawClass = typeof v === 'string' ? v.split(/\\s+/) : v;\n\n    if (this._rawClass) {\n      if (isListLikeIterable(this._rawClass)) {\n        this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();\n      } else {\n        this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();\n      }\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n    if (this._iterableDiffer) {\n      const /** @type {?} */ iterableChanges = this._iterableDiffer.diff( /** @type {?} */((this._rawClass as string[])));\n      if (iterableChanges) {\n        this._applyIterableChanges(iterableChanges);\n      }\n    } else if (this._keyValueDiffer) {\n      const /** @type {?} */ keyValueChanges = this._keyValueDiffer.diff( /** @type {?} */((this._rawClass as{[k: string]: any})));\n      if (keyValueChanges) {\n        this._applyKeyValueChanges(keyValueChanges);\n      }\n    }\n  }\n/**\n * @param {?} rawClassVal\n * @return {?}\n */\nprivate _cleanupClasses(rawClassVal: string[]|{[klass: string]: any}): void {\n    this._applyClasses(rawClassVal, true);\n    this._applyInitialClasses(false);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _applyKeyValueChanges(changes: KeyValueChanges<string, any>): void {\n    changes.forEachAddedItem((record) => this._toggleClass(record.key, record.currentValue));\n    changes.forEachChangedItem((record) => this._toggleClass(record.key, record.currentValue));\n    changes.forEachRemovedItem((record) => {\n      if (record.previousValue) {\n        this._toggleClass(record.key, false);\n      }\n    });\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _applyIterableChanges(changes: IterableChanges<string>): void {\n    changes.forEachAddedItem((record) => {\n      if (typeof record.item === 'string') {\n        this._toggleClass(record.item, true);\n      } else {\n        throw new Error(\n            `NgClass can only toggle CSS classes expressed as strings, got ${stringify(record.item)}`);\n      }\n    });\n\n    changes.forEachRemovedItem((record) => this._toggleClass(record.item, false));\n  }\n/**\n * @param {?} isCleanup\n * @return {?}\n */\nprivate _applyInitialClasses(isCleanup: boolean) {\n    this._initialClasses.forEach(klass => this._toggleClass(klass, !isCleanup));\n  }\n/**\n * @param {?} rawClassVal\n * @param {?} isCleanup\n * @return {?}\n */\nprivate _applyClasses(\n      rawClassVal: string[]|Set<string>|{[klass: string]: any}, isCleanup: boolean) {\n    if (rawClassVal) {\n      if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n        ( /** @type {?} */((<any>rawClassVal))).forEach((klass: string) => this._toggleClass(klass, !isCleanup));\n      } else {\n        Object.keys(rawClassVal).forEach(klass => {\n          if (rawClassVal[klass] != null) this._toggleClass(klass, !isCleanup);\n        });\n      }\n    }\n  }\n/**\n * @param {?} klass\n * @param {?} enabled\n * @return {?}\n */\nprivate _toggleClass(klass: string, enabled: any): void {\n    klass = klass.trim();\n    if (klass) {\n      klass.split(/\\s+/g).forEach(\n          klass => { this._renderer.setElementClass(this._ngEl.nativeElement, klass, !!enabled); });\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngClass]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IterableDiffers, },\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'klass': [{ type: Input, args: ['class', ] },],\n'ngClass': [{ type: Input },],\n};\n}\n\nfunction NgClass_tsickle_Closure_declarations() {\n/** @type {?} */\nNgClass.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgClass.ctorParameters;\n/** @type {?} */\nNgClass.propDecorators;\n/** @type {?} */\nNgClass.prototype._iterableDiffer;\n/** @type {?} */\nNgClass.prototype._keyValueDiffer;\n/** @type {?} */\nNgClass.prototype._initialClasses;\n/** @type {?} */\nNgClass.prototype._rawClass;\n/** @type {?} */\nNgClass.prototype._iterableDiffers;\n/** @type {?} */\nNgClass.prototype._keyValueDiffers;\n/** @type {?} */\nNgClass.prototype._ngEl;\n/** @type {?} */\nNgClass.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ComponentFactoryResolver, ComponentRef, Directive, Injector, Input, NgModuleFactory, NgModuleRef, OnChanges, OnDestroy, Provider, SimpleChanges, Type, ViewContainerRef} from '@angular/core';\n/**\n * Instantiates a single {\\@link Component} type and inserts its Host View into current View.\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\n * \n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\n * any existing component will get destroyed.\n * \n * ### Fine tune control\n * \n * You can control the component creation process by using the following optional attributes:\n * \n * * `ngComponentOutletInjector`: Optional custom {\\@link Injector} that will be used as parent for\n * the Component. Defaults to the injector of the current view container.\n * \n * * `ngComponentOutletProviders`: Optional injectable objects ({\\@link Provider}) that are visible\n * to the component.\n * \n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\n * section of the component, if exists.\n * \n * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other\n * module, then load a component from that module.\n * \n * ### Syntax\n * \n * Simple\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\n * ```\n * \n * Customized injector/content\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   injector: injectorExpression;\n *                                   content: contentNodesExpression;\">\n * </ng-container>\n * ```\n * \n * Customized ngModuleFactory\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   ngModuleFactory: moduleFactory;\">\n * </ng-container>\n * ```\n * # Example\n * \n * {\\@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\n * \n * A more complete example with additional options:\n * \n * {\\@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\n * A more complete example with ngModuleFactory:\n * \n * {\\@example common/ngComponentOutlet/ts/module.ts region='NgModuleFactoryExample'}\n * \n * \\@experimental\n */\nexport class NgComponentOutlet implements OnChanges, OnDestroy {\n   ngComponentOutlet: Type<any>;\n   ngComponentOutletInjector: Injector;\n   ngComponentOutletContent: any[][];\n   ngComponentOutletNgModuleFactory: NgModuleFactory<any>;\nprivate _componentRef: ComponentRef<any> = null;\nprivate _moduleRef: NgModuleRef<any> = null;\n/**\n * @param {?} _viewContainerRef\n */\nconstructor(private _viewContainerRef: ViewContainerRef) {}\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    this._viewContainerRef.clear();\n    this._componentRef = null;\n\n    if (this.ngComponentOutlet) {\n      const /** @type {?} */ elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\n\n      if (changes['ngComponentOutletNgModuleFactory']) {\n        if (this._moduleRef) this._moduleRef.destroy();\n\n        if (this.ngComponentOutletNgModuleFactory) {\n          const /** @type {?} */ parentModule = elInjector.get(NgModuleRef);\n          this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);\n        } else {\n          this._moduleRef = null;\n        }\n      }\n\n      const /** @type {?} */ componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver :\n                                                         elInjector.get(ComponentFactoryResolver);\n\n      const /** @type {?} */ componentFactory =\n          componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);\n\n      this._componentRef = this._viewContainerRef.createComponent(\n          componentFactory, this._viewContainerRef.length, elInjector,\n          this.ngComponentOutletContent);\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._moduleRef) this._moduleRef.destroy();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngComponentOutlet]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngComponentOutlet': [{ type: Input },],\n'ngComponentOutletInjector': [{ type: Input },],\n'ngComponentOutletContent': [{ type: Input },],\n'ngComponentOutletNgModuleFactory': [{ type: Input },],\n};\n}\n\nfunction NgComponentOutlet_tsickle_Closure_declarations() {\n/** @type {?} */\nNgComponentOutlet.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgComponentOutlet.ctorParameters;\n/** @type {?} */\nNgComponentOutlet.propDecorators;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutlet;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutletInjector;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutletContent;\n/** @type {?} */\nNgComponentOutlet.prototype.ngComponentOutletNgModuleFactory;\n/** @type {?} */\nNgComponentOutlet.prototype._componentRef;\n/** @type {?} */\nNgComponentOutlet.prototype._moduleRef;\n/** @type {?} */\nNgComponentOutlet.prototype._viewContainerRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectorRef, Directive, DoCheck, EmbeddedViewRef, Input, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDiffers, NgIterable, OnChanges, SimpleChanges, TemplateRef, TrackByFunction, ViewContainerRef, forwardRef, isDevMode} from '@angular/core';\n/**\n * \\@stable\n */\nexport class NgForOfContext<T> {\n/**\n * @param {?} $implicit\n * @param {?} ngForOf\n * @param {?} index\n * @param {?} count\n */\nconstructor(\npublic $implicit: T,\npublic ngForOf: NgIterable<T>,\npublic index: number,\npublic count: number) {}\n/**\n * @return {?}\n */\nget first(): boolean { return this.index === 0; }\n/**\n * @return {?}\n */\nget last(): boolean { return this.index === this.count - 1; }\n/**\n * @return {?}\n */\nget even(): boolean { return this.index % 2 === 0; }\n/**\n * @return {?}\n */\nget odd(): boolean { return !this.even; }\n}\n\nfunction NgForOfContext_tsickle_Closure_declarations() {\n/** @type {?} */\nNgForOfContext.prototype.$implicit;\n/** @type {?} */\nNgForOfContext.prototype.ngForOf;\n/** @type {?} */\nNgForOfContext.prototype.index;\n/** @type {?} */\nNgForOfContext.prototype.count;\n}\n\n/**\n * The `NgForOf` directive instantiates a template once per item from an iterable. The context\n * for each instantiated template inherits from the outer context with the given loop variable\n * set to the current item from the iterable.\n * \n * ### Local Variables\n * \n * `NgForOf` provides several exported values that can be aliased to local variables:\n * \n * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).\n * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is\n * more complex then a property access, for example when using the async pipe (`userStreams |\n * async`).\n * - `index: number`: The index of the current item in the iterable.\n * - `first: boolean`: True when the item is the first item in the iterable.\n * - `last: boolean`: True when the item is the last item in the iterable.\n * - `even: boolean`: True when the item has an even index in the iterable.\n * - `odd: boolean`: True when the item has an odd index in the iterable.\n * \n * ```\n * <li *ngFor=\"let user of userObservable | async as users; index as i; first as isFirst\">\n *    {{i}}/{{users.length}}. {{user}} <span *ngIf=\"isFirst\">default</span>\n * </li>\n * ```\n * \n * ### Change Propagation\n * \n * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:\n * \n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n * * Otherwise, the DOM element for that item will remain the same.\n * \n * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n * those changes in the DOM. This has important implications for animations and any stateful\n * controls (such as `<input>` elements which accept user input) that are present. Inserted rows can\n * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state\n * such as user input.\n * \n * It is possible for the identities of elements in the iterator to change while the data does not.\n * This can happen, for example, if the iterator produced from an RPC to the server, and that\n * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n * elements were deleted and all new elements inserted). This is an expensive operation and should\n * be avoided if possible.\n * \n * To customize the default tracking algorithm, `NgForOf` supports `trackBy` option.\n * `trackBy` takes a function which has two arguments: `index` and `item`.\n * If `trackBy` is given, Angular tracks changes by the return value of the function.\n * \n * ### Syntax\n * \n * - `<li *ngFor=\"let item of items; index as i; trackBy: trackByFn\">...</li>`\n * - `<li template=\"ngFor let item of items; index as i; trackBy: trackByFn\">...</li>`\n * \n * With `<ng-template>` element:\n * \n * ```\n * <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n *   <li>...</li>\n * </ng-template>\n * ```\n * \n * ### Example\n * \n * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n * example.\n * \n * \\@stable\n */\nexport class NgForOf<T> implements DoCheck, OnChanges {\n   ngForOf: NgIterable<T>;\n/**\n * @param {?} fn\n * @return {?}\n */\nset ngForTrackBy(fn: TrackByFunction<T>) {\n    if (isDevMode() && fn != null && typeof fn !== 'function') {\n      // TODO(vicb): use a log service once there is a public one available\n      if ( /** @type {?} */((<any>console)) && /** @type {?} */(( <any>console.warn))) {\n        console.warn(\n            `trackBy must be a function, but received ${JSON.stringify(fn)}. ` +\n            `See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.`);\n      }\n    }\n    this._trackByFn = fn;\n  }\n/**\n * @return {?}\n */\nget ngForTrackBy(): TrackByFunction<T> { return this._trackByFn; }\nprivate _differ: IterableDiffer<T> = null;\nprivate _trackByFn: TrackByFunction<T>;\n/**\n * @param {?} _viewContainer\n * @param {?} _template\n * @param {?} _differs\n */\nconstructor(\nprivate _viewContainer: ViewContainerRef,\nprivate _template: TemplateRef<NgForOfContext<T>>,\nprivate _differs: IterableDiffers) {}\n/**\n * @param {?} value\n * @return {?}\n */\nset ngForTemplate(value: TemplateRef<NgForOfContext<T>>) {\n    // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1\n    // The current type is too restrictive; a template that just uses index, for example,\n    // should be acceptable.\n    if (value) {\n      this._template = value;\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if ('ngForOf' in changes) {\n      // React on ngForOf changes only once all inputs have been initialized\n      const /** @type {?} */ value = changes['ngForOf'].currentValue;\n      if (!this._differ && value) {\n        try {\n          this._differ = this._differs.find(value).create(this.ngForTrackBy);\n        } catch ( /** @type {?} */e) {\n          throw new Error(\n              `Cannot find a differ supporting object '${value}' of type '${getTypeNameForDebugging(value)}'. NgFor only supports binding to Iterables such as Arrays.`);\n        }\n      }\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n    if (this._differ) {\n      const /** @type {?} */ changes = this._differ.diff(this.ngForOf);\n      if (changes) this._applyChanges(changes);\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nprivate _applyChanges(changes: IterableChanges<T>) {\n    const /** @type {?} */ insertTuples: RecordViewTuple<T>[] = [];\n    changes.forEachOperation(\n        (item: IterableChangeRecord<any>, adjustedPreviousIndex: number, currentIndex: number) => {\n          if (item.previousIndex == null) {\n            const /** @type {?} */ view = this._viewContainer.createEmbeddedView(\n                this._template, new NgForOfContext(null, this.ngForOf, null, null), currentIndex);\n            const /** @type {?} */ tuple = new RecordViewTuple(item, view);\n            insertTuples.push(tuple);\n          } else if (currentIndex == null) {\n            this._viewContainer.remove(adjustedPreviousIndex);\n          } else {\n            const /** @type {?} */ view = this._viewContainer.get(adjustedPreviousIndex);\n            this._viewContainer.move(view, currentIndex);\n            const /** @type {?} */ tuple = new RecordViewTuple(item, /** @type {?} */(( <EmbeddedViewRef<NgForOfContext<T>>>view)));\n            insertTuples.push(tuple);\n          }\n        });\n\n    for (let /** @type {?} */ i = 0; i < insertTuples.length; i++) {\n      this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n    }\n\n    for (let /** @type {?} */ i = 0, /** @type {?} */ ilen = this._viewContainer.length; i < ilen; i++) {\n      const /** @type {?} */ viewRef = /** @type {?} */(( <EmbeddedViewRef<NgForOfContext<T>>>this._viewContainer.get(i)));\n      viewRef.context.index = i;\n      viewRef.context.count = ilen;\n    }\n\n    changes.forEachIdentityChange((record: any) => {\n      const /** @type {?} */ viewRef = /** @type {?} */((\n          <EmbeddedViewRef<NgForOfContext<T>>>this._viewContainer.get(record.currentIndex)));\n      viewRef.context.$implicit = record.item;\n    });\n  }\n/**\n * @param {?} view\n * @param {?} record\n * @return {?}\n */\nprivate _perViewChange(\n      view: EmbeddedViewRef<NgForOfContext<T>>, record: IterableChangeRecord<any>) {\n    view.context.$implicit = record.item;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngFor][ngForOf]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n{type: IterableDiffers, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngForOf': [{ type: Input },],\n'ngForTrackBy': [{ type: Input },],\n'ngForTemplate': [{ type: Input },],\n};\n}\n\nfunction NgForOf_tsickle_Closure_declarations() {\n/** @type {?} */\nNgForOf.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgForOf.ctorParameters;\n/** @type {?} */\nNgForOf.propDecorators;\n/** @type {?} */\nNgForOf.prototype.ngForOf;\n/** @type {?} */\nNgForOf.prototype._differ;\n/** @type {?} */\nNgForOf.prototype._trackByFn;\n/** @type {?} */\nNgForOf.prototype._viewContainer;\n/** @type {?} */\nNgForOf.prototype._template;\n/** @type {?} */\nNgForOf.prototype._differs;\n}\n\nclass RecordViewTuple<T> {\n/**\n * @param {?} record\n * @param {?} view\n */\nconstructor(public record: any,\npublic view: EmbeddedViewRef<NgForOfContext<T>>) {}\n}\n\nfunction RecordViewTuple_tsickle_Closure_declarations() {\n/** @type {?} */\nRecordViewTuple.prototype.record;\n/** @type {?} */\nRecordViewTuple.prototype.view;\n}\n\n\n/**\n * @deprecated from v4.0.0 - Use NgForOf<any> instead.\n */\nexport type NgFor = NgForOf<any>;\n/**\n * @deprecated from v4.0.0 - Use NgForOf instead.\n */\nexport const NgFor = NgForOf;\n/**\n * @param {?} type\n * @return {?}\n */\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, EmbeddedViewRef, Input, TemplateRef, ViewContainerRef} from '@angular/core';\n/**\n * Conditionally includes a template based on the value of an `expression`.\n * \n * `ngIf` evaluates the `expression` and then renders the `then` or `else` template in its place\n * when expression is truthy or falsy respectively. Typically the:\n *  - `then` template is the inline template of `ngIf` unless bound to a different value.\n *  - `else` template is blank unless it is bound.\n * \n * # Most common usage\n * \n * The most common usage of the `ngIf` directive is to conditionally show the inline template as\n * seen in this example:\n * {\\@example common/ngIf/ts/module.ts region='NgIfSimple'}\n * \n * # Showing an alternative template using `else`\n * \n * If it is necessary to display a template when the `expression` is falsy use the `else` template\n * binding as shown. Note that the `else` binding points to a `<ng-template>` labeled `#elseBlock`.\n * The template can be defined anywhere in the component view but is typically placed right after\n * `ngIf` for readability.\n * \n * {\\@example common/ngIf/ts/module.ts region='NgIfElse'}\n * \n * # Using non-inlined `then` template\n * \n * Usually the `then` template is the inlined template of the `ngIf`, but it can be changed using\n * a binding (just like `else`). Because `then` and `else` are bindings, the template references can\n * change at runtime as shown in this example.\n * \n * {\\@example common/ngIf/ts/module.ts region='NgIfThenElse'}\n * \n * # Storing conditional result in a variable\n * \n * A common pattern is that we need to show a set of properties from the same object. If the\n * object is undefined, then we have to use the safe-traversal-operator `?.` to guard against\n * dereferencing a `null` value. This is especially the case when waiting on async data such as\n * when using the `async` pipe as shown in folowing example:\n * \n * ```\n * Hello {{ (userStream|async)?.last }}, {{ (userStream|async)?.first }}!\n * ```\n * \n * There are several inefficiencies in the above example:\n *  - We create multiple subscriptions on `userStream`. One for each `async` pipe, or two in the\n *    example above.\n *  - We cannot display an alternative screen while waiting for the data to arrive asynchronously.\n *  - We have to use the safe-traversal-operator `?.` to access properties, which is cumbersome.\n *  - We have to place the `async` pipe in parenthesis.\n * \n * A better way to do this is to use `ngIf` and store the result of the condition in a local\n * variable as shown in the the example below:\n * \n * {\\@example common/ngIf/ts/module.ts region='NgIfAs'}\n * \n * Notice that:\n *  - We use only one `async` pipe and hence only one subscription gets created.\n *  - `ngIf` stores the result of the `userStream|async` in the local variable `user`.\n *  - The local `user` can then be bound repeatedly in a more efficient way.\n *  - No need to use the safe-traversal-operator `?.` to access properties as `ngIf` will only\n *    display the data if `userStream` returns a value.\n *  - We can display an alternative template while waiting for the data.\n * \n * ### Syntax\n * \n * Simple form:\n * - `<div *ngIf=\"condition\">...</div>`\n * - `<div template=\"ngIf condition\">...</div>`\n * - `<ng-template [ngIf]=\"condition\"><div>...</div></ng-template>`\n * \n * Form with an else block:\n * ```\n * <div *ngIf=\"condition; else elseBlock\">...</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n * \n * Form with a `then` and `else` block:\n * ```\n * <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\n * <ng-template #thenBlock>...</ng-template>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n * \n * Form with storing the value locally:\n * ```\n * <div *ngIf=\"condition as value; else elseBlock\">{{value}}</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n * \n * \\@stable\n */\nexport class NgIf {\nprivate _context: NgIfContext = new NgIfContext();\nprivate _thenTemplateRef: TemplateRef<NgIfContext> = null;\nprivate _elseTemplateRef: TemplateRef<NgIfContext> = null;\nprivate _thenViewRef: EmbeddedViewRef<NgIfContext> = null;\nprivate _elseViewRef: EmbeddedViewRef<NgIfContext> = null;\n/**\n * @param {?} _viewContainer\n * @param {?} templateRef\n */\nconstructor(private _viewContainer: ViewContainerRef, templateRef: TemplateRef<NgIfContext>) {\n    this._thenTemplateRef = templateRef;\n  }\n/**\n * @param {?} condition\n * @return {?}\n */\nset ngIf(condition: any) {\n    this._context.$implicit = this._context.ngIf = condition;\n    this._updateView();\n  }\n/**\n * @param {?} templateRef\n * @return {?}\n */\nset ngIfThen(templateRef: TemplateRef<NgIfContext>) {\n    this._thenTemplateRef = templateRef;\n    this._thenViewRef = null;  // clear previous view if any.\n    this._updateView();\n  }\n/**\n * @param {?} templateRef\n * @return {?}\n */\nset ngIfElse(templateRef: TemplateRef<NgIfContext>) {\n    this._elseTemplateRef = templateRef;\n    this._elseViewRef = null;  // clear previous view if any.\n    this._updateView();\n  }\n/**\n * @return {?}\n */\nprivate _updateView() {\n    if (this._context.$implicit) {\n      if (!this._thenViewRef) {\n        this._viewContainer.clear();\n        this._elseViewRef = null;\n        if (this._thenTemplateRef) {\n          this._thenViewRef =\n              this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n        }\n      }\n    } else {\n      if (!this._elseViewRef) {\n        this._viewContainer.clear();\n        this._thenViewRef = null;\n        if (this._elseTemplateRef) {\n          this._elseViewRef =\n              this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n        }\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngIf]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n{type: TemplateRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ngIf': [{ type: Input },],\n'ngIfThen': [{ type: Input },],\n'ngIfElse': [{ type: Input },],\n};\n}\n\nfunction NgIf_tsickle_Closure_declarations() {\n/** @type {?} */\nNgIf.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgIf.ctorParameters;\n/** @type {?} */\nNgIf.propDecorators;\n/** @type {?} */\nNgIf.prototype._context;\n/** @type {?} */\nNgIf.prototype._thenTemplateRef;\n/** @type {?} */\nNgIf.prototype._elseTemplateRef;\n/** @type {?} */\nNgIf.prototype._thenViewRef;\n/** @type {?} */\nNgIf.prototype._elseViewRef;\n/** @type {?} */\nNgIf.prototype._viewContainer;\n}\n\n/**\n * \\@stable\n */\nexport class NgIfContext {\npublic $implicit: any = null;\npublic ngIf: any = null;\n}\n\nfunction NgIfContext_tsickle_Closure_declarations() {\n/** @type {?} */\nNgIfContext.prototype.$implicit;\n/** @type {?} */\nNgIfContext.prototype.ngIf;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {EventEmitter} from '../event_emitter';\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n * \n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link run}.\n * \n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n * \n * ### Example\n * \n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n * \n * \\@Component({ \n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n * \n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n * \n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n * \n *   constructor(private _ngZone: NgZone) {}\n * \n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n * \n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n * \n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n * \n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n * \n * \\@experimental\n */\nexport class NgZone {\nprivate outer: Zone;\nprivate inner: Zone;\nprivate _hasPendingMicrotasks: boolean = false;\nprivate _hasPendingMacrotasks: boolean = false;\nprivate _isStable = true;\nprivate _nesting: number = 0;\nprivate _onUnstable: EventEmitter<any> = new EventEmitter(false);\nprivate _onMicrotaskEmpty: EventEmitter<any> = new EventEmitter(false);\nprivate _onStable: EventEmitter<any> = new EventEmitter(false);\nprivate _onErrorEvents: EventEmitter<any> = new EventEmitter(false);\n/**\n * @param {?} __0\n */\nconstructor({enableLongStackTrace = false}) {\n    if (typeof Zone == 'undefined') {\n      throw new Error('Angular requires Zone.js prolyfill.');\n    }\n\n    Zone.assertZonePatched();\n\n    this.outer = this.inner = Zone.current;\n\n    if ((Zone as any)['wtfZoneSpec']) {\n      this.inner = this.inner.fork((Zone as any)['wtfZoneSpec']);\n    }\n\n    if (enableLongStackTrace && (Zone as any)['longStackTraceZoneSpec']) {\n      this.inner = this.inner.fork((Zone as any)['longStackTraceZoneSpec']);\n    }\n\n    this.forkInnerZoneWithAngularBehavior();\n  }\n/**\n * @return {?}\n */\nstatic isInAngularZone(): boolean { return Zone.current.get('isAngularZone') === true; }\n/**\n * @return {?}\n */\nstatic assertInAngularZone(): void {\n    if (!NgZone.isInAngularZone()) {\n      throw new Error('Expected to be in Angular Zone, but it is not!');\n    }\n  }\n/**\n * @return {?}\n */\nstatic assertNotInAngularZone(): void {\n    if (NgZone.isInAngularZone()) {\n      throw new Error('Expected to not be in Angular Zone, but it is!');\n    }\n  }\n/**\n * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n * the function.\n * \n * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n * outside of the Angular zone (typically started via {\\@link runOutsideAngular}).\n * \n * Any future tasks or microtasks scheduled from within this function will continue executing from\n * within the Angular zone.\n * \n * If a synchronous error happens it will be rethrown and not reported via `onError`.\n * @param {?} fn\n * @return {?}\n */\nrun(fn: () => any): any { return this.inner.run(fn); }\n/**\n * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n * rethrown.\n * @param {?} fn\n * @return {?}\n */\nrunGuarded(fn: () => any): any { return this.inner.runGuarded(fn); }\n/**\n * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n * the function.\n * \n * Running functions via `runOutsideAngular` allows you to escape Angular's zone and do work that\n * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n * \n * Any future tasks or microtasks scheduled from within this function will continue executing from\n * outside of the Angular zone.\n * \n * Use {\\@link run} to reenter the Angular zone and do work that updates the application model.\n * @param {?} fn\n * @return {?}\n */\nrunOutsideAngular(fn: () => any): any { return this.outer.run(fn); }\n/**\n * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n * @return {?}\n */\nget onUnstable(): EventEmitter<any> { return this._onUnstable; }\n/**\n * Notifies when there is no more microtasks enqueue in the current VM Turn.\n * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n * For this reason this event can fire multiple times per VM Turn.\n * @return {?}\n */\nget onMicrotaskEmpty(): EventEmitter<any> { return this._onMicrotaskEmpty; }\n/**\n * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n * implies we are about to relinquish VM turn.\n * This event gets called just once.\n * @return {?}\n */\nget onStable(): EventEmitter<any> { return this._onStable; }\n/**\n * Notify that an error has been delivered.\n * @return {?}\n */\nget onError(): EventEmitter<any> { return this._onErrorEvents; }\n/**\n * Whether there are no outstanding microtasks or macrotasks.\n * @return {?}\n */\nget isStable(): boolean { return this._isStable; }\n/**\n * @return {?}\n */\nget hasPendingMicrotasks(): boolean { return this._hasPendingMicrotasks; }\n/**\n * @return {?}\n */\nget hasPendingMacrotasks(): boolean { return this._hasPendingMacrotasks; }\n/**\n * @return {?}\n */\nprivate checkStable() {\n    if (this._nesting == 0 && !this._hasPendingMicrotasks && !this._isStable) {\n      try {\n        this._nesting++;\n        this._onMicrotaskEmpty.emit(null);\n      } finally {\n        this._nesting--;\n        if (!this._hasPendingMicrotasks) {\n          try {\n            this.runOutsideAngular(() => this._onStable.emit(null));\n          } finally {\n            this._isStable = true;\n          }\n        }\n      }\n    }\n  }\n/**\n * @return {?}\n */\nprivate forkInnerZoneWithAngularBehavior() {\n    this.inner = this.inner.fork({\n      name: 'angular',\n      properties: /** @type {?} */(( <any>{'isAngularZone': true})),\n      onInvokeTask: (delegate: ZoneDelegate, current: Zone, target: Zone, task: Task,\n                     applyThis: any, applyArgs: any): any => {\n        try {\n          this.onEnter();\n          return delegate.invokeTask(target, task, applyThis, applyArgs);\n        } finally {\n          this.onLeave();\n        }\n      },\n\n\n      onInvoke: (delegate: ZoneDelegate, current: Zone, target: Zone, callback: Function,\n                 applyThis: any, applyArgs: any[], source: string): any => {\n        try {\n          this.onEnter();\n          return delegate.invoke(target, callback, applyThis, applyArgs, source);\n        } finally {\n          this.onLeave();\n        }\n      },\n\n      onHasTask:\n          (delegate: ZoneDelegate, current: Zone, target: Zone, hasTaskState: HasTaskState) => {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n              // We are only interested in hasTask events which originate from our zone\n              // (A child hasTask event is not interesting to us)\n              if (hasTaskState.change == 'microTask') {\n                this.setHasMicrotask(hasTaskState.microTask);\n              } else if (hasTaskState.change == 'macroTask') {\n                this.setHasMacrotask(hasTaskState.macroTask);\n              }\n            }\n          },\n\n      onHandleError: (delegate: ZoneDelegate, current: Zone, target: Zone, error: any): boolean => {\n        delegate.handleError(target, error);\n        this.triggerError(error);\n        return false;\n      }\n    });\n  }\n/**\n * @return {?}\n */\nprivate onEnter() {\n    this._nesting++;\n    if (this._isStable) {\n      this._isStable = false;\n      this._onUnstable.emit(null);\n    }\n  }\n/**\n * @return {?}\n */\nprivate onLeave() {\n    this._nesting--;\n    this.checkStable();\n  }\n/**\n * @param {?} hasMicrotasks\n * @return {?}\n */\nprivate setHasMicrotask(hasMicrotasks: boolean) {\n    this._hasPendingMicrotasks = hasMicrotasks;\n    this.checkStable();\n  }\n/**\n * @param {?} hasMacrotasks\n * @return {?}\n */\nprivate setHasMacrotask(hasMacrotasks: boolean) { this._hasPendingMacrotasks = hasMacrotasks; }\n/**\n * @param {?} error\n * @return {?}\n */\nprivate triggerError(error: any) { this._onErrorEvents.emit(error); }\n}\n\nfunction NgZone_tsickle_Closure_declarations() {\n/** @type {?} */\nNgZone.prototype.outer;\n/** @type {?} */\nNgZone.prototype.inner;\n/** @type {?} */\nNgZone.prototype._hasPendingMicrotasks;\n/** @type {?} */\nNgZone.prototype._hasPendingMacrotasks;\n/** @type {?} */\nNgZone.prototype._isStable;\n/** @type {?} */\nNgZone.prototype._nesting;\n/** @type {?} */\nNgZone.prototype._onUnstable;\n/** @type {?} */\nNgZone.prototype._onMicrotaskEmpty;\n/** @type {?} */\nNgZone.prototype._onStable;\n/** @type {?} */\nNgZone.prototype._onErrorEvents;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '../di';\nimport {scheduleMicroTask} from '../util';\nimport {NgZone} from '../zone/ng_zone';\n\n/**\n * Testability API.\n * `declare` keyword causes tsickle to generate externs, so these methods are\n * not renamed by Closure Compiler.\n * @experimental\n */\nexport declare interface PublicTestability {\n  isStable(): boolean;\n  whenStable(callback: Function): void;\n  findProviders(using: any, provider: string, exactMatch: boolean): any[];\n}\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nexport class Testability implements PublicTestability {\n/**\n * \\@internal\n */\n_pendingCount: number = 0;\n/**\n * \\@internal\n */\n_isZoneStable: boolean = true;\n/**\n * Whether any work was done since the last 'whenStable' callback. This is\n * useful to detect if this could have potentially destabilized another\n * component while it is stabilizing.\n * \\@internal\n */\n_didWork: boolean = false;\n/**\n * \\@internal\n */\n_callbacks: Function[] = [];\n/**\n * @param {?} _ngZone\n */\nconstructor(private _ngZone: NgZone) { this._watchAngularEvents(); }\n/**\n * \\@internal\n * @return {?}\n */\n_watchAngularEvents(): void {\n    this._ngZone.onUnstable.subscribe({\n      next: () => {\n        this._didWork = true;\n        this._isZoneStable = false;\n      }\n    });\n\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.subscribe({\n        next: () => {\n          NgZone.assertNotInAngularZone();\n          scheduleMicroTask(() => {\n            this._isZoneStable = true;\n            this._runCallbacksIfReady();\n          });\n        }\n      });\n    });\n  }\n/**\n * @return {?}\n */\nincreasePendingRequestCount(): number {\n    this._pendingCount += 1;\n    this._didWork = true;\n    return this._pendingCount;\n  }\n/**\n * @return {?}\n */\ndecreasePendingRequestCount(): number {\n    this._pendingCount -= 1;\n    if (this._pendingCount < 0) {\n      throw new Error('pending async requests below zero');\n    }\n    this._runCallbacksIfReady();\n    return this._pendingCount;\n  }\n/**\n * @return {?}\n */\nisStable(): boolean {\n    return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n  }\n/**\n * \\@internal\n * @return {?}\n */\n_runCallbacksIfReady(): void {\n    if (this.isStable()) {\n      // Schedules the call backs in a new frame so that it is always async.\n      scheduleMicroTask(() => {\n        while (this._callbacks.length !== 0) {\n          (this._callbacks.pop())(this._didWork);\n        }\n        this._didWork = false;\n      });\n    } else {\n      // Not Ready\n      this._didWork = true;\n    }\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nwhenStable(callback: Function): void {\n    this._callbacks.push(callback);\n    this._runCallbacksIfReady();\n  }\n/**\n * @return {?}\n */\ngetPendingRequestCount(): number { return this._pendingCount; }\n/**\n * @deprecated use findProviders\n * @param {?} using\n * @param {?} provider\n * @param {?} exactMatch\n * @return {?}\n */\nfindBindings(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\n/**\n * @param {?} using\n * @param {?} provider\n * @param {?} exactMatch\n * @return {?}\n */\nfindProviders(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n];\n}\n\nfunction Testability_tsickle_Closure_declarations() {\n/** @type {?} */\nTestability.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTestability.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._pendingCount;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._isZoneStable;\n/**\n * Whether any work was done since the last 'whenStable' callback. This is\n * useful to detect if this could have potentially destabilized another\n * component while it is stabilizing.\n * \\@internal\n * @type {?}\n */\nTestability.prototype._didWork;\n/**\n * \\@internal\n * @type {?}\n */\nTestability.prototype._callbacks;\n/** @type {?} */\nTestability.prototype._ngZone;\n}\n\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nexport class TestabilityRegistry {\n/**\n * \\@internal\n */\n_applications = new Map<any, Testability>();\nconstructor() { _testabilityGetter.addToWindow(this); }\n/**\n * @param {?} token\n * @param {?} testability\n * @return {?}\n */\nregisterApplication(token: any, testability: Testability) {\n    this._applications.set(token, testability);\n  }\n/**\n * @param {?} elem\n * @return {?}\n */\ngetTestability(elem: any): Testability { return this._applications.get(elem); }\n/**\n * @return {?}\n */\ngetAllTestabilities(): Testability[] { return Array.from(this._applications.values()); }\n/**\n * @return {?}\n */\ngetAllRootElements(): any[] { return Array.from(this._applications.keys()); }\n/**\n * @param {?} elem\n * @param {?=} findInAncestors\n * @return {?}\n */\nfindTestabilityInTree(elem: Node, findInAncestors: boolean = true): Testability {\n    return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TestabilityRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nTestabilityRegistry.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTestabilityRegistry.ctorParameters;\n/**\n * \\@internal\n * @type {?}\n */\nTestabilityRegistry.prototype._applications;\n}\n\n\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * @experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n */\nexport interface GetTestability {\n  addToWindow(registry: TestabilityRegistry): void;\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability;\n}\nclass _NoopGetTestability implements GetTestability {\n/**\n * @param {?} registry\n * @return {?}\n */\naddToWindow(registry: TestabilityRegistry): void {}\n/**\n * @param {?} registry\n * @param {?} elem\n * @param {?} findInAncestors\n * @return {?}\n */\nfindTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability {\n    return null;\n  }\n}\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nexport function setTestabilityGetter(getter: GetTestability): void {\n  _testabilityGetter = getter;\n}\n\nlet /** @type {?} */ _testabilityGetter: GetTestability = new _NoopGetTestability();\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable} from 'rxjs/Observable';\nimport {Observer} from 'rxjs/Observer';\nimport {Subscription} from 'rxjs/Subscription';\nimport {merge} from 'rxjs/observable/merge';\nimport {share} from 'rxjs/operator/share';\n\nimport {ErrorHandler} from '../src/error_handler';\nimport {scheduleMicroTask, stringify} from '../src/util';\nimport {isPromise} from '../src/util/lang';\n\nimport {ApplicationInitStatus} from './application_init';\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_INITIALIZER} from './application_tokens';\nimport {Console} from './console';\nimport {Injectable, InjectionToken, Injector, Provider, ReflectiveInjector} from './di';\nimport {CompilerFactory, CompilerOptions} from './linker/compiler';\nimport {ComponentFactory, ComponentRef} from './linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from './linker/component_factory_resolver';\nimport {NgModuleFactory, NgModuleInjector, NgModuleRef} from './linker/ng_module_factory';\nimport {InternalViewRef, ViewRef} from './linker/view_ref';\nimport {WtfScopeFn, wtfCreateScope, wtfLeave} from './profile/profile';\nimport {Testability, TestabilityRegistry} from './testability/testability';\nimport {Type} from './type';\nimport {NgZone} from './zone/ng_zone';\n\nlet /** @type {?} */ _devMode: boolean = true;\nlet /** @type {?} */ _runModeLocked: boolean = false;\nlet /** @type {?} */ _platform: PlatformRef;\n\nexport const /** @type {?} */ ALLOW_MULTIPLE_PLATFORMS = new InjectionToken<boolean>('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n * \n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n * \n * \\@stable\n * @return {?}\n */\nexport function enableProdMode(): void {\n  if (_runModeLocked) {\n    throw new Error('Cannot enable prod mode after platform setup.');\n  }\n  _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n * \n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function isDevMode(): boolean {\n  _runModeLocked = true;\n  return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n * \n * \\@experimental\n */\nexport class NgProbeToken {\n/**\n * @param {?} name\n * @param {?} token\n */\nconstructor(public name: string,\npublic token: any) {}\n}\n\nfunction NgProbeToken_tsickle_Closure_declarations() {\n/** @type {?} */\nNgProbeToken.prototype.name;\n/** @type {?} */\nNgProbeToken.prototype.token;\n}\n\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nexport function createPlatform(injector: Injector): PlatformRef {\n  if (_platform && !_platform.destroyed &&\n      !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n    throw new Error(\n        'There can be only one platform. Destroy the previous one to create a new one.');\n  }\n  _platform = injector.get(PlatformRef);\n  const /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n  if (inits) inits.forEach(init => init());\n  return _platform;\n}\n/**\n * Creates a factory for a platform\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nexport function createPlatformFactory(\n    parentPlatformFactory: (extraProviders?: Provider[]) => PlatformRef, name: string,\n    providers: Provider[] = []): (extraProviders?: Provider[]) => PlatformRef {\n  const /** @type {?} */ marker = new InjectionToken(`Platform: ${name}`);\n  return (extraProviders: Provider[] = []) => {\n    let /** @type {?} */ platform = getPlatform();\n    if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n      if (parentPlatformFactory) {\n        parentPlatformFactory(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true}));\n      } else {\n        createPlatform(ReflectiveInjector.resolveAndCreate(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true})));\n      }\n    }\n    return assertPlatform(marker);\n  };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nexport function assertPlatform(requiredToken: any): PlatformRef {\n  const /** @type {?} */ platform = getPlatform();\n\n  if (!platform) {\n    throw new Error('No platform exists!');\n  }\n\n  if (!platform.injector.get(requiredToken, null)) {\n    throw new Error(\n        'A platform with a different configuration has been created. Please destroy it first.');\n  }\n\n  return platform;\n}\n/**\n * Destroy the existing platform.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function destroyPlatform(): void {\n  if (_platform && !_platform.destroyed) {\n    _platform.destroy();\n  }\n}\n/**\n * Returns the current platform.\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nexport function getPlatform(): PlatformRef {\n  return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n * \n * A page's platform is initialized implicitly when {\\@link bootstrap}() is called, or\n * explicitly by calling {\\@link createPlatform}().\n * \n * \\@stable\n * @abstract\n */\nexport abstract class PlatformRef {\n/**\n * Creates an instance of an `\\@NgModule` for the given platform\n * for offline compilation.\n * \n * ## Simple Example\n * \n * ```typescript\n * my_module.ts:\n * \n * \\@NgModule({ \n *   imports: [BrowserModule]\n * })\n * class MyModule {}\n * \n * main.ts:\n * import {MyModuleNgFactory} from './my_module.ngfactory';\n * import {platformBrowser} from '\\@angular/platform-browser';\n * \n * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n * ```\n * \n * \\@experimental APIs related to application bootstrap are currently under review.\n * @abstract\n * @template M\n * @param {?} moduleFactory\n * @return {?}\n */\nbootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>) {}\n/**\n * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n * \n * ## Simple Example\n * \n * ```typescript\n * \\@NgModule({ \n *   imports: [BrowserModule]\n * })\n * class MyModule {}\n * \n * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n * ```\n * \\@stable\n * @abstract\n * @template M\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @return {?}\n */\nbootstrapModule<M>(\n      moduleType: Type<M>,\n      compilerOptions?: CompilerOptions|CompilerOptions[]) {}\n/**\n * Register a listener to be called when the platform is disposed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void) {}\n/**\n * Retrieve the platform {\\@link Injector}, which is the parent injector for\n * every Angular application on the page and provides singleton providers.\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * Destroy the Angular platform and all Angular applications on the page.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * @abstract\n * @return {?}\n */\ndestroyed() {}\n}\n/**\n * @param {?} errorHandler\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler: ErrorHandler, callback: () => any): any {\n  try {\n    const /** @type {?} */ result = callback();\n    if (isPromise(result)) {\n      return result.catch((e: any) => {\n        errorHandler.handleError(e);\n        // rethrow as the exception handler might not do it\n        throw e;\n      });\n    }\n\n    return result;\n  } catch ( /** @type {?} */e) {\n    errorHandler.handleError(e);\n    // rethrow as the exception handler might not do it\n    throw e;\n  }\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nexport class PlatformRef_ extends PlatformRef {\nprivate _modules: NgModuleRef<any>[] = [];\nprivate _destroyListeners: Function[] = [];\nprivate _destroyed: boolean = false;\n/**\n * @param {?} _injector\n */\nconstructor(private _injector: Injector) { super(); }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._injector; }\n/**\n * @return {?}\n */\nget destroyed() { return this._destroyed; }\n/**\n * @return {?}\n */\ndestroy() {\n    if (this._destroyed) {\n      throw new Error('The platform has already been destroyed!');\n    }\n    this._modules.slice().forEach(module => module.destroy());\n    this._destroyListeners.forEach(listener => listener());\n    this._destroyed = true;\n  }\n/**\n * @template M\n * @param {?} moduleFactory\n * @return {?}\n */\nbootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>): Promise<NgModuleRef<M>> {\n    return this._bootstrapModuleFactoryWithZone(moduleFactory, null);\n  }\n/**\n * @template M\n * @param {?} moduleFactory\n * @param {?} ngZone\n * @return {?}\n */\nprivate _bootstrapModuleFactoryWithZone<M>(moduleFactory: NgModuleFactory<M>, ngZone: NgZone):\n      Promise<NgModuleRef<M>> {\n    // Note: We need to create the NgZone _before_ we instantiate the module,\n    // as instantiating the module creates some providers eagerly.\n    // So we create a mini parent injector that just contains the new NgZone and\n    // pass that as parent to the NgModuleFactory.\n    if (!ngZone) ngZone = new NgZone({enableLongStackTrace: isDevMode()});\n    // Attention: Don't use ApplicationRef.run here,\n    // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n    return ngZone.run(() => {\n      const /** @type {?} */ ngZoneInjector =\n          ReflectiveInjector.resolveAndCreate([{provide: NgZone, useValue: ngZone}], this.injector);\n      const /** @type {?} */ moduleRef = /** @type {?} */(( <NgModuleInjector<M>>moduleFactory.create(ngZoneInjector)));\n      const /** @type {?} */ exceptionHandler: ErrorHandler = moduleRef.injector.get(ErrorHandler, null);\n      if (!exceptionHandler) {\n        throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n      }\n      moduleRef.onDestroy(() => remove(this._modules, moduleRef));\n      ngZone.onError.subscribe({next: (error: any) => { exceptionHandler.handleError(error); }});\n      return _callAndReportToErrorHandler(exceptionHandler, () => {\n        const /** @type {?} */ initStatus: ApplicationInitStatus = moduleRef.injector.get(ApplicationInitStatus);\n        return initStatus.donePromise.then(() => {\n          this._moduleDoBootstrap(moduleRef);\n          return moduleRef;\n        });\n      });\n    });\n  }\n/**\n * @template M\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @return {?}\n */\nbootstrapModule<M>(moduleType: Type<M>, compilerOptions: CompilerOptions|CompilerOptions[] = []):\n      Promise<NgModuleRef<M>> {\n    return this._bootstrapModuleWithZone(moduleType, compilerOptions, null);\n  }\n/**\n * @template M\n * @param {?} moduleType\n * @param {?=} compilerOptions\n * @param {?=} ngZone\n * @return {?}\n */\nprivate _bootstrapModuleWithZone<M>(\n      moduleType: Type<M>, compilerOptions: CompilerOptions|CompilerOptions[] = [],\n      ngZone: NgZone = null): Promise<NgModuleRef<M>> {\n    const /** @type {?} */ compilerFactory: CompilerFactory = this.injector.get(CompilerFactory);\n    const /** @type {?} */ compiler = compilerFactory.createCompiler(\n        Array.isArray(compilerOptions) ? compilerOptions : [compilerOptions]);\n\n    return compiler.compileModuleAsync(moduleType)\n        .then((moduleFactory) => this._bootstrapModuleFactoryWithZone(moduleFactory, ngZone));\n  }\n/**\n * @param {?} moduleRef\n * @return {?}\n */\nprivate _moduleDoBootstrap(moduleRef: NgModuleInjector<any>): void {\n    const /** @type {?} */ appRef = moduleRef.injector.get(ApplicationRef);\n    if (moduleRef.bootstrapFactories.length > 0) {\n      moduleRef.bootstrapFactories.forEach(f => appRef.bootstrap(f));\n    } else if (moduleRef.instance.ngDoBootstrap) {\n      moduleRef.instance.ngDoBootstrap(appRef);\n    } else {\n      throw new Error(\n          `The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n          `Please define one of these.`);\n    }\n    this._modules.push(moduleRef);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n];\n}\n\nfunction PlatformRef__tsickle_Closure_declarations() {\n/** @type {?} */\nPlatformRef_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlatformRef_.ctorParameters;\n/** @type {?} */\nPlatformRef_.prototype._modules;\n/** @type {?} */\nPlatformRef_.prototype._destroyListeners;\n/** @type {?} */\nPlatformRef_.prototype._destroyed;\n/** @type {?} */\nPlatformRef_.prototype._injector;\n}\n\n/**\n * A reference to an Angular application running on a page.\n * \n * For more about Angular applications, see the documentation for {\\@link bootstrap}.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class ApplicationRef {\n/**\n * Bootstrap a new component at the root level of the application.\n * \n * ### Bootstrap process\n * \n * When bootstrapping a new root component into an application, Angular mounts the\n * specified application component onto DOM elements identified by the [componentType]'s\n * selector and kicks off automatic change detection to finish initializing the component.\n * \n * ### Example\n * {\\@example core/ts/platform/platform.ts region='longform'}\n * @abstract\n * @template C\n * @param {?} componentFactory\n * @return {?}\n */\nbootstrap<C>(componentFactory: ComponentFactory<C>|Type<C>) {}\n/**\n * Invoke this method to explicitly process change detection and its side-effects.\n * \n * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n * further changes are detected. If additional changes are picked up during this second cycle,\n * bindings in the app have side-effects that cannot be resolved in a single change detection\n * pass.\n * In this case, Angular throws an error, since an Angular application can only have one change\n * detection pass during which all change detection must complete.\n * @abstract\n * @return {?}\n */\ntick() {}\n/**\n * Get a list of component types registered to this application.\n * This list is populated even before the component is created.\n * @abstract\n * @return {?}\n */\ncomponentTypes() {}\n/**\n * Get a list of components registered to this application.\n * @abstract\n * @return {?}\n */\ncomponents() {}\n/**\n * Attaches a view so that it will be dirty checked.\n * The view will be automatically detached when it is destroyed.\n * This will throw if the view is already attached to a ViewContainer.\n * @abstract\n * @param {?} view\n * @return {?}\n */\nattachView(view: ViewRef) {}\n/**\n * Detaches a view from dirty checking again.\n * @abstract\n * @param {?} view\n * @return {?}\n */\ndetachView(view: ViewRef) {}\n/**\n * Returns the number of attached views.\n * @abstract\n * @return {?}\n */\nviewCount() {}\n/**\n * Returns an Observable that indicates when the application is stable or unstable.\n * @abstract\n * @return {?}\n */\nisStable() {}\n}\n/**\n * workaround https://github.com/angular/tsickle/issues/350\n * @suppress {checkTypes}\n */\nexport class ApplicationRef_ extends ApplicationRef {\n/**\n * \\@internal\n */\nstatic _tickScope: WtfScopeFn = wtfCreateScope('ApplicationRef#tick()');\nprivate _bootstrapListeners: ((compRef: ComponentRef<any>) => void)[] = [];\nprivate _rootComponents: ComponentRef<any>[] = [];\nprivate _rootComponentTypes: Type<any>[] = [];\nprivate _views: InternalViewRef[] = [];\nprivate _runningTick: boolean = false;\nprivate _enforceNoNewChanges: boolean = false;\nprivate _isStable: Observable<boolean>;\nprivate _stable = true;\n/**\n * @param {?} _zone\n * @param {?} _console\n * @param {?} _injector\n * @param {?} _exceptionHandler\n * @param {?} _componentFactoryResolver\n * @param {?} _initStatus\n */\nconstructor(\nprivate _zone: NgZone,\nprivate _console: Console,\nprivate _injector: Injector,\nprivate _exceptionHandler: ErrorHandler,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _initStatus: ApplicationInitStatus) {\n    super();\n    this._enforceNoNewChanges = isDevMode();\n\n    this._zone.onMicrotaskEmpty.subscribe(\n        {next: () => { this._zone.run(() => { this.tick(); }); }});\n\n    const isCurrentlyStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks &&\n          !this._zone.hasPendingMicrotasks;\n      this._zone.runOutsideAngular(() => {\n        observer.next(this._stable);\n        observer.complete();\n      });\n    });\n\n    const isStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      const stableSub: Subscription = this._zone.onStable.subscribe(() => {\n        NgZone.assertNotInAngularZone();\n\n        // Check whether there are no pending macro/micro tasks in the next tick\n        // to allow for NgZone to update the state.\n        scheduleMicroTask(() => {\n          if (!this._stable && !this._zone.hasPendingMacrotasks &&\n              !this._zone.hasPendingMicrotasks) {\n            this._stable = true;\n            observer.next(true);\n          }\n        });\n      });\n\n      const unstableSub: Subscription = this._zone.onUnstable.subscribe(() => {\n        NgZone.assertInAngularZone();\n        if (this._stable) {\n          this._stable = false;\n          this._zone.runOutsideAngular(() => { observer.next(false); });\n        }\n      });\n\n      return () => {\n        stableSub.unsubscribe();\n        unstableSub.unsubscribe();\n      };\n    });\n\n    this._isStable = merge(isCurrentlyStable, share.call(isStable));\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\nattachView(viewRef: ViewRef): void {\n    const /** @type {?} */ view = ( /** @type {?} */((viewRef as InternalViewRef)));\n    this._views.push(view);\n    view.attachToAppRef(this);\n  }\n/**\n * @param {?} viewRef\n * @return {?}\n */\ndetachView(viewRef: ViewRef): void {\n    const /** @type {?} */ view = ( /** @type {?} */((viewRef as InternalViewRef)));\n    remove(this._views, view);\n    view.detachFromAppRef();\n  }\n/**\n * @template C\n * @param {?} componentOrFactory\n * @return {?}\n */\nbootstrap<C>(componentOrFactory: ComponentFactory<C>|Type<C>): ComponentRef<C> {\n    if (!this._initStatus.done) {\n      throw new Error(\n          'Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n    }\n    let /** @type {?} */ componentFactory: ComponentFactory<C>;\n    if (componentOrFactory instanceof ComponentFactory) {\n      componentFactory = componentOrFactory;\n    } else {\n      componentFactory = this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n    }\n    this._rootComponentTypes.push(componentFactory.componentType);\n\n    // Create a factory associated with the current module if it's not bound to some other\n    const /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n        null :\n        this._injector.get(NgModuleRef);\n    const /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], componentFactory.selector, ngModule);\n\n    compRef.onDestroy(() => { this._unloadComponent(compRef); });\n    const /** @type {?} */ testability = compRef.injector.get(Testability, null);\n    if (testability) {\n      compRef.injector.get(TestabilityRegistry)\n          .registerApplication(compRef.location.nativeElement, testability);\n    }\n\n    this._loadComponent(compRef);\n    if (isDevMode()) {\n      this._console.log(\n          `Angular is running in the development mode. Call enableProdMode() to enable the production mode.`);\n    }\n    return compRef;\n  }\n/**\n * @param {?} componentRef\n * @return {?}\n */\nprivate _loadComponent(componentRef: ComponentRef<any>): void {\n    this.attachView(componentRef.hostView);\n    this.tick();\n    this._rootComponents.push(componentRef);\n    // Get the listeners lazily to prevent DI cycles.\n    const /** @type {?} */ listeners =\n        this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n    listeners.forEach((listener) => listener(componentRef));\n  }\n/**\n * @param {?} componentRef\n * @return {?}\n */\nprivate _unloadComponent(componentRef: ComponentRef<any>): void {\n    this.detachView(componentRef.hostView);\n    remove(this._rootComponents, componentRef);\n  }\n/**\n * @return {?}\n */\ntick(): void {\n    if (this._runningTick) {\n      throw new Error('ApplicationRef.tick is called recursively');\n    }\n\n    const /** @type {?} */ scope = ApplicationRef_._tickScope();\n    try {\n      this._runningTick = true;\n      this._views.forEach((view) => view.detectChanges());\n      if (this._enforceNoNewChanges) {\n        this._views.forEach((view) => view.checkNoChanges());\n      }\n    } finally {\n      this._runningTick = false;\n      wtfLeave(scope);\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // TODO(alxhub): Dispose of the NgZone.\n    this._views.slice().forEach((view) => view.destroy());\n  }\n/**\n * @return {?}\n */\nget viewCount() { return this._views.length; }\n/**\n * @return {?}\n */\nget componentTypes(): Type<any>[] { return this._rootComponentTypes; }\n/**\n * @return {?}\n */\nget components(): ComponentRef<any>[] { return this._rootComponents; }\n/**\n * @return {?}\n */\nget isStable(): Observable<boolean> { return this._isStable; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: Console, },\n{type: Injector, },\n{type: ErrorHandler, },\n{type: ComponentFactoryResolver, },\n{type: ApplicationInitStatus, },\n];\n}\n\nfunction ApplicationRef__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nApplicationRef_._tickScope;\n/** @type {?} */\nApplicationRef_.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationRef_.ctorParameters;\n/** @type {?} */\nApplicationRef_.prototype._bootstrapListeners;\n/** @type {?} */\nApplicationRef_.prototype._rootComponents;\n/** @type {?} */\nApplicationRef_.prototype._rootComponentTypes;\n/** @type {?} */\nApplicationRef_.prototype._views;\n/** @type {?} */\nApplicationRef_.prototype._runningTick;\n/** @type {?} */\nApplicationRef_.prototype._enforceNoNewChanges;\n/** @type {?} */\nApplicationRef_.prototype._isStable;\n/** @type {?} */\nApplicationRef_.prototype._stable;\n/** @type {?} */\nApplicationRef_.prototype._zone;\n/** @type {?} */\nApplicationRef_.prototype._console;\n/** @type {?} */\nApplicationRef_.prototype._injector;\n/** @type {?} */\nApplicationRef_.prototype._exceptionHandler;\n/** @type {?} */\nApplicationRef_.prototype._componentFactoryResolver;\n/** @type {?} */\nApplicationRef_.prototype._initStatus;\n}\n\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove<T>(list: T[], el: T): void {\n  const /** @type {?} */ index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken, Injector} from '../di';\nimport {ViewEncapsulation} from '../metadata/view';\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nexport class RenderComponentType {\n/**\n * @param {?} id\n * @param {?} templateUrl\n * @param {?} slotCount\n * @param {?} encapsulation\n * @param {?} styles\n * @param {?} animations\n */\nconstructor(\npublic id: string,\npublic templateUrl: string,\npublic slotCount: number,\npublic encapsulation: ViewEncapsulation,\npublic styles: Array<string|any[]>,\npublic animations: any) {}\n}\n\nfunction RenderComponentType_tsickle_Closure_declarations() {\n/** @type {?} */\nRenderComponentType.prototype.id;\n/** @type {?} */\nRenderComponentType.prototype.templateUrl;\n/** @type {?} */\nRenderComponentType.prototype.slotCount;\n/** @type {?} */\nRenderComponentType.prototype.encapsulation;\n/** @type {?} */\nRenderComponentType.prototype.styles;\n/** @type {?} */\nRenderComponentType.prototype.animations;\n}\n\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nexport abstract class RenderDebugInfo {\n/**\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponent() {}\n/**\n * @abstract\n * @return {?}\n */\nproviderTokens() {}\n/**\n * @abstract\n * @return {?}\n */\nreferences() {}\n/**\n * @abstract\n * @return {?}\n */\ncontext() {}\n/**\n * @abstract\n * @return {?}\n */\nsource() {}\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nexport interface DirectRenderer {\n  remove(node: any): void;\n  appendChild(node: any, parent: any): void;\n  insertBefore(node: any, refNode: any): void;\n  nextSibling(node: any): any;\n  parentElement(node: any): any;\n}\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nexport abstract class Renderer {\n/**\n * @abstract\n * @param {?} selectorOrNode\n * @param {?=} debugInfo\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} name\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateElement(parentElement: any, name: string, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} hostElement\n * @return {?}\n */\ncreateViewRoot(hostElement: any) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateTemplateAnchor(parentElement: any, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} value\n * @param {?=} debugInfo\n * @return {?}\n */\ncreateText(parentElement: any, value: string, debugInfo?: RenderDebugInfo) {}\n/**\n * @abstract\n * @param {?} parentElement\n * @param {?} nodes\n * @return {?}\n */\nprojectNodes(parentElement: any, nodes: any[]) {}\n/**\n * @abstract\n * @param {?} node\n * @param {?} viewRootNodes\n * @return {?}\n */\nattachViewAfter(node: any, viewRootNodes: any[]) {}\n/**\n * @abstract\n * @param {?} viewRootNodes\n * @return {?}\n */\ndetachView(viewRootNodes: any[]) {}\n/**\n * @abstract\n * @param {?} hostElement\n * @param {?} viewAllNodes\n * @return {?}\n */\ndestroyView(hostElement: any, viewAllNodes: any[]) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlisten(renderElement: any, name: string, callback: Function) {}\n/**\n * @abstract\n * @param {?} target\n * @param {?} name\n * @param {?} callback\n * @return {?}\n */\nlistenGlobal(target: string, name: string, callback: Function) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetElementProperty(renderElement: any, propertyName: string, propertyValue: any) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} attributeName\n * @param {?} attributeValue\n * @return {?}\n */\nsetElementAttribute(renderElement: any, attributeName: string, attributeValue: string) {}\n/**\n * Used only in debug mode to serialize property changes to dom nodes as attributes.\n * @abstract\n * @param {?} renderElement\n * @param {?} propertyName\n * @param {?} propertyValue\n * @return {?}\n */\nsetBindingDebugInfo(renderElement: any, propertyName: string, propertyValue: string) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nsetElementClass(renderElement: any, className: string, isAdd: boolean) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} styleName\n * @param {?} styleValue\n * @return {?}\n */\nsetElementStyle(renderElement: any, styleName: string, styleValue: string) {}\n/**\n * @abstract\n * @param {?} renderElement\n * @param {?} methodName\n * @param {?=} args\n * @return {?}\n */\ninvokeElementMethod(renderElement: any, methodName: string, args?: any[]) {}\n/**\n * @abstract\n * @param {?} renderNode\n * @param {?} text\n * @return {?}\n */\nsetText(renderNode: any, text: string) {}\n/**\n * @abstract\n * @param {?} element\n * @param {?} startingStyles\n * @param {?} keyframes\n * @param {?} duration\n * @param {?} delay\n * @param {?} easing\n * @param {?=} previousPlayers\n * @return {?}\n */\nanimate(\n      element: any, startingStyles: any, keyframes: any[], duration: number, delay: number,\n      easing: string, previousPlayers?: any[]) {}\n}\n\nexport const /** @type {?} */ Renderer2Interceptor = new InjectionToken<Renderer2[]>('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n * \n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link #setElementProperty} or {\\@link #setElementAttribute}\n * respectively.\n * \n * If you are implementing a custom renderer, you must implement this interface.\n * \n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n * \n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nexport abstract class RootRenderer {\n/**\n * @abstract\n * @param {?} componentType\n * @return {?}\n */\nrenderComponent(componentType: RenderComponentType) {}\n}\n\n/**\n * @experimental\n */\nexport interface RendererType2 {\n  id: string;\n  encapsulation: ViewEncapsulation;\n  styles: (string|any[])[];\n  data: {[kind: string]: any};\n}\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class RendererFactory2 {\n/**\n * @abstract\n * @param {?} hostElement\n * @param {?} type\n * @return {?}\n */\ncreateRenderer(hostElement: any, type: RendererType2) {}\n}\nexport type RendererStyleFlags2 = number;\nexport let RendererStyleFlags2: any = {};\nRendererStyleFlags2.Important = 1;\nRendererStyleFlags2.DashCase = 2;\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n\n/**\n * \\@experimental\n * @abstract\n */\nexport abstract class Renderer2 {\n/**\n * This field can be used to store arbitrary data on this renderer instance.\n * This is useful for renderers that delegate to other renderers.\n * @abstract\n * @return {?}\n */\ndata() {}\n/**\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * @abstract\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\ncreateElement(name: string, namespace?: string) {}\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\ncreateComment(value: string) {}\n/**\n * @abstract\n * @param {?} value\n * @return {?}\n */\ncreateText(value: string) {}\n  /**\n   * This property is allowed to be null / undefined,\n   * in which case the view engine won't call it.\n   * This is used as a performance optimization for production mode.\n   */\n  destroyNode: (node: any) => void | null;\n/**\n * @abstract\n * @param {?} parent\n * @param {?} newChild\n * @return {?}\n */\nappendChild(parent: any, newChild: any) {}\n/**\n * @abstract\n * @param {?} parent\n * @param {?} newChild\n * @param {?} refChild\n * @return {?}\n */\ninsertBefore(parent: any, newChild: any, refChild: any) {}\n/**\n * @abstract\n * @param {?} parent\n * @param {?} oldChild\n * @return {?}\n */\nremoveChild(parent: any, oldChild: any) {}\n/**\n * @abstract\n * @param {?} selectorOrNode\n * @return {?}\n */\nselectRootElement(selectorOrNode: string|any) {}\n/**\n * Attention: On WebWorkers, this will always return a value,\n * as we are asking for a result synchronously. I.e.\n * the caller can't rely on checking whether this is null or not.\n * @abstract\n * @param {?} node\n * @return {?}\n */\nparentNode(node: any) {}\n/**\n * Attention: On WebWorkers, this will always return a value,\n * as we are asking for a result synchronously. I.e.\n * the caller can't rely on checking whether this is null or not.\n * @abstract\n * @param {?} node\n * @return {?}\n */\nnextSibling(node: any) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @param {?=} namespace\n * @return {?}\n */\nsetAttribute(el: any, name: string, value: string, namespace?: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?=} namespace\n * @return {?}\n */\nremoveAttribute(el: any, name: string, namespace?: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\naddClass(el: any, name: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @return {?}\n */\nremoveClass(el: any, name: string) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} style\n * @param {?} value\n * @param {?=} flags\n * @return {?}\n */\nsetStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} style\n * @param {?=} flags\n * @return {?}\n */\nremoveStyle(el: any, style: string, flags?: RendererStyleFlags2) {}\n/**\n * @abstract\n * @param {?} el\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetProperty(el: any, name: string, value: any) {}\n/**\n * @abstract\n * @param {?} node\n * @param {?} value\n * @return {?}\n */\nsetValue(node: any, value: string) {}\n/**\n * @abstract\n * @param {?} target\n * @param {?} eventName\n * @param {?} callback\n * @return {?}\n */\nlisten(\n      target: 'window'|'document'|'body'|any, eventName: string,\n      callback: (event: any) => boolean | void) {}\n}\n\nfunction Renderer2_tsickle_Closure_declarations() {\n/**\n * This property is allowed to be null / undefined,\n * in which case the view engine won't call it.\n * This is used as a performance optimization for production mode.\n * @type {?}\n */\nRenderer2.prototype.destroyNode;\n}\n\n","\nexport class ElementRef {\n/**\n * The underlying native element or `null` if direct access to native elements is not supported\n * (e.g. when the application runs in a web worker).\n * \n * <div class=\"callout is-critical\">\n *   <header>Use with caution</header>\n *   <p>\n *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n *    data-binding provided by Angular instead. Alternatively you take a look at {\\@link Renderer}\n *    which provides API that can safely be used even when direct access to native elements is not\n *    supported.\n *   </p>\n *   <p>\n *    Relying on direct DOM access creates tight coupling between your application and rendering\n *    layers which will make it impossible to separate the two and deploy your application into a\n *    web worker.\n *   </p>\n * </div>\n * \\@stable\n */\npublic nativeElement: any;\n/**\n * @param {?} nativeElement\n */\nconstructor(nativeElement: any) { this.nativeElement = nativeElement; }\n}\n\nfunction ElementRef_tsickle_Closure_declarations() {\n/**\n * The underlying native element or `null` if direct access to native elements is not supported\n * (e.g. when the application runs in a web worker).\n * \n * <div class=\"callout is-critical\">\n *   <header>Use with caution</header>\n *   <p>\n *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n *    data-binding provided by Angular instead. Alternatively you take a look at {\\@link Renderer}\n *    which provides API that can safely be used even when direct access to native elements is not\n *    supported.\n *   </p>\n *   <p>\n *    Relying on direct DOM access creates tight coupling between your application and rendering\n *    layers which will make it impossible to separate the two and deploy your application into a\n *    web worker.\n *   </p>\n * </div>\n * \\@stable\n * @type {?}\n */\nElementRef.prototype.nativeElement;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable} from 'rxjs/Observable';\n\nimport {EventEmitter} from '../event_emitter';\nimport {getSymbolIterator} from '../util';\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n * \n * The type of object that {\\@link Query} and {\\@link ViewQueryMetadata} provide.\n * \n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n * \n * Changes can be observed by subscribing to the changes `Observable`.\n * \n * NOTE: In the future this class will implement an `Observable` interface.\n * \n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...}) \n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nexport class QueryList<T>/* implements Iterable<T> */ {\nprivate _dirty = true;\nprivate _results: Array<T> = [];\nprivate _emitter = new EventEmitter();\n/**\n * @return {?}\n */\nget changes(): Observable<any> { return this._emitter; }\n/**\n * @return {?}\n */\nget length(): number { return this._results.length; }\n/**\n * @return {?}\n */\nget first(): T { return this._results[0]; }\n/**\n * @return {?}\n */\nget last(): T { return this._results[this.length - 1]; }\n/**\n * See\n * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n * @template U\n * @param {?} fn\n * @return {?}\n */\nmap<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._results.map(fn); }\n/**\n * See\n * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n * @param {?} fn\n * @return {?}\n */\nfilter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._results.filter(fn);\n  }\n/**\n * See\n * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n * @param {?} fn\n * @return {?}\n */\nfind(fn: (item: T, index: number, array: T[]) => boolean): T { return this._results.find(fn); }\n/**\n * See\n * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n * @template U\n * @param {?} fn\n * @param {?} init\n * @return {?}\n */\nreduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._results.reduce(fn, init);\n  }\n/**\n * See\n * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n * @param {?} fn\n * @return {?}\n */\nforEach(fn: (item: T, index: number, array: T[]) => void): void { this._results.forEach(fn); }\n/**\n * See\n * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n * @param {?} fn\n * @return {?}\n */\nsome(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._results.some(fn);\n  }\n/**\n * @return {?}\n */\ntoArray(): T[] { return this._results.slice(); }\n/**\n * @return {?}\n */\n[getSymbolIterator()](): Iterator<T> { return ( /** @type {?} */((this._results as any)))[getSymbolIterator()](); }\n/**\n * @return {?}\n */\ntoString(): string { return this._results.toString(); }\n/**\n * @param {?} res\n * @return {?}\n */\nreset(res: Array<T|any[]>): void {\n    this._results = flatten(res);\n    this._dirty = false;\n  }\n/**\n * @return {?}\n */\nnotifyOnChanges(): void { this._emitter.emit(this); }\n/**\n * internal\n * @return {?}\n */\nsetDirty() { this._dirty = true; }\n/**\n * internal\n * @return {?}\n */\nget dirty() { return this._dirty; }\n}\n\nfunction QueryList_tsickle_Closure_declarations() {\n/** @type {?} */\nQueryList.prototype._dirty;\n/** @type {?} */\nQueryList.prototype._results;\n/** @type {?} */\nQueryList.prototype._emitter;\n}\n\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten<T>(list: Array<T|T[]>): T[] {\n  return list.reduce((flat: any[], item: T | T[]): T[] => {\n    const /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n    return ( /** @type {?} */((<T[]>flat))).concat(flatItem);\n  }, []);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\nimport {Injectable, Optional} from '../di';\n\nimport {Compiler} from './compiler';\nimport {NgModuleFactory} from './ng_module_factory';\nimport {NgModuleFactoryLoader} from './ng_module_factory_loader';\n\nconst /** @type {?} */ _SEPARATOR = '#';\n\nconst /** @type {?} */ FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class SystemJsNgModuleLoaderConfig {\n  /**\n   * Prefix to add when computing the name of the factory module for a given module name.\n   */\n  factoryPathPrefix: string;\n\n  /**\n   * Suffix to add when computing the name of the factory module for a given module name.\n   */\n  factoryPathSuffix: string;\n}\n\nfunction SystemJsNgModuleLoaderConfig_tsickle_Closure_declarations() {\n/**\n * Prefix to add when computing the name of the factory module for a given module name.\n * @type {?}\n */\nSystemJsNgModuleLoaderConfig.prototype.factoryPathPrefix;\n/**\n * Suffix to add when computing the name of the factory module for a given module name.\n * @type {?}\n */\nSystemJsNgModuleLoaderConfig.prototype.factoryPathSuffix;\n}\n\n\nconst /** @type {?} */ DEFAULT_CONFIG: SystemJsNgModuleLoaderConfig = {\n  factoryPathPrefix: '',\n  factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nexport class SystemJsNgModuleLoader implements NgModuleFactoryLoader {\nprivate _config: SystemJsNgModuleLoaderConfig;\n/**\n * @param {?} _compiler\n * @param {?=} config\n */\nconstructor(private _compiler: Compiler,  config?: SystemJsNgModuleLoaderConfig) {\n    this._config = config || DEFAULT_CONFIG;\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nload(path: string): Promise<NgModuleFactory<any>> {\n    const /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n    return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nprivate loadAndCompile(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    if (exportName === undefined) {\n      exportName = 'default';\n    }\n\n    return System.import(module)\n        .then((module: any) => module[exportName])\n        .then((type: any) => checkNotEmpty(type, module, exportName))\n        .then((type: any) => this._compiler.compileModuleAsync(type));\n  }\n/**\n * @param {?} path\n * @return {?}\n */\nprivate loadFactory(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    let /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n    if (exportName === undefined) {\n      exportName = 'default';\n      factoryClassSuffix = '';\n    }\n\n    return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n        .then((module: any) => module[exportName + factoryClassSuffix])\n        .then((factory: any) => checkNotEmpty(factory, module, exportName));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Compiler, },\n{type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }, ]},\n];\n}\n\nfunction SystemJsNgModuleLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nSystemJsNgModuleLoader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSystemJsNgModuleLoader.ctorParameters;\n/** @type {?} */\nSystemJsNgModuleLoader.prototype._config;\n/** @type {?} */\nSystemJsNgModuleLoader.prototype._compiler;\n}\n\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value: any, modulePath: string, exportName: string): any {\n  if (!value) {\n    throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n  }\n  return value;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ElementRef} from './element_ref';\nimport {EmbeddedViewRef} from './view_ref';\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n * \n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n * \n * To instantiate Embedded Views based on a Template, use\n * {\\@link ViewContainerRef#createEmbeddedView}, which will create the View and attach it to the\n * View Container.\n * \\@stable\n * @abstract\n */\nexport abstract class TemplateRef<C> {\n/**\n * @abstract\n * @return {?}\n */\nelementRef() {}\n/**\n * @abstract\n * @param {?} context\n * @return {?}\n */\ncreateEmbeddedView(context: C) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di/injector';\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {TemplateRef} from './template_ref';\nimport {EmbeddedViewRef, ViewRef} from './view_ref';\n/**\n * Represents a container where one or more Views can be attached.\n * \n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n * \n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n * \n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n * \n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nexport abstract class ViewContainerRef {\n/**\n * Anchor element that specifies the location of this container in the containing View.\n * <!-- TODO: rename to anchorElement -->\n * @abstract\n * @return {?}\n */\nelement() {}\n/**\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * @abstract\n * @return {?}\n */\nparentInjector() {}\n/**\n * Destroys all Views in this container.\n * @abstract\n * @return {?}\n */\nclear() {}\n/**\n * Returns the {\\@link ViewRef} for the View located in this container at the specified index.\n * @abstract\n * @param {?} index\n * @return {?}\n */\nget(index: number) {}\n/**\n * Returns the number of Views currently attached to this container.\n * @abstract\n * @return {?}\n */\nlength() {}\n/**\n * Instantiates an Embedded View based on the {\\@link TemplateRef `templateRef`} and inserts it\n * into this container at the specified `index`.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * Returns the {\\@link ViewRef} for the newly created View.\n * @abstract\n * @template C\n * @param {?} templateRef\n * @param {?=} context\n * @param {?=} index\n * @return {?}\n */\ncreateEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number) {}\n/**\n * Instantiates a single {\\@link Component} and inserts its Host View into this container at the\n * specified `index`.\n * \n * The component is instantiated using its {\\@link ComponentFactory} which can be\n * obtained via {\\@link ComponentFactoryResolver#resolveComponentFactory}.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * You can optionally specify the {\\@link Injector} that will be used as parent for the Component.\n * \n * Returns the {\\@link ComponentRef} of the Host View created for the newly instantiated Component.\n * @abstract\n * @template C\n * @param {?} componentFactory\n * @param {?=} index\n * @param {?=} injector\n * @param {?=} projectableNodes\n * @param {?=} ngModule\n * @return {?}\n */\ncreateComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModule?: NgModuleRef<any>) {}\n/**\n * Inserts a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n * \n * If `index` is not specified, the new View will be inserted as the last View in the container.\n * \n * Returns the inserted {\\@link ViewRef}.\n * @abstract\n * @param {?} viewRef\n * @param {?=} index\n * @return {?}\n */\ninsert(viewRef: ViewRef, index?: number) {}\n/**\n * Moves a View identified by a {\\@link ViewRef} into the container at the specified `index`.\n * \n * Returns the inserted {\\@link ViewRef}.\n * @abstract\n * @param {?} viewRef\n * @param {?} currentIndex\n * @return {?}\n */\nmove(viewRef: ViewRef, currentIndex: number) {}\n/**\n * Returns the index of the View, specified via {\\@link ViewRef}, within the current container or\n * `-1` if this container doesn't contain the View.\n * @abstract\n * @param {?} viewRef\n * @return {?}\n */\nindexOf(viewRef: ViewRef) {}\n/**\n * Destroys a View attached to this container at the specified `index`.\n * \n * If `index` is not specified, the last View in the container will be removed.\n * @abstract\n * @param {?=} index\n * @return {?}\n */\nremove(index?: number) {}\n/**\n * Use along with {\\@link #insert} to move a View within the current container.\n * \n * If the `index` param is omitted, the last {\\@link ViewRef} is detached.\n * @abstract\n * @param {?=} index\n * @return {?}\n */\ndetach(index?: number) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detector_ref';\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ViewRef extends ChangeDetectorRef {\n/**\n * Destroys the view and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * @abstract\n * @return {?}\n */\ndestroyed() {}\n/**\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {}\n}\n/**\n * Represents an Angular View.\n * \n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n * \n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n * \n * ### Example\n * \n * Given this template...\n * \n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n * \n * We have two {\\@link TemplateRef}s:\n * \n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n * \n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n * \n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n * \n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n * \n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nexport abstract class EmbeddedViewRef<C> extends ViewRef {\n/**\n * @abstract\n * @return {?}\n */\ncontext() {}\n/**\n * @abstract\n * @return {?}\n */\nrootNodes() {}\n}\n\nexport interface InternalViewRef extends ViewRef {\n  detachFromAppRef(): void;\n  attachToAppRef(appRef: ApplicationRef): void;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di';\nimport {DebugContext} from '../view/index';\nexport class EventListener {\n/**\n * @param {?} name\n * @param {?} callback\n */\nconstructor(public name: string,\npublic callback: Function){}; }\n\nfunction EventListener_tsickle_Closure_declarations() {\n/** @type {?} */\nEventListener.prototype.name;\n/** @type {?} */\nEventListener.prototype.callback;\n}\n\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport class DebugNode {\n  nativeNode: any;\n  listeners: EventListener[];\n  parent: DebugElement;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugContext\n */\nconstructor(nativeNode: any, parent: DebugNode,\nprivate _debugContext: DebugContext) {\n    this.nativeNode = nativeNode;\n    if (parent && parent instanceof DebugElement) {\n      parent.addChild(this);\n    } else {\n      this.parent = null;\n    }\n    this.listeners = [];\n  }\n/**\n * @return {?}\n */\nget injector(): Injector { return this._debugContext ? this._debugContext.injector : null; }\n/**\n * @return {?}\n */\nget componentInstance(): any { return this._debugContext ? this._debugContext.component : null; }\n/**\n * @return {?}\n */\nget context(): any { return this._debugContext ? this._debugContext.context : null; }\n/**\n * @return {?}\n */\nget references(): {[key: string]: any} {\n    return this._debugContext ? this._debugContext.references : null;\n  }\n/**\n * @return {?}\n */\nget providerTokens(): any[] {\n    return this._debugContext ? this._debugContext.providerTokens : null;\n  }\n/**\n * @deprecated since v4\n * @return {?}\n */\nget source(): string { return 'Deprecated since v4'; }\n}\n\nfunction DebugNode_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugNode.prototype.nativeNode;\n/** @type {?} */\nDebugNode.prototype.listeners;\n/** @type {?} */\nDebugNode.prototype.parent;\n/** @type {?} */\nDebugNode.prototype._debugContext;\n}\n\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nexport class DebugElement extends DebugNode {\n  name: string;\n  properties: {[key: string]: any};\n  attributes: {[key: string]: string};\n  classes: {[key: string]: boolean};\n  styles: {[key: string]: string};\n  childNodes: DebugNode[];\n  nativeElement: any;\n/**\n * @param {?} nativeNode\n * @param {?} parent\n * @param {?} _debugContext\n */\nconstructor(nativeNode: any, parent: any, _debugContext: DebugContext) {\n    super(nativeNode, parent, _debugContext);\n    this.properties = {};\n    this.attributes = {};\n    this.classes = {};\n    this.styles = {};\n    this.childNodes = [];\n    this.nativeElement = nativeNode;\n  }\n/**\n * @param {?} child\n * @return {?}\n */\naddChild(child: DebugNode) {\n    if (child) {\n      this.childNodes.push(child);\n      child.parent = this;\n    }\n  }\n/**\n * @param {?} child\n * @return {?}\n */\nremoveChild(child: DebugNode) {\n    const /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n    if (childIndex !== -1) {\n      child.parent = null;\n      this.childNodes.splice(childIndex, 1);\n    }\n  }\n/**\n * @param {?} child\n * @param {?} newChildren\n * @return {?}\n */\ninsertChildrenAfter(child: DebugNode, newChildren: DebugNode[]) {\n    const /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n    if (siblingIndex !== -1) {\n      this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n      newChildren.forEach(c => {\n        if (c.parent) {\n          c.parent.removeChild(c);\n        }\n        c.parent = this;\n      });\n    }\n  }\n/**\n * @param {?} refChild\n * @param {?} newChild\n * @return {?}\n */\ninsertBefore(refChild: DebugNode, newChild: DebugNode): void {\n    const /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n    if (refIndex === -1) {\n      this.addChild(newChild);\n    } else {\n      if (newChild.parent) {\n        newChild.parent.removeChild(newChild);\n      }\n      newChild.parent = this;\n      this.childNodes.splice(refIndex, 0, newChild);\n    }\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nquery(predicate: Predicate<DebugElement>): DebugElement {\n    const /** @type {?} */ results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const /** @type {?} */ matches: DebugElement[] = [];\n    _queryElementChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @param {?} predicate\n * @return {?}\n */\nqueryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const /** @type {?} */ matches: DebugNode[] = [];\n    _queryNodeChildren(this, predicate, matches);\n    return matches;\n  }\n/**\n * @return {?}\n */\nget children(): DebugElement[] {\n    return /** @type {?} */(( this.childNodes.filter((node) => node instanceof DebugElement) as DebugElement[]));\n  }\n/**\n * @param {?} eventName\n * @param {?} eventObj\n * @return {?}\n */\ntriggerEventHandler(eventName: string, eventObj: any) {\n    this.listeners.forEach((listener) => {\n      if (listener.name == eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\nfunction DebugElement_tsickle_Closure_declarations() {\n/** @type {?} */\nDebugElement.prototype.name;\n/** @type {?} */\nDebugElement.prototype.properties;\n/** @type {?} */\nDebugElement.prototype.attributes;\n/** @type {?} */\nDebugElement.prototype.classes;\n/** @type {?} */\nDebugElement.prototype.styles;\n/** @type {?} */\nDebugElement.prototype.childNodes;\n/** @type {?} */\nDebugElement.prototype.nativeElement;\n}\n\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nexport function asNativeElements(debugEls: DebugElement[]): any {\n  return debugEls.map((el) => el.nativeElement);\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(\n    element: DebugElement, predicate: Predicate<DebugElement>, matches: DebugElement[]) {\n  element.childNodes.forEach(node => {\n    if (node instanceof DebugElement) {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      _queryElementChildren(node, predicate, matches);\n    }\n  });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[]) {\n  if (parentNode instanceof DebugElement) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement) {\n        _queryNodeChildren(node, predicate, matches);\n      }\n    });\n  }\n}\n\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst /** @type {?} */ _nativeNodeToDebugNode = new Map<any, DebugNode>();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nexport function getDebugNode(nativeNode: any): DebugNode {\n  return _nativeNodeToDebugNode.get(nativeNode);\n}\n/**\n * @return {?}\n */\nexport function getAllDebugNodes(): DebugNode[] {\n  return Array.from(_nativeNodeToDebugNode.values());\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function indexDebugNode(node: DebugNode) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function removeDebugNodeFromIndex(node: DebugNode) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * @experimental All debugging apis are currently experimental.\n */\nexport interface Predicate<T> { (value: T, index?: number, array?: T[]): boolean; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {getSymbolIterator, looseIdentical} from '../util';\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function devModeEqual(a: any, b: any): boolean {\n  const /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n  const /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n  if (isListLikeIterableA && isListLikeIterableB) {\n    return areIterablesEqual(a, b, devModeEqual);\n  } else {\n    const /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n    const /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n    if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n      return true;\n    } else {\n      return looseIdentical(a, b);\n    }\n  }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n * \n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n * \n * Example:\n * \n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nexport class WrappedValue {\n/**\n * @param {?} wrapped\n */\nconstructor(public wrapped: any) {}\n/**\n * @param {?} value\n * @return {?}\n */\nstatic wrap(value: any): WrappedValue { return new WrappedValue(value); }\n}\n\nfunction WrappedValue_tsickle_Closure_declarations() {\n/** @type {?} */\nWrappedValue.prototype.wrapped;\n}\n\n/**\n * Helper class for unwrapping WrappedValue s\n */\nexport class ValueUnwrapper {\npublic hasWrappedValue = false;\n/**\n * @param {?} value\n * @return {?}\n */\nunwrap(value: any): any {\n    if (value instanceof WrappedValue) {\n      this.hasWrappedValue = true;\n      return value.wrapped;\n    }\n    return value;\n  }\n/**\n * @return {?}\n */\nreset() { this.hasWrappedValue = false; }\n}\n\nfunction ValueUnwrapper_tsickle_Closure_declarations() {\n/** @type {?} */\nValueUnwrapper.prototype.hasWrappedValue;\n}\n\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nexport class SimpleChange {\n/**\n * @param {?} previousValue\n * @param {?} currentValue\n * @param {?} firstChange\n */\nconstructor(public previousValue: any,\npublic currentValue: any,\npublic firstChange: boolean) {}\n/**\n * Check whether the new value is the first value assigned.\n * @return {?}\n */\nisFirstChange(): boolean { return this.firstChange; }\n}\n\nfunction SimpleChange_tsickle_Closure_declarations() {\n/** @type {?} */\nSimpleChange.prototype.previousValue;\n/** @type {?} */\nSimpleChange.prototype.currentValue;\n/** @type {?} */\nSimpleChange.prototype.firstChange;\n}\n\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isListLikeIterable(obj: any): boolean {\n  if (!isJsObject(obj)) return false;\n  return Array.isArray(obj) ||\n      (!(obj instanceof Map) &&      // JS Map are iterables but return entries as [k, v]\n       getSymbolIterator() in obj);  // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nexport function areIterablesEqual(\n    a: any, b: any, comparator: (a: any, b: any) => boolean): boolean {\n  const /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n  const /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n\n  while (true) {\n    const /** @type {?} */ item1 = iterator1.next();\n    const /** @type {?} */ item2 = iterator2.next();\n    if (item1.done && item2.done) return true;\n    if (item1.done || item2.done) return false;\n    if (!comparator(item1.value, item2.value)) return false;\n  }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nexport function iterateListLike(obj: any, fn: (p: any) => any) {\n  if (Array.isArray(obj)) {\n    for (let /** @type {?} */ i = 0; i < obj.length; i++) {\n      fn(obj[i]);\n    }\n  } else {\n    const /** @type {?} */ iterator = obj[getSymbolIterator()]();\n    let /** @type {?} */ item: any;\n    while (!((item = iterator.next()).done)) {\n      fn(item.value);\n    }\n  }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nexport function isJsObject(o: any): boolean {\n  return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isListLikeIterable, iterateListLike} from '../change_detection_util';\nimport {ChangeDetectorRef} from '../change_detector_ref';\n\nimport {IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, NgIterable, TrackByFunction} from './iterable_differs';\nexport class DefaultIterableDifferFactory implements IterableDifferFactory {\nconstructor() {}\n/**\n * @param {?} obj\n * @return {?}\n */\nsupports(obj: Object): boolean { return isListLikeIterable(obj); }\n\n  create<V>(trackByFn?: TrackByFunction<any>): DefaultIterableDiffer<V>;\n/**\n * @deprecated v4.0.0 - ChangeDetectorRef is not used and is no longer a parameter\n * @template V\n * @param {?=} cdRefOrTrackBy\n * @param {?=} trackByFn\n * @return {?}\n */\ncreate<V>(\n      cdRefOrTrackBy?: ChangeDetectorRef|TrackByFunction<any>,\n      trackByFn?: TrackByFunction<any>): DefaultIterableDiffer<V> {\n    return new DefaultIterableDiffer<V>(trackByFn || /** @type {?} */(( <TrackByFunction<any>>cdRefOrTrackBy)));\n  }\n}\n\nconst /** @type {?} */ trackByIdentity = (index: number, item: any) => item;\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nexport class DefaultIterableDiffer<V> implements IterableDiffer<V>, IterableChanges<V> {\nprivate _length: number = null;\nprivate _collection: NgIterable<V> = null;\nprivate _linkedRecords: _DuplicateMap<V> = null;\nprivate _unlinkedRecords: _DuplicateMap<V> = null;\nprivate _previousItHead: IterableChangeRecord_<V> = null;\nprivate _itHead: IterableChangeRecord_<V> = null;\nprivate _itTail: IterableChangeRecord_<V> = null;\nprivate _additionsHead: IterableChangeRecord_<V> = null;\nprivate _additionsTail: IterableChangeRecord_<V> = null;\nprivate _movesHead: IterableChangeRecord_<V> = null;\nprivate _movesTail: IterableChangeRecord_<V> = null;\nprivate _removalsHead: IterableChangeRecord_<V> = null;\nprivate _removalsTail: IterableChangeRecord_<V> = null;\nprivate _identityChangesHead: IterableChangeRecord_<V> = null;\nprivate _identityChangesTail: IterableChangeRecord_<V> = null;\n/**\n * @param {?=} _trackByFn\n */\nconstructor(private _trackByFn?: TrackByFunction<V>) {\n    this._trackByFn = this._trackByFn || trackByIdentity;\n  }\n/**\n * @return {?}\n */\nget collection() { return this._collection; }\n/**\n * @return {?}\n */\nget length(): number { return this._length; }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>;\n    for (record = this._itHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachOperation(\n      fn: (item: IterableChangeRecord_<V>, previousIndex: number, currentIndex: number) => void) {\n    let /** @type {?} */ nextIt = this._itHead;\n    let /** @type {?} */ nextRemove = this._removalsHead;\n    let /** @type {?} */ addRemoveOffset = 0;\n    let /** @type {?} */ moveOffsets: number[] = null;\n    while (nextIt || nextRemove) {\n      // Figure out which is the next record to process\n      // Order: remove, add, move\n      const /** @type {?} */ record = !nextRemove ||\n              nextIt &&\n                  nextIt.currentIndex < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n          nextIt :\n          nextRemove;\n      const /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n      const /** @type {?} */ currentIndex = record.currentIndex;\n\n      // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n      if (record === nextRemove) {\n        addRemoveOffset--;\n        nextRemove = nextRemove._nextRemoved;\n      } else {\n        nextIt = nextIt._next;\n        if (record.previousIndex == null) {\n          addRemoveOffset++;\n        } else {\n          // INVARIANT:  currentIndex < previousIndex\n          if (!moveOffsets) moveOffsets = [];\n          const /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n          const /** @type {?} */ localCurrentIndex = currentIndex - addRemoveOffset;\n          if (localMovePreviousIndex != localCurrentIndex) {\n            for (let /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n              const /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n              const /** @type {?} */ index = offset + i;\n              if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                moveOffsets[i] = offset + 1;\n              }\n            }\n            const /** @type {?} */ previousIndex = record.previousIndex;\n            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n          }\n        }\n      }\n\n      if (adjPreviousIndex !== currentIndex) {\n        fn(record, adjPreviousIndex, currentIndex);\n      }\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachPreviousItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>;\n    for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachAddedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachMovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>;\n    for (record = this._movesHead; record !== null; record = record._nextMoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachRemovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nforEachIdentityChange(fn: (record: IterableChangeRecord_<V>) => void) {\n    let /** @type {?} */ record: IterableChangeRecord_<V>;\n    for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n      fn(record);\n    }\n  }\n/**\n * @param {?} collection\n * @return {?}\n */\ndiff(collection: NgIterable<V>): DefaultIterableDiffer<V> {\n    if (collection == null) collection = [];\n    if (!isListLikeIterable(collection)) {\n      throw new Error(`Error trying to diff '${collection}'`);\n    }\n\n    if (this.check(collection)) {\n      return this;\n    } else {\n      return null;\n    }\n  }\n/**\n * @return {?}\n */\nonDestroy() {}\n/**\n * @param {?} collection\n * @return {?}\n */\ncheck(collection: NgIterable<V>): boolean {\n    this._reset();\n\n    let /** @type {?} */ record: IterableChangeRecord_<V> = this._itHead;\n    let /** @type {?} */ mayBeDirty: boolean = false;\n    let /** @type {?} */ index: number;\n    let /** @type {?} */ item: V;\n    let /** @type {?} */ itemTrackBy: any;\n    if (Array.isArray(collection)) {\n      this._length = collection.length;\n\n      for (let /** @type {?} */ index = 0; index < this._length; index++) {\n        item = collection[index];\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n\n        record = record._next;\n      }\n    } else {\n      index = 0;\n      iterateListLike(collection, (item: V) => {\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n        record = record._next;\n        index++;\n      });\n      this._length = index;\n    }\n\n    this._truncate(record);\n    this._collection = collection;\n    return this.isDirty;\n  }\n/**\n * @return {?}\n */\nget isDirty(): boolean {\n    return this._additionsHead !== null || this._movesHead !== null ||\n        this._removalsHead !== null || this._identityChangesHead !== null;\n  }\n/**\n * Reset the state of the change objects to show no changes. This means set previousKey to\n * currentKey, and clear all of the queues (additions, moves, removals).\n * Set the previousIndexes of moved and added items to their currentIndexes\n * Reset the list of additions, moves and removals\n * \n * \\@internal\n * @return {?}\n */\n_reset() {\n    if (this.isDirty) {\n      let /** @type {?} */ record: IterableChangeRecord_<V>;\n      let /** @type {?} */ nextRecord: IterableChangeRecord_<V>;\n\n      for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n        record.previousIndex = record.currentIndex;\n      }\n      this._additionsHead = this._additionsTail = null;\n\n      for (record = this._movesHead; record !== null; record = nextRecord) {\n        record.previousIndex = record.currentIndex;\n        nextRecord = record._nextMoved;\n      }\n      this._movesHead = this._movesTail = null;\n      this._removalsHead = this._removalsTail = null;\n      this._identityChangesHead = this._identityChangesTail = null;\n\n      // todo(vicb) when assert gets supported\n      // assert(!this.isDirty);\n    }\n  }\n/**\n * This is the core function which handles differences between collections.\n * \n * - `record` is the record which we saw at this position last time. If null then it is a new\n *   item.\n * - `item` is the current item in the collection\n * - `index` is the position of the item in the collection\n * \n * \\@internal\n * @param {?} record\n * @param {?} item\n * @param {?} itemTrackBy\n * @param {?} index\n * @return {?}\n */\n_mismatch(record: IterableChangeRecord_<V>, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    // The previous record after which we will append the current one.\n    let /** @type {?} */ previousRecord: IterableChangeRecord_<V>;\n\n    if (record === null) {\n      previousRecord = this._itTail;\n    } else {\n      previousRecord = record._prev;\n      // Remove the record from the collection since we know it does not match the item.\n      this._remove(record);\n    }\n\n    // Attempt to see if we have seen the item before.\n    record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n    if (record !== null) {\n      // We have seen this before, we need to move it forward in the collection.\n      // But first we need to check if identity changed, so we can update in view if necessary\n      if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n      this._moveAfter(record, previousRecord, index);\n    } else {\n      // Never seen it, check evicted list.\n      record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n      if (record !== null) {\n        // It is an item which we have evicted earlier: reinsert it back into the list.\n        // But first we need to check if identity changed, so we can update in view if necessary\n        if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n        this._reinsertAfter(record, previousRecord, index);\n      } else {\n        // It is a new item: add it.\n        record =\n            this._addAfter(new IterableChangeRecord_<V>(item, itemTrackBy), previousRecord, index);\n      }\n    }\n    return record;\n  }\n/**\n * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n * \n * Use case: `[a, a]` => `[b, a, a]`\n * \n * If we did not have this check then the insertion of `b` would:\n *   1) evict first `a`\n *   2) insert `b` at `0` index.\n *   3) leave `a` at index `1` as is. <-- this is wrong!\n *   3) reinsert `a` at index 2. <-- this is wrong!\n * \n * The correct behavior is:\n *   1) evict first `a`\n *   2) insert `b` at `0` index.\n *   3) reinsert `a` at index 1.\n *   3) move `a` at from `1` to `2`.\n * \n * \n * Double check that we have not evicted a duplicate item. We need to check if the item type may\n * have already been removed:\n * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n * at the end.\n * \n * \\@internal\n * @param {?} record\n * @param {?} item\n * @param {?} itemTrackBy\n * @param {?} index\n * @return {?}\n */\n_verifyReinsertion(record: IterableChangeRecord_<V>, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    let /** @type {?} */ reinsertRecord: IterableChangeRecord_<V> =\n        this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy);\n    if (reinsertRecord !== null) {\n      record = this._reinsertAfter(reinsertRecord, record._prev, index);\n    } else if (record.currentIndex != index) {\n      record.currentIndex = index;\n      this._addToMoves(record, index);\n    }\n    return record;\n  }\n/**\n * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n * \n * - `record` The first excess {\\@link IterableChangeRecord_}.\n * \n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_truncate(record: IterableChangeRecord_<V>) {\n    // Anything after that needs to be removed;\n    while (record !== null) {\n      const /** @type {?} */ nextRecord: IterableChangeRecord_<V> = record._next;\n      this._addToRemovals(this._unlink(record));\n      record = nextRecord;\n    }\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.clear();\n    }\n\n    if (this._additionsTail !== null) {\n      this._additionsTail._nextAdded = null;\n    }\n    if (this._movesTail !== null) {\n      this._movesTail._nextMoved = null;\n    }\n    if (this._itTail !== null) {\n      this._itTail._next = null;\n    }\n    if (this._removalsTail !== null) {\n      this._removalsTail._nextRemoved = null;\n    }\n    if (this._identityChangesTail !== null) {\n      this._identityChangesTail._nextIdentityChange = null;\n    }\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_reinsertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>,\n      index: number): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.remove(record);\n    }\n    const /** @type {?} */ prev = record._prevRemoved;\n    const /** @type {?} */ next = record._nextRemoved;\n\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_moveAfter(record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>, index: number):\n      IterableChangeRecord_<V> {\n    this._unlink(record);\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_addAfter(record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>, index: number):\n      IterableChangeRecord_<V> {\n    this._insertAfter(record, prevRecord, index);\n\n    if (this._additionsTail === null) {\n      // todo(vicb)\n      // assert(this._additionsHead === null);\n      this._additionsTail = this._additionsHead = record;\n    } else {\n      // todo(vicb)\n      // assert(_additionsTail._nextAdded === null);\n      // assert(record._nextAdded === null);\n      this._additionsTail = this._additionsTail._nextAdded = record;\n    }\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} prevRecord\n * @param {?} index\n * @return {?}\n */\n_insertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>,\n      index: number): IterableChangeRecord_<V> {\n    // todo(vicb)\n    // assert(record != prevRecord);\n    // assert(record._next === null);\n    // assert(record._prev === null);\n\n    const /** @type {?} */ next: IterableChangeRecord_<V> = prevRecord === null ? this._itHead : prevRecord._next;\n    // todo(vicb)\n    // assert(next != record);\n    // assert(prevRecord != record);\n    record._next = next;\n    record._prev = prevRecord;\n    if (next === null) {\n      this._itTail = record;\n    } else {\n      next._prev = record;\n    }\n    if (prevRecord === null) {\n      this._itHead = record;\n    } else {\n      prevRecord._next = record;\n    }\n\n    if (this._linkedRecords === null) {\n      this._linkedRecords = new _DuplicateMap<V>();\n    }\n    this._linkedRecords.put(record);\n\n    record.currentIndex = index;\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_remove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    return this._addToRemovals(this._unlink(record));\n  }\n/**\n * \\@internal\n * @param {?} record\n * @return {?}\n */\n_unlink(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._linkedRecords !== null) {\n      this._linkedRecords.remove(record);\n    }\n\n    const /** @type {?} */ prev = record._prev;\n    const /** @type {?} */ next = record._next;\n\n    // todo(vicb)\n    // assert((record._prev = null) === null);\n    // assert((record._next = null) === null);\n\n    if (prev === null) {\n      this._itHead = next;\n    } else {\n      prev._next = next;\n    }\n    if (next === null) {\n      this._itTail = prev;\n    } else {\n      next._prev = prev;\n    }\n\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} toIndex\n * @return {?}\n */\n_addToMoves(record: IterableChangeRecord_<V>, toIndex: number): IterableChangeRecord_<V> {\n    // todo(vicb)\n    // assert(record._nextMoved === null);\n\n    if (record.previousIndex === toIndex) {\n      return record;\n    }\n\n    if (this._movesTail === null) {\n      // todo(vicb)\n      // assert(_movesHead === null);\n      this._movesTail = this._movesHead = record;\n    } else {\n      // todo(vicb)\n      // assert(_movesTail._nextMoved === null);\n      this._movesTail = this._movesTail._nextMoved = record;\n    }\n\n    return record;\n  }\n/**\n * @param {?} record\n * @return {?}\n */\nprivate _addToRemovals(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords === null) {\n      this._unlinkedRecords = new _DuplicateMap<V>();\n    }\n    this._unlinkedRecords.put(record);\n    record.currentIndex = null;\n    record._nextRemoved = null;\n\n    if (this._removalsTail === null) {\n      // todo(vicb)\n      // assert(_removalsHead === null);\n      this._removalsTail = this._removalsHead = record;\n      record._prevRemoved = null;\n    } else {\n      // todo(vicb)\n      // assert(_removalsTail._nextRemoved === null);\n      // assert(record._nextRemoved === null);\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = this._removalsTail._nextRemoved = record;\n    }\n    return record;\n  }\n/**\n * \\@internal\n * @param {?} record\n * @param {?} item\n * @return {?}\n */\n_addIdentityChange(record: IterableChangeRecord_<V>, item: V) {\n    record.item = item;\n    if (this._identityChangesTail === null) {\n      this._identityChangesTail = this._identityChangesHead = record;\n    } else {\n      this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n    }\n    return record;\n  }\n/**\n * @return {?}\n */\ntoString(): string {\n    const /** @type {?} */ list: IterableChangeRecord_<V>[] = [];\n    this.forEachItem((record: IterableChangeRecord_<V>) => list.push(record));\n\n    const /** @type {?} */ previous: IterableChangeRecord_<V>[] = [];\n    this.forEachPreviousItem((record: IterableChangeRecord_<V>) => previous.push(record));\n\n    const /** @type {?} */ additions: IterableChangeRecord_<V>[] = [];\n    this.forEachAddedItem((record: IterableChangeRecord_<V>) => additions.push(record));\n\n    const /** @type {?} */ moves: IterableChangeRecord_<V>[] = [];\n    this.forEachMovedItem((record: IterableChangeRecord_<V>) => moves.push(record));\n\n    const /** @type {?} */ removals: IterableChangeRecord_<V>[] = [];\n    this.forEachRemovedItem((record: IterableChangeRecord_<V>) => removals.push(record));\n\n    const /** @type {?} */ identityChanges: IterableChangeRecord_<V>[] = [];\n    this.forEachIdentityChange((record: IterableChangeRecord_<V>) => identityChanges.push(record));\n\n    return 'collection: ' + list.join(', ') + '\\n' +\n        'previous: ' + previous.join(', ') + '\\n' +\n        'additions: ' + additions.join(', ') + '\\n' +\n        'moves: ' + moves.join(', ') + '\\n' +\n        'removals: ' + removals.join(', ') + '\\n' +\n        'identityChanges: ' + identityChanges.join(', ') + '\\n';\n  }\n}\n\nfunction DefaultIterableDiffer_tsickle_Closure_declarations() {\n/** @type {?} */\nDefaultIterableDiffer.prototype._length;\n/** @type {?} */\nDefaultIterableDiffer.prototype._collection;\n/** @type {?} */\nDefaultIterableDiffer.prototype._linkedRecords;\n/** @type {?} */\nDefaultIterableDiffer.prototype._unlinkedRecords;\n/** @type {?} */\nDefaultIterableDiffer.prototype._previousItHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._itHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._itTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._additionsHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._additionsTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._movesHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._movesTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._removalsHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._removalsTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._identityChangesHead;\n/** @type {?} */\nDefaultIterableDiffer.prototype._identityChangesTail;\n/** @type {?} */\nDefaultIterableDiffer.prototype._trackByFn;\n}\n\n/**\n * \\@stable\n */\nexport class IterableChangeRecord_<V> implements IterableChangeRecord<V> {\n  currentIndex: number = null;\n  previousIndex: number = null;\n/**\n * \\@internal\n */\n_nextPrevious: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_prev: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_next: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_prevDup: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_nextDup: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_prevRemoved: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_nextRemoved: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_nextAdded: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_nextMoved: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_nextIdentityChange: IterableChangeRecord_<V> = null;\n/**\n * @param {?} item\n * @param {?} trackById\n */\nconstructor(public item: V,\npublic trackById: any) {}\n/**\n * @return {?}\n */\ntoString(): string {\n    return this.previousIndex === this.currentIndex ? stringify(this.item) :\n                                                      stringify(this.item) + '[' +\n            stringify(this.previousIndex) + '->' + stringify(this.currentIndex) + ']';\n  }\n}\n\nfunction IterableChangeRecord__tsickle_Closure_declarations() {\n/** @type {?} */\nIterableChangeRecord_.prototype.currentIndex;\n/** @type {?} */\nIterableChangeRecord_.prototype.previousIndex;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextPrevious;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prev;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._next;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prevDup;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextDup;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._prevRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextRemoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextAdded;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextMoved;\n/**\n * \\@internal\n * @type {?}\n */\nIterableChangeRecord_.prototype._nextIdentityChange;\n/** @type {?} */\nIterableChangeRecord_.prototype.item;\n/** @type {?} */\nIterableChangeRecord_.prototype.trackById;\n}\n\nclass _DuplicateItemRecordList<V> {\n/**\n * \\@internal\n */\n_head: IterableChangeRecord_<V> = null;\n/**\n * \\@internal\n */\n_tail: IterableChangeRecord_<V> = null;\n/**\n * Append the record to the list of duplicates.\n * \n * Note: by design all records in the list of duplicates hold the same value in record.item.\n * @param {?} record\n * @return {?}\n */\nadd(record: IterableChangeRecord_<V>): void {\n    if (this._head === null) {\n      this._head = this._tail = record;\n      record._nextDup = null;\n      record._prevDup = null;\n    } else {\n      // todo(vicb)\n      // assert(record.item ==  _head.item ||\n      //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n      this._tail._nextDup = record;\n      record._prevDup = this._tail;\n      record._nextDup = null;\n      this._tail = record;\n    }\n  }\n/**\n * @param {?} trackById\n * @param {?} afterIndex\n * @return {?}\n */\nget(trackById: any, afterIndex: number): IterableChangeRecord_<V> {\n    let /** @type {?} */ record: IterableChangeRecord_<V>;\n    for (record = this._head; record !== null; record = record._nextDup) {\n      if ((afterIndex === null || afterIndex < record.currentIndex) &&\n          looseIdentical(record.trackById, trackById)) {\n        return record;\n      }\n    }\n    return null;\n  }\n/**\n * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n * \n * Returns whether the list of duplicates is empty.\n * @param {?} record\n * @return {?}\n */\nremove(record: IterableChangeRecord_<V>): boolean {\n    // todo(vicb)\n    // assert(() {\n    //  // verify that the record being removed is in the list.\n    //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n    //    if (identical(cursor, record)) return true;\n    //  }\n    //  return false;\n    //});\n\n    const /** @type {?} */ prev: IterableChangeRecord_<V> = record._prevDup;\n    const /** @type {?} */ next: IterableChangeRecord_<V> = record._nextDup;\n    if (prev === null) {\n      this._head = next;\n    } else {\n      prev._nextDup = next;\n    }\n    if (next === null) {\n      this._tail = prev;\n    } else {\n      next._prevDup = prev;\n    }\n    return this._head === null;\n  }\n}\n\nfunction _DuplicateItemRecordList_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\n_DuplicateItemRecordList.prototype._head;\n/**\n * \\@internal\n * @type {?}\n */\n_DuplicateItemRecordList.prototype._tail;\n}\n\nclass _DuplicateMap<V> {\n  map = new Map<any, _DuplicateItemRecordList<V>>();\n/**\n * @param {?} record\n * @return {?}\n */\nput(record: IterableChangeRecord_<V>) {\n    const /** @type {?} */ key = record.trackById;\n\n    let /** @type {?} */ duplicates = this.map.get(key);\n    if (!duplicates) {\n      duplicates = new _DuplicateItemRecordList<V>();\n      this.map.set(key, duplicates);\n    }\n    duplicates.add(record);\n  }\n/**\n * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n * have already iterated over, we use the afterIndex to pretend it is not there.\n * \n * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n * have any more `a`s needs to return the last `a` not the first or second.\n * @param {?} trackById\n * @param {?=} afterIndex\n * @return {?}\n */\nget(trackById: any, afterIndex: number = null): IterableChangeRecord_<V> {\n    const /** @type {?} */ key = trackById;\n    const /** @type {?} */ recordList = this.map.get(key);\n    return recordList ? recordList.get(trackById, afterIndex) : null;\n  }\n/**\n * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n * \n * The list of duplicates also is removed from the map if it gets empty.\n * @param {?} record\n * @return {?}\n */\nremove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    const /** @type {?} */ key = record.trackById;\n    const /** @type {?} */ recordList: _DuplicateItemRecordList<V> = this.map.get(key);\n    // Remove the list of duplicates when it gets empty\n    if (recordList.remove(record)) {\n      this.map.delete(key);\n    }\n    return record;\n  }\n/**\n * @return {?}\n */\nget isEmpty(): boolean { return this.map.size === 0; }\n/**\n * @return {?}\n */\nclear() { this.map.clear(); }\n/**\n * @return {?}\n */\ntoString(): string { return '_DuplicateMap(' + stringify(this.map) + ')'; }\n}\n\nfunction _DuplicateMap_tsickle_Closure_declarations() {\n/** @type {?} */\n_DuplicateMap.prototype.map;\n}\n\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item: any, addRemoveOffset: number, moveOffsets: number[]): number {\n  const /** @type {?} */ previousIndex = item.previousIndex;\n  if (previousIndex === null) return previousIndex;\n  let /** @type {?} */ moveOffset = 0;\n  if (moveOffsets && previousIndex < moveOffsets.length) {\n    moveOffset = moveOffsets[previousIndex];\n  }\n  return previousIndex + addRemoveOffset + moveOffset;\n}\n","import { isFunction } from './util/isFunction';\nimport { Observer, PartialObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { empty as emptyObserver } from './Observer';\nimport { $$rxSubscriber } from './symbol/rxSubscriber';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [$$rxSubscriber]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  public syncErrorValue: any = null;\n  public syncErrorThrown: boolean = false;\n  public syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.destination = (<Subscriber<any>> destinationOrNext);\n            (<any> this.destination).add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached {@link Error}. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  protected _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _parent, _parents } = this;\n    this._parent = null;\n    this._parents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parent = _parent;\n    this._parents = _parents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      context = observerOrNext;\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (isFunction(context.unsubscribe)) {\n        this.add(<() => void> context.unsubscribe.bind(context));\n      }\n      context.unsubscribe = this.unsubscribe.bind(this);\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._error) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        throw err;\n      } else {\n        _parentSubscriber.syncErrorValue = err;\n        _parentSubscriber.syncErrorThrown = true;\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        if (!_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._complete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._complete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      throw err;\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      parent.syncErrorValue = err;\n      parent.syncErrorThrown = true;\n      return true;\n    }\n    return false;\n  }\n\n  protected _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { $$rxSubscriber } from '../symbol/rxSubscriber';\nimport { PartialObserver, empty as emptyObserver } from '../Observer';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[$$rxSubscriber]) {\n      return nextOrObserver[$$rxSubscriber]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { root } from '../util/root';\n\nexport function getSymbolObservable(context: any) {\n  let $$observable: any;\n  let Symbol = context.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (Symbol.observable) {\n      $$observable = Symbol.observable;\n    } else {\n        $$observable = Symbol('observable');\n        Symbol.observable = $$observable;\n    }\n  } else {\n    $$observable = '@@observable';\n  }\n\n  return $$observable;\n}\n\nexport const $$observable = getSymbolObservable(root);","import { PartialObserver } from './Observer';\nimport { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, AnonymousSubscription, TeardownLogic } from './Subscription';\nimport { root } from './util/root';\nimport { toSubscriber } from './util/toSubscriber';\nimport { IfObservable } from './observable/IfObservable';\nimport { ErrorObservable } from './observable/ErrorObservable';\nimport { $$observable } from './symbol/observable';\n\nexport interface Subscribable<T> {\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): AnonymousSubscription;\n}\n\nexport type SubscribableOrPromise<T> = Subscribable<T> | PromiseLike<T>;\nexport type ObservableInput<T> = SubscribableOrPromise<T> | ArrayLike<T>;\n\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  public _isScalar: boolean = false;\n\n  protected source: Observable<any>;\n  protected operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is  called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  /**\n   * Registers handlers for handling emitted values, error and completions from the observable, and\n   *  executes the observable's subscriber function, which will take action to set up the underlying data stream\n   * @method subscribe\n   * @param {PartialObserver|Function} observerOrNext (optional) either an observer defining all functions to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the observable.\n   * @param {Function} error (optional) a handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled\n   * @param {Function} complete (optional) a handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   */\n  subscribe(): Subscription;\n  subscribe(observer: PartialObserver<T>): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      operator.call(sink, this.source);\n    } else {\n      sink.add(this._trySubscribe(sink));\n    }\n\n    if (sink.syncErrorThrowable) {\n      sink.syncErrorThrowable = false;\n      if (sink.syncErrorThrown) {\n        throw sink.syncErrorValue;\n      }\n    }\n\n    return sink;\n  }\n\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      sink.syncErrorThrown = true;\n      sink.syncErrorValue = err;\n      sink.error(err);\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, PromiseCtor?: typeof Promise): Promise<void> {\n    if (!PromiseCtor) {\n      if (root.Rx && root.Rx.config && root.Rx.config.Promise) {\n        PromiseCtor = root.Rx.config.Promise;\n      } else if (root.Promise) {\n        PromiseCtor = root.Promise;\n      }\n    }\n\n    if (!PromiseCtor) {\n      throw new Error('no Promise impl found');\n    }\n\n    return new PromiseCtor<void>((resolve, reject) => {\n      const subscription = this.subscribe((value) => {\n        if (subscription) {\n          // if there is a subscription, then we can surmise\n          // the next handling is asynchronous. Any errors thrown\n          // need to be rejected explicitly and unsubscribe must be\n          // called manually\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription.unsubscribe();\n          }\n        } else {\n          // if there is NO subscription, then we're getting a nexted\n          // value synchronously during subscription. We can just call it.\n          // If it errors, Observable's `subscribe` will ensure the\n          // unsubscription logic is called, then synchronously rethrow the error.\n          // After that, Promise will trap the error and send it\n          // down the rejection path.\n          next(value);\n        }\n      }, reject, resolve);\n    });\n  }\n\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words\n  static if: typeof IfObservable.create;\n  static throw: typeof ErrorObservable.create;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [$$observable]() {\n    return this;\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ScalarObservable<T> extends Observable<T> {\n  static create<T>(value: T, scheduler?: IScheduler): ScalarObservable<T> {\n    return new ScalarObservable(value, scheduler);\n  }\n\n  static dispatch(state: any): void {\n    const { done, value, subscriber } = state;\n\n    if (done) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(value);\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.done = true;\n    (<any> this).schedule(state);\n  }\n\n  _isScalar: boolean = true;\n\n  constructor(public value: T, private scheduler?: IScheduler) {\n    super();\n    if (scheduler) {\n      this._isScalar = false;\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    const value = this.value;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ScalarObservable.dispatch, 0, {\n        done: false, value, subscriber\n      });\n    } else {\n      subscriber.next(value);\n      if (!subscriber.closed) {\n        subscriber.complete();\n      }\n    }\n  }\n}\n","import { IScheduler } from '../Scheduler';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TeardownLogic } from '../Subscription';\n\nexport interface DispatchArg<T> {\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class EmptyObservable<T> extends Observable<T> {\n\n  /**\n   * Creates an Observable that emits no items to the Observer and immediately\n   * emits a complete notification.\n   *\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\n   * </span>\n   *\n   * <img src=\"./img/empty.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the complete notification. It can be used for composing with other\n   * Observables, such as in a {@link mergeMap}.\n   *\n   * @example <caption>Emit the number 7, then complete.</caption>\n   * var result = Rx.Observable.empty().startWith(7);\n   * result.subscribe(x => console.log(x));\n   *\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n   * var interval = Rx.Observable.interval(1000);\n   * var result = interval.mergeMap(x =>\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n   * );\n   * result.subscribe(x => console.log(x));\n   *\n   * // Results in the following to the console:\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\n   * // x will occur every 1000ms\n   * // if x % 2 is equal to 1 print abc\n   * // if x % 2 is not equal to 1 nothing will be output\n   *\n   * @see {@link create}\n   * @see {@link never}\n   * @see {@link of}\n   * @see {@link throw}\n   *\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emission of the complete notification.\n   * @return {Observable} An \"empty\" Observable: emits only the complete\n   * notification.\n   * @static true\n   * @name empty\n   * @owner Observable\n   */\n  static create<T>(scheduler?: IScheduler): Observable<T> {\n    return new EmptyObservable<T>(scheduler);\n  }\n\n  static dispatch<T>(arg: DispatchArg<T>) {\n    const { subscriber } = arg;\n    subscriber.complete();\n  }\n\n  constructor(private scheduler?: IScheduler) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber });\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { Scheduler } from '../Scheduler';\nexport function isScheduler(value: any): value is Scheduler {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { IScheduler } from '../Scheduler';\nimport { Observable } from '../Observable';\nimport { ScalarObservable } from './ScalarObservable';\nimport { EmptyObservable } from './EmptyObservable';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\nimport { TeardownLogic } from '../Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class ArrayObservable<T> extends Observable<T> {\n\n  static create<T>(array: T[], scheduler?: IScheduler): Observable<T> {\n    return new ArrayObservable(array, scheduler);\n  }\n\n  static of<T>(item1: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(item1: T, item2: T, item3: T, item4: T, item5: T, item6: T, scheduler?: IScheduler): Observable<T>;\n  static of<T>(...array: Array<T | IScheduler>): Observable<T>;\n  /**\n   * Creates an Observable that emits some values you specify as arguments,\n   * immediately one after the other, and then emits a complete notification.\n   *\n   * <span class=\"informal\">Emits the arguments you provide, then completes.\n   * </span>\n   *\n   * <img src=\"./img/of.png\" width=\"100%\">\n   *\n   * This static operator is useful for creating a simple Observable that only\n   * emits the arguments given, and the complete notification thereafter. It can\n   * be used for composing with other Observables, such as with {@link concat}.\n   * By default, it uses a `null` IScheduler, which means the `next`\n   * notifications are sent synchronously, although with a different IScheduler\n   * it is possible to determine when those notifications will be delivered.\n   *\n   * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n   * var numbers = Rx.Observable.of(10, 20, 30);\n   * var letters = Rx.Observable.of('a', 'b', 'c');\n   * var interval = Rx.Observable.interval(1000);\n   * var result = numbers.concat(letters).concat(interval);\n   * result.subscribe(x => console.log(x));\n   *\n   * @see {@link create}\n   * @see {@link empty}\n   * @see {@link never}\n   * @see {@link throw}\n   *\n   * @param {...T} values Arguments that represent `next` values to be emitted.\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n   * the emissions of the `next` notifications.\n   * @return {Observable<T>} An Observable that emits each given input value.\n   * @static true\n   * @name of\n   * @owner Observable\n   */\n  static of<T>(...array: Array<T | IScheduler>): Observable<T> {\n    let scheduler = <IScheduler>array[array.length - 1];\n    if (isScheduler(scheduler)) {\n      array.pop();\n    } else {\n      scheduler = null;\n    }\n\n    const len = array.length;\n    if (len > 1) {\n      return new ArrayObservable<T>(<any>array, scheduler);\n    } else if (len === 1) {\n      return new ScalarObservable<T>(<any>array[0], scheduler);\n    } else {\n      return new EmptyObservable<T>(scheduler);\n    }\n  }\n\n  static dispatch(state: any) {\n\n    const { array, index, count, subscriber } = state;\n\n    if (index >= count) {\n      subscriber.complete();\n      return;\n    }\n\n    subscriber.next(array[index]);\n\n    if (subscriber.closed) {\n      return;\n    }\n\n    state.index = index + 1;\n\n    (<any> this).schedule(state);\n  }\n\n  // value used if Array has one value and _isScalar\n  value: any;\n\n  constructor(private array: T[], private scheduler?: IScheduler) {\n    super();\n    if (!scheduler && array.length === 1) {\n      this._isScalar = true;\n      this.value = array[0];\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): TeardownLogic {\n    let index = 0;\n    const array = this.array;\n    const count = array.length;\n    const scheduler = this.scheduler;\n\n    if (scheduler) {\n      return scheduler.schedule(ArrayObservable.dispatch, 0, {\n        array, index, count, subscriber\n      });\n    } else {\n      for (let i = 0; i < count && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n      }\n      subscriber.complete();\n    }\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number');","export function isPromise<T>(value: any | Promise<T>): value is Promise<T> {\n  return value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { root } from '../util/root';\n\nexport function symbolIteratorPonyfill(root: any) {\n  const Symbol: any = root.Symbol;\n\n  if (typeof Symbol === 'function') {\n    if (!Symbol.iterator) {\n      Symbol.iterator = Symbol('iterator polyfill');\n    }\n    return Symbol.iterator;\n  } else {\n    // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n    const { Set } = root;\n    if (Set && typeof new Set()['@@iterator'] === 'function') {\n      return '@@iterator';\n    }\n    const { Map } = root;\n    // required for compatability with es6-shim\n    if (Map) {\n      let keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        let key = keys[i];\n        // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n        if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {\n          return key;\n        }\n      }\n    }\n    return '@@iterator';\n  }\n}\n\nexport const $$iterator = symbolIteratorPonyfill(root);","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index: number = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, private outerValue: T, private outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { root } from './root';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { Subscriber } from '../Subscriber';\nimport { Observable, ObservableInput } from '../Observable';\nimport { $$iterator } from '../symbol/iterator';\nimport { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { $$observable } from '../symbol/observable';\n\nexport function subscribeToResult<T, R>(outerSubscriber: OuterSubscriber<T, R>,\n                                        result: any,\n                                        outerValue?: T,\n                                        outerIndex?: number): Subscription;\nexport function subscribeToResult<T>(outerSubscriber: OuterSubscriber<any, any>,\n                                     result: ObservableInput<T>,\n                                     outerValue?: T,\n                                     outerIndex?: number): Subscription {\n  let destination: Subscriber<any> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n\n  if (destination.closed) {\n    return null;\n  }\n\n  if (result instanceof Observable) {\n    if (result._isScalar) {\n      destination.next((<any>result).value);\n      destination.complete();\n      return null;\n    } else {\n      return result.subscribe(destination);\n    }\n  } else if (isArrayLike(result)) {\n    for (let i = 0, len = result.length; i < len && !destination.closed; i++) {\n      destination.next(result[i]);\n    }\n    if (!destination.closed) {\n      destination.complete();\n    }\n  } else if (isPromise(result)) {\n    result.then(\n      (value) => {\n        if (!destination.closed) {\n          destination.next(<any>value);\n          destination.complete();\n        }\n      },\n      (err: any) => destination.error(err)\n    )\n    .then(null, (err: any) => {\n      // Escaping the Promise trap: globally throw unhandled errors\n      root.setTimeout(() => { throw err; });\n    });\n    return destination;\n  } else if (result && typeof result[$$iterator] === 'function') {\n    const iterator = <any>result[$$iterator]();\n    do {\n      let item = iterator.next();\n      if (item.done) {\n        destination.complete();\n        break;\n      }\n      destination.next(item.value);\n      if (destination.closed) {\n        break;\n      }\n    } while (true);\n  } else if (result && typeof result[$$observable] === 'function') {\n    const obs = result[$$observable]();\n    if (typeof obs.subscribe !== 'function') {\n      destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n    } else {\n      return obs.subscribe(new InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n    }\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    destination.error(new TypeError(msg));\n  }\n  return null;\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer } from '../Observer';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Subscribable } from '../Observable';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\nexport function mergeAll<T>(this: Observable<T>, concurrent?: number): T;\nexport function mergeAll<T, R>(this: Observable<T>, concurrent?: number): Subscribable<R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(this: Observable<T>, concurrent: number = Number.POSITIVE_INFINITY): T {\n  return <any>this.lift<any>(new MergeAllOperator<T>(concurrent));\n}\n\nexport class MergeAllOperator<T> implements Operator<Observable<T>, T> {\n  constructor(private concurrent: number) {\n  }\n\n  call(observer: Observer<T>, source: any): any {\n    return source.subscribe(new MergeAllSubscriber(observer, this.concurrent));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeAllSubscriber<T> extends OuterSubscriber<Observable<T>, T> {\n  private hasCompleted: boolean = false;\n  private buffer: Observable<T>[] = [];\n  private active: number = 0;\n\n  constructor(destination: Observer<T>, private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(observable: Observable<T>) {\n    if (this.active < this.concurrent) {\n      this.active++;\n      this.add(subscribeToResult<Observable<T>, T>(this, observable));\n    } else {\n      this.buffer.push(observable);\n    }\n  }\n\n  protected _complete() {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyComplete(innerSub: Subscription) {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","import { Observable, ObservableInput } from '../Observable';\nimport { IScheduler } from '../Scheduler';\nimport { ArrayObservable } from '../observable/ArrayObservable';\nimport { MergeAllOperator } from './mergeAll';\nimport { isScheduler } from '../util/isScheduler';\n\n/* tslint:disable:max-line-length */\nexport function merge<T>(this: Observable<T>, scheduler?: IScheduler): Observable<T>;\nexport function merge<T>(this: Observable<T>, concurrent?: number, scheduler?: IScheduler): Observable<T>;\nexport function merge<T, T2>(this: Observable<T>, v2: ObservableInput<T2>, scheduler?: IScheduler): Observable<T | T2>;\nexport function merge<T, T2>(this: Observable<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2>;\nexport function merge<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(this: Observable<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(this: Observable<T>, ...observables: Array<ObservableInput<T> | IScheduler | number>): Observable<T>;\nexport function merge<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | IScheduler | number>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nexport function merge<T, R>(this: Observable<T>, ...observables: Array<ObservableInput<any> | IScheduler | number>): Observable<R> {\n  return this.lift.call(mergeStatic<T, R>(this, ...observables));\n}\n\n/* tslint:disable:max-line-length */\nexport function mergeStatic<T>(v1: ObservableInput<T>, scheduler?: IScheduler): Observable<T>;\nexport function mergeStatic<T>(v1: ObservableInput<T>, concurrent?: number, scheduler?: IScheduler): Observable<T>;\nexport function mergeStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler?: IScheduler): Observable<T | T2>;\nexport function mergeStatic<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2>;\nexport function mergeStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function mergeStatic<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3>;\nexport function mergeStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function mergeStatic<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4>;\nexport function mergeStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function mergeStatic<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5>;\nexport function mergeStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function mergeStatic<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: IScheduler): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function mergeStatic<T>(...observables: (ObservableInput<T> | IScheduler | number)[]): Observable<T>;\nexport function mergeStatic<T, R>(...observables: (ObservableInput<any> | IScheduler | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function mergeStatic<T, R>(...observables: Array<ObservableInput<any> | IScheduler | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: IScheduler = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <IScheduler>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return new ArrayObservable(<any>observables, scheduler).lift(new MergeAllOperator<R>(concurrent));\n}\n","import {  mergeStatic  } from '../operator/merge';\n\nexport const merge = mergeStatic;","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n  constructor() {\n    const err: any = super('object unsubscribed');\n    (<any> this).name = err.name = 'ObjectUnsubscribedError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './Observer';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observer } from './Observer';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { ISubscription, Subscription, TeardownLogic } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { $$rxSubscriber } from './symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements ISubscription {\n\n  [$$rxSubscriber]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<T> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription, TeardownLogic } from '../Subscription';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n\n  constructor(protected source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      } else {\n        this._connection = connection;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return this.lift(new RefCountOperator<T>(this));\n  }\n}\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = {\n  operator: { value: null },\n  _refCount: { value: 0, writable: true },\n  _subscribe: { value: (<any> ConnectableObservable.prototype)._subscribe },\n  getSubject: { value: (<any> ConnectableObservable.prototype).getSubject },\n  connect: { value: (<any> ConnectableObservable.prototype).connect },\n  refCount: { value: (<any> ConnectableObservable.prototype).refCount }\n};\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const { connectable } = this;\n    if (connectable) {\n      this.connectable = null;\n      const connection = (<any> connectable)._connection;\n      (<any> connectable)._refCount = 0;\n      (<any> connectable)._subject = null;\n      (<any> connectable)._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // Observable.range(0, 10)\n    //   .publish()\n    //   .refCount()\n    //   .take(5)\n    //   .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(this: Observable<T>, subjectOrSubjectFactory: factoryOrValue<Subject<T>>): ConnectableObservable<T>;\nexport function multicast<T>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector?: selector<T>): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T>(this: Observable<T>, subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                             selector?: (source: Observable<T>) => Observable<T>): Observable<T> | ConnectableObservable<T> {\n  let subjectFactory: () => Subject<T>;\n  if (typeof subjectOrSubjectFactory === 'function') {\n    subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n  } else {\n    subjectFactory = function subjectFactory() {\n      return <Subject<T>>subjectOrSubjectFactory;\n    };\n  }\n\n  if (typeof selector === 'function') {\n    return this.lift(new MulticastOperator(subjectFactory, selector));\n  }\n\n  const connectable: any = Object.create(this, connectableObservableDescriptor);\n  connectable.source = this;\n  connectable.subjectFactory = subjectFactory;\n\n  return <ConnectableObservable<T>> connectable;\n}\n\nexport type factoryOrValue<T> = T | (() => T);\nexport type selector<T> = (source: Observable<T>) => Observable<T>;\n\nexport class MulticastOperator<T> implements Operator<T, T> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { Subject } from '../Subject';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .publish().refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(this: Observable<T>): Observable<T> {\n  return multicast.call(this, shareSubjectFactory).refCount();\n};\n","\n/**\n * Creates a token that can be used in a DI Provider.\n * \n * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n * \n * ```typescript\n * var t = new OpaqueToken(\"value\");\n * \n * var injector = Injector.resolveAndCreate([\n *   {provide: t, useValue: \"bindingValue\"}\n * ]);\n * \n * expect(injector.get(t)).toEqual(\"bindingValue\");\n * ```\n * \n * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n * caused by multiple providers using the same string as two different tokens.\n * \n * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n * error messages.\n * @deprecated since v4.0.0 because it does not support type information, use `InjectionToken<?>`\n * instead.\n */\nexport class OpaqueToken {\n/**\n * @param {?} _desc\n */\nconstructor(protected _desc: string) {}\n/**\n * @return {?}\n */\ntoString(): string { return `Token ${this._desc}`; }\n}\n\nfunction OpaqueToken_tsickle_Closure_declarations() {\n/** @type {?} */\nOpaqueToken.prototype._desc;\n}\n\n/**\n * Creates a token that can be used in a DI Provider.\n * \n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n * \n * `InjectionToken` is parametrize on `T` which is the type of object which will be returned by the\n * `Injector`. This provides additional level of type safety.\n * \n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n * \n * ### Example\n * \n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n * \n * \\@stable\n */\nexport class InjectionToken<T> extends OpaqueToken {\nprivate _differentiate_from_OpaqueToken_structurally: any;\n/**\n * @param {?} desc\n */\nconstructor(desc: string) { super(desc); }\n/**\n * @return {?}\n */\ntoString(): string { return `InjectionToken ${this._desc}`; }\n}\n\nfunction InjectionToken_tsickle_Closure_declarations() {\n/** @type {?} */\nInjectionToken.prototype._differentiate_from_OpaqueToken_structurally;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// TODO(jteplitz602): Load WorkerGlobalScope from lib.webworker.d.ts file #3492\ndeclare var WorkerGlobalScope: any /** TODO #9100 */;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\ndeclare var global: any /** TODO #9100 */;\nconst /** @type {?} */ __window = typeof window !== 'undefined' && window;\nconst /** @type {?} */ __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst /** @type {?} */ __global = typeof global !== 'undefined' && global;\nconst /** @type {?} */ _global: {[name: string]: any} = __window || __global || __self;\nexport {_global as global};\n\n// When Symbol.iterator doesn't exist, retrieves the key used in es6-shim\ndeclare const Symbol: any;\nlet /** @type {?} */ _symbolIterator: any = null;\n/**\n * @return {?}\n */\nexport function getSymbolIterator(): string|symbol {\n  if (!_symbolIterator) {\n    const /** @type {?} */ Symbol = _global['Symbol'];\n    if (Symbol && Symbol.iterator) {\n      _symbolIterator = Symbol.iterator;\n    } else {\n      // es6-shim specific logic\n      const /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n        const /** @type {?} */ key = keys[i];\n        if (key !== 'entries' && key !== 'size' &&\n            ( /** @type {?} */((Map as any))).prototype[key] === Map.prototype['entries']) {\n          _symbolIterator = key;\n        }\n      }\n    }\n  }\n  return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nexport function scheduleMicroTask(fn: Function) {\n  Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nexport function looseIdentical(a: any, b: any): boolean {\n  return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  const /** @type {?} */ res = token.toString();\n\n  if (res == null) {\n    return '' + res;\n  }\n\n  const /** @type {?} */ newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '../type';\nimport {global, stringify} from '../util';\n\nlet /** @type {?} */ _nextClassId = 0;\nconst /** @type {?} */ Reflect = global['Reflect'];\n\n/**\n * Declares the interface to be used with {@link Class}.\n *\n * @stable\n */\nexport type ClassDefinition = {\n  /**\n   * Optional argument for specifying the superclass.\n   */\n  extends?: Type<any>;\n\n  /**\n   * Required constructor function for a class.\n   *\n   * The function may be optionally wrapped in an `Array`, in which case additional parameter\n   * annotations may be specified.\n   * The number of arguments and the number of parameter annotations must match.\n   *\n   * See {@link Class} for example of usage.\n   */\n  constructor: Function | any[];\n} &\n{\n  /**\n   * Other methods on the class. Note that values should have type 'Function' but TS requires\n   * all properties to have a narrower type than the index signature.\n   */\n  [x: string]: Type<any>|Function|any[];\n};\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * DSL syntax:\n *\n * ```\n * var MyClass = ng\n *   .Component({...})\n *   .Class({...});\n * ```\n *\n * ES7 syntax:\n *\n * ```\n * @ng.Component({...})\n * class MyClass {...}\n * ```\n * @stable\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as ES7 decorator.\n   */\n  <T extends Type<any>>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n\n  /**\n   * Storage for the accumulated annotations so far used by the DSL syntax.\n   *\n   * Used by {@link Class} to annotate the generated class.\n   */\n  annotations: any[];\n\n  /**\n   * Generate a class from the definition and annotate it with {@link TypeDecorator#annotations}.\n   */\n  Class(obj: ClassDefinition): Type<any>;\n}\n/**\n * @param {?} annotation\n * @return {?}\n */\nfunction extractAnnotation(annotation: any): any {\n  if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n    // it is a decorator, extract annotation\n    annotation = annotation.annotation;\n  }\n  return annotation;\n}\n/**\n * @param {?} fnOrArray\n * @param {?} key\n * @return {?}\n */\nfunction applyParams(fnOrArray: (Function | any[]), key: string): Function {\n  if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function ||\n      fnOrArray === Number || fnOrArray === Array) {\n    throw new Error(`Can not use native ${stringify(fnOrArray)} as constructor`);\n  }\n\n  if (typeof fnOrArray === 'function') {\n    return fnOrArray;\n  }\n\n  if (Array.isArray(fnOrArray)) {\n    const /** @type {?} */ annotations: any[] = fnOrArray;\n    const /** @type {?} */ annoLength = annotations.length - 1;\n    const /** @type {?} */ fn: Function = fnOrArray[annoLength];\n    if (typeof fn !== 'function') {\n      throw new Error(\n          `Last position of Class method array must be Function in key ${key} was '${stringify(fn)}'`);\n    }\n    if (annoLength != fn.length) {\n      throw new Error(\n          `Number of annotations (${annoLength}) does not match number of arguments (${fn.length}) in the function: ${stringify(fn)}`);\n    }\n    const /** @type {?} */ paramsAnnotations: any[][] = [];\n    for (let /** @type {?} */ i = 0, /** @type {?} */ ii = annotations.length - 1; i < ii; i++) {\n      const /** @type {?} */ paramAnnotations: any[] = [];\n      paramsAnnotations.push(paramAnnotations);\n      const /** @type {?} */ annotation = annotations[i];\n      if (Array.isArray(annotation)) {\n        for (let /** @type {?} */ j = 0; j < annotation.length; j++) {\n          paramAnnotations.push(extractAnnotation(annotation[j]));\n        }\n      } else if (typeof annotation === 'function') {\n        paramAnnotations.push(extractAnnotation(annotation));\n      } else {\n        paramAnnotations.push(annotation);\n      }\n    }\n    Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n    return fn;\n  }\n\n  throw new Error(\n      `Only Function or Array is supported in Class definition for key '${key}' is '${stringify(fnOrArray)}'`);\n}\n/**\n * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n * \n * ## Basic Example\n * \n * ```\n * var Greeter = ng.Class({\n *   constructor: function(name) {\n *     this.name = name;\n *   },\n * \n *   greet: function() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * });\n * ```\n * \n * is equivalent to ES6:\n * \n * ```\n * class Greeter {\n *   constructor(name) {\n *     this.name = name;\n *   }\n * \n *   greet() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * }\n * ```\n * \n * or equivalent to ES5:\n * \n * ```\n * var Greeter = function (name) {\n *   this.name = name;\n * }\n * \n * Greeter.prototype.greet = function () {\n *   alert('Hello ' + this.name + '!');\n * }\n * ```\n * \n * ### Example with parameter annotations\n * \n * ```\n * var MyService = ng.Class({\n *   constructor: [String, [new Optional(), Service], function(name, myService) {\n *     ...\n *   }]\n * });\n * ```\n * \n * is equivalent to ES6:\n * \n * ```\n * class MyService {\n *   constructor(name: string, \\@Optional() myService: Service) {\n *     ...\n *   }\n * }\n * ```\n * \n * ### Example with inheritance\n * \n * ```\n * var Shape = ng.Class({\n *   constructor: (color) {\n *     this.color = color;\n *   }\n * });\n * \n * var Square = ng.Class({\n *   extends: Shape,\n *   constructor: function(color, size) {\n *     Shape.call(this, color);\n *     this.size = size;\n *   }\n * });\n * ```\n * @suppress {globalThis}\n * \\@stable\n * @param {?} clsDef\n * @return {?}\n */\nexport function Class(clsDef: ClassDefinition): Type<any> {\n  const /** @type {?} */ constructor = applyParams(\n      clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n\n  let /** @type {?} */ proto = constructor.prototype;\n\n  if (clsDef.hasOwnProperty('extends')) {\n    if (typeof clsDef.extends === 'function') {\n      ( /** @type {?} */((<Function>constructor))).prototype = proto =\n          Object.create(( /** @type {?} */((<Function>clsDef.extends))).prototype);\n    } else {\n      throw new Error(\n          `Class definition 'extends' property must be a constructor function was: ${stringify(clsDef.extends)}`);\n    }\n  }\n\n  for (const /** @type {?} */ key in clsDef) {\n    if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n      proto[key] = applyParams(clsDef[key], key);\n    }\n  }\n\n  if (this && this.annotations instanceof Array) {\n    Reflect.defineMetadata('annotations', this.annotations, constructor);\n  }\n\n  const /** @type {?} */ constructorName = constructor['name'];\n  if (!constructorName || constructorName === 'constructor') {\n    ( /** @type {?} */((constructor as any)))['overriddenName'] = `class${_nextClassId++}`;\n  }\n\n  return /** @type {?} */(( <Type<any>>constructor));\n}\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nexport function makeDecorator(\n    name: string, props: {[name: string]: any}, parentClass?: any,\n    chainFn: (fn: Function) => void = null): (...args: any[]) => (cls: any) => any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor([props]);\n/**\n * @param {?} objOrType\n * @return {?}\n */\nfunction DecoratorFactory(objOrType: any): (cls: any) => any {\n    if (!(Reflect && Reflect.getOwnMetadata)) {\n      throw 'reflect-metadata shim is required when using class decorators';\n    }\n\n    if (this instanceof DecoratorFactory) {\n      metaCtor.call(this, objOrType);\n      return this;\n    }\n\n    const /** @type {?} */ annotationInstance = new ( /** @type {?} */((<any>DecoratorFactory)))(objOrType);\n    const /** @type {?} */ chainAnnotation =\n        typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n    chainAnnotation.push(annotationInstance);\n    const /** @type {?} */ TypeDecorator: TypeDecorator = /** @type {?} */(( <TypeDecorator>function TypeDecorator(cls: Type<any>) {\n      const /** @type {?} */ annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n      annotations.push(annotationInstance);\n      Reflect.defineMetadata('annotations', annotations, cls);\n      return cls;\n    }));\n    TypeDecorator.annotations = chainAnnotation;\n    TypeDecorator.Class = Class;\n    if (chainFn) chainFn(TypeDecorator);\n    return TypeDecorator;\n  }\n\n  if (parentClass) {\n    DecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  DecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>DecoratorFactory))).annotationCls = DecoratorFactory;\n  return DecoratorFactory;\n}\n/**\n * @param {?} props\n * @return {?}\n */\nfunction makeMetadataCtor(props: ([string, any] | {[key: string]: any})[]): any {\n  return function ctor(...args: any[]) {\n    props.forEach((prop, i) => {\n      const /** @type {?} */ argVal = args[i];\n      if (Array.isArray(prop)) {\n        // plain parameter\n        this[prop[0]] = argVal === undefined ? prop[1] : argVal;\n      } else {\n        for (const /** @type {?} */ propName in prop) {\n          this[propName] =\n              argVal && argVal.hasOwnProperty(propName) ? argVal[propName] : prop[propName];\n        }\n      }\n    });\n  };\n}\n/**\n * @param {?} name\n * @param {?} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makeParamDecorator(\n    name: string, props: ([string, any] | {[name: string]: any})[], parentClass?: any): any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction ParamDecoratorFactory(...args: any[]): any {\n    if (this instanceof ParamDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const /** @type {?} */ annotationInstance = new ( /** @type {?} */((<any>ParamDecoratorFactory)))(...args);\n\n    ( /** @type {?} */((<any>ParamDecorator))).annotation = annotationInstance;\n    return ParamDecorator;\n/**\n * @param {?} cls\n * @param {?} unusedKey\n * @param {?} index\n * @return {?}\n */\nfunction ParamDecorator(cls: any, unusedKey: any, index: number): any {\n      const /** @type {?} */ parameters: any[][] = Reflect.getOwnMetadata('parameters', cls) || [];\n\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n\n      parameters[index] = parameters[index] || [];\n      parameters[index].push(annotationInstance);\n\n      Reflect.defineMetadata('parameters', parameters, cls);\n      return cls;\n    }\n  }\n  if (parentClass) {\n    ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  ParamDecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>ParamDecoratorFactory))).annotationCls = ParamDecoratorFactory;\n  return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?} props\n * @param {?=} parentClass\n * @return {?}\n */\nexport function makePropDecorator(\n    name: string, props: ([string, any] | {[key: string]: any})[], parentClass?: any): any {\n  const /** @type {?} */ metaCtor = makeMetadataCtor(props);\n/**\n * @param {...?} args\n * @return {?}\n */\nfunction PropDecoratorFactory(...args: any[]): any {\n    if (this instanceof PropDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n\n    const /** @type {?} */ decoratorInstance = new ( /** @type {?} */((<any>PropDecoratorFactory)))(...args);\n\n    return function PropDecorator(target: any, name: string) {\n      const /** @type {?} */ meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n      meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n      meta[name].unshift(decoratorInstance);\n      Reflect.defineMetadata('propMetadata', meta, target.constructor);\n    };\n  }\n\n  if (parentClass) {\n    PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  PropDecoratorFactory.prototype.toString = () => `@${name}`;\n  ( /** @type {?} */((<any>PropDecoratorFactory))).annotationCls = PropDecoratorFactory;\n  return PropDecoratorFactory;\n}\n","\nexport type ChangeDetectionStrategy = number;\nexport let ChangeDetectionStrategy: any = {};\nChangeDetectionStrategy.OnPush = 0;\nChangeDetectionStrategy.Default = 1;\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n\nexport type ChangeDetectorStatus = number;\nexport let ChangeDetectorStatus: any = {};\nChangeDetectorStatus.CheckOnce = 0;\nChangeDetectorStatus.Checked = 1;\nChangeDetectorStatus.CheckAlways = 2;\nChangeDetectorStatus.Detached = 3;\nChangeDetectorStatus.Errored = 4;\nChangeDetectorStatus.Destroyed = 5;\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nexport function isDefaultChangeDetectionStrategy(changeDetectionStrategy: ChangeDetectionStrategy):\n    boolean {\n  return changeDetectionStrategy == null ||\n      changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '../di/injection_token';\nimport {Type} from '../type';\nimport {makeParamDecorator, makePropDecorator} from '../util/decorators';\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n * \n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n * \n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n * \n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n * \n * \\@NgModule({ \n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n * \n * \\@experimental\n */\nexport const ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken<any>('AnalyzeForEntryComponents');\n\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * @stable\n */\nexport interface AttributeDecorator {\n  /**\n   * Specifies that a constant attribute value should be injected.\n   *\n   * The directive can inject constant string literals of host element attributes.\n   *\n   * ### Example\n   *\n   * Suppose we have an `<input>` element and want to know its `type`.\n   *\n   * ```html\n   * <input type=\"text\">\n   * ```\n   *\n   * A decorator can inject string literal `text` like so:\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeMetadata'}\n   *\n   * ### Example as TypeScript Decorator\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeFactory'}\n   *\n   * ### Example as ES5 DSL\n   *\n   * ```\n   * var MyComponent = ng\n   *   .Component({...})\n   *   .Class({\n   *     constructor: [new ng.Attribute('title'), function(title) {\n   *       ...\n   *     }]\n   *   })\n   * ```\n   *\n   * ### Example as ES5 annotation\n   *\n   * ```\n   * var MyComponent = function(title) {\n   *   ...\n   * };\n   *\n   * MyComponent.annotations = [\n   *   new ng.Component({...})\n   * ]\n   * MyComponent.parameters = [\n   *   [new ng.Attribute('title')]\n   * ]\n   * ```\n   *\n   * @stable\n   */\n  (name: string): any;\n  new (name: string): Attribute;\n}\n\n\n/**\n * Type of the Attribute metadata.\n */\nexport interface Attribute { attributeName?: string; }\n/**\n * Attribute decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Attribute: AttributeDecorator =\n    makeParamDecorator('Attribute', [['attributeName', undefined]]);\n\n/**\n * Type of the Query metadata.\n *\n * @stable\n */\nexport interface Query {\n  descendants: boolean;\n  first: boolean;\n  read: any;\n  isViewQuery: boolean;\n  selector: any;\n}\n/**\n * Base class for query metadata.\n * \n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Query {}\n\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {@link ContentChildren}.\n *\n * @stable\n */\nexport interface ContentChildrenDecorator {\n  /**\n   * @whatItDoes Configures a content query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/contentChildren/content_children_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ContentChildren to get the {@link QueryList} of elements or directives from the\n   * content DOM. Any time a child element is added, removed, or moved, the query list will be\n   * updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **descendants** - include only direct children or all descendants.\n   * * **read** - read a different token from the queried elements.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/contentChildren/content_children_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string,\n   {descendants, read}?: {descendants?: boolean, read?: any}): any;\n  new (\n      selector: Type<any>|Function|string,\n      {descendants, read}?: {descendants?: boolean, read?: any}): Query;\n}\n\n/**\n * Type of the ContentChildren metadata.\n *\n * @stable\n * @Annotation\n */\nexport type ContentChildren = Query;\n/**\n * ContentChildren decorator and metadata.\n * \n *  \\@stable\n *  \\@Annotation\n */\nexport const ContentChildren: ContentChildrenDecorator =\n    <ContentChildrenDecorator>makePropDecorator(\n        'ContentChildren',\n        [\n          ['selector', undefined], {\n            first: false,\n            isViewQuery: false,\n            descendants: false,\n            read: undefined,\n          }\n        ],\n        Query);\n\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * @stable\n */\nexport interface ContentChildDecorator {\n  /**\n   * @whatItDoes Configures a content query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ContentChild to get the first element or the directive matching the selector from\n   * the content DOM. If the content DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried element.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, {read}?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, {read}?: {read?: any}): ContentChild;\n}\n\n/**\n * Type of the ContentChild metadata.\n *\n * See {@link ContentChild}.\n *\n * @stable\n */\nexport type ContentChild = Query;\n/**\n * ContentChild decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const ContentChild: ContentChildDecorator = makePropDecorator(\n    'ContentChild',\n    [\n      ['selector', undefined], {\n        first: true,\n        isViewQuery: false,\n        descendants: true,\n        read: undefined,\n      }\n    ],\n    Query);\n\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {@ViewChildren}.\n *\n * @stable\n */\nexport interface ViewChildrenDecorator {\n  /**\n   * @whatItDoes Configures a view query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ViewChildren to get the {@link QueryList} of elements or directives from the\n   * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * Let's look at an example:\n   *\n   * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, {read}?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, {read}?: {read?: any}): ViewChildren;\n}\n\n/**\n * Type of the ViewChildren metadata.\n *\n * @stable\n */\nexport type ViewChildren = Query;\n/**\n * ViewChildren decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const ViewChildren: ViewChildrenDecorator = makePropDecorator(\n    'ViewChildren',\n    [\n      ['selector', undefined], {\n        first: false,\n        isViewQuery: true,\n        descendants: true,\n        read: undefined,\n      }\n    ],\n    Query);\n\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {@link ViewChild}\n *\n * @stable\n */\nexport interface ViewChildDecorator {\n  /**\n   * @whatItDoes Configures a view query.\n   *\n   * @howToUse\n   *\n   * {@example core/di/ts/viewChild/view_child_howto.ts region='HowTo'}\n   *\n   * @description\n   *\n   * You can use ViewChild to get the first element or the directive matching the selector from the\n   * view DOM. If the view DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * {@example core/di/ts/viewChild/view_child_example.ts region='Component'}\n   *\n   * **npm package**: `@angular/core`\n   *\n   * @stable\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, {read}?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, {read}?: {read?: any}): ViewChild;\n}\n\n/**\n * Type of the ViewChild metadata.\n *\n * @stable\n */\nexport type ViewChild = Query;\n/**\n * ViewChild decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const ViewChild: ViewChildDecorator = makePropDecorator(\n    'ViewChild',\n    [\n      ['selector', undefined], {\n        first: true,\n        isViewQuery: true,\n        descendants: true,\n        read: undefined,\n      }\n    ],\n    Query);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectionStrategy} from '../change_detection/constants';\nimport {Provider} from '../di';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator, makePropDecorator} from '../util/decorators';\n\nimport {ViewEncapsulation} from './view';\n\n\n/**\n * Type of the Directive decorator / constructor function.\n *\n * @stable\n */\nexport interface DirectiveDecorator {\n  /**\n   * @whatItDoes Marks a class as an Angular directive and collects directive configuration\n   * metadata.\n   *\n   * @howToUse\n   *\n   * ```\n   * import {Directive} from '@angular/core';\n   *\n   * @Directive({\n   *   selector: 'my-directive',\n   * })\n   * export class MyDirective {\n   * }\n   * ```\n   *\n   * @description\n   *\n   * Directive decorator allows you to mark a class as an Angular directive and provide additional\n   * metadata that determines how the directive should be processed, instantiated and used at\n   * runtime.\n   *\n   * Directives allow you to attach behavior to elements in the DOM..\n   *\n   * A directive must belong to an NgModule in order for it to be usable\n   * by another directive, component, or application. To specify that a directive is a member of an\n   * NgModule,\n   * you should list it in the `declarations` field of that NgModule.\n   *\n   * In addition to the metadata configuration specified via the Directive decorator,\n   * directives can control their runtime behavior by implementing various Life-Cycle hooks.\n   *\n   * **Metadata Properties:**\n   *\n   * * **exportAs** - name under which the component instance is exported in a template\n   * * **host** - map of class property to host element bindings for events, properties and\n   * attributes\n   * * **inputs** - list of class property names to data-bind as component inputs\n   * * **outputs** - list of class property names that expose output events that others can\n   * subscribe to\n   * * **providers** - list of providers available to this component and its children\n   * * **queries** -  configure queries that can be injected into the component\n   * * **selector** - css selector that identifies this component in a template\n   *\n   * @stable\n   * @Annotation\n   */\n  (obj: Directive): TypeDecorator;\n\n  /**\n   * See the {@link Directive} decorator.\n   */\n  new (obj: Directive): Directive;\n}\n\nexport interface Directive {\n  /**\n   * The CSS selector that triggers the instantiation of a directive.\n   *\n   * Angular only allows directives to trigger on CSS selectors that do not cross element\n   * boundaries.\n   *\n   * `selector` may be declared as one of the following:\n   *\n   * - `element-name`: select by element name.\n   * - `.class`: select by class name.\n   * - `[attribute]`: select by attribute name.\n   * - `[attribute=value]`: select by attribute name and value.\n   * - `:not(sub_selector)`: select only if the element does not match the `sub_selector`.\n   * - `selector1, selector2`: select if either `selector1` or `selector2` matches.\n   *\n   *\n   * ### Example\n   *\n   * Suppose we have a directive with an `input[type=text]` selector.\n   *\n   * And the following HTML:\n   *\n   * ```html\n   * <form>\n   *   <input type=\"text\">\n   *   <input type=\"radio\">\n   * <form>\n   * ```\n   *\n   * The directive would only be instantiated on the `<input type=\"text\">` element.\n   *\n   */\n  selector?: string;\n\n  /**\n   * Enumerates the set of data-bound input properties for a directive\n   *\n   * Angular automatically updates input properties during change detection.\n   *\n   * The `inputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property where the value is written.\n   * - `bindingProperty` specifies the DOM property where the value is read from.\n   *\n   * When `bindingProperty` is not provided, it is assumed to be equal to `directiveProperty`.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/ivhfXY?p=preview))\n   *\n   * The following example creates a component with two data-bound properties.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   inputs: ['bankName', 'id: account-id'],\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   bankName: string;\n   *   id: string;\n   *\n   *   // this property is not bound, and won't be automatically updated by Angular\n   *   normalizedBankName: string;\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <bank-account bank-name=\"RBC\" account-id=\"4747\"></bank-account>\n   *   `\n   * })\n   * class App {}\n   * ```\n   *\n   */\n  inputs?: string[];\n\n  /**\n   * Enumerates the set of event-bound output properties.\n   *\n   * When an output property emits an event, an event handler attached to that event\n   * the template is invoked.\n   *\n   * The `outputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property that emits events.\n   * - `bindingProperty` specifies the DOM property the event handler is attached to.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/d5CNq7?p=preview))\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'interval-dir',\n   *   outputs: ['everySecond', 'five5Secs: everyFiveSeconds']\n   * })\n   * class IntervalDir {\n   *   everySecond = new EventEmitter();\n   *   five5Secs = new EventEmitter();\n   *\n   *   constructor() {\n   *     setInterval(() => this.everySecond.emit(\"event\"), 1000);\n   *     setInterval(() => this.five5Secs.emit(\"event\"), 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <interval-dir (everySecond)=\"everySecond()\" (everyFiveSeconds)=\"everyFiveSeconds()\">\n   *     </interval-dir>\n   *   `\n   * })\n   * class App {\n   *   everySecond() { console.log('second'); }\n   *   everyFiveSeconds() { console.log('five seconds'); }\n   * }\n   * ```\n   *\n   */\n  outputs?: string[];\n\n  /**\n   * Specify the events, actions, properties and attributes related to the host element.\n   *\n   * ## Host Listeners\n   *\n   * Specifies which DOM events a directive listens to via a set of `(event)` to `method`\n   * key-value pairs:\n   *\n   * - `event`: the DOM event that the directive listens to.\n   * - `statement`: the statement to execute when the event occurs.\n   * If the evaluation of the statement returns `false`, then `preventDefault`is applied on the DOM\n   * event.\n   *\n   * To listen to global events, a target must be added to the event name.\n   * The target can be `window`, `document` or `body`.\n   *\n   * When writing a directive event binding, you can also refer to the $event local variable.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/DlA5KU?p=preview))\n   *\n   * The following example declares a directive that attaches a click listener to the button and\n   * counts clicks.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'button[counting]',\n   *   host: {\n   *     '(click)': 'onClick($event.target)'\n   *   }\n   * })\n   * class CountClicks {\n   *   numberOfClicks = 0;\n   *\n   *   onClick(btn) {\n   *     console.log(\"button\", btn, \"number of clicks:\", this.numberOfClicks++);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<button counting>Increment</button>`\n   * })\n   * class App {}\n   * ```\n   *\n   * ## Host Property Bindings\n   *\n   * Specifies which DOM properties a directive updates.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, it will update the host element of the directive.\n   *\n   * ### Example ([live demo](http://plnkr.co/edit/gNg0ED?p=preview))\n   *\n   * The following example creates a directive that sets the `valid` and `invalid` classes\n   * on the DOM element that has ngModel directive on it.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: '[ngModel]',\n   *   host: {\n   *     '[class.valid]': 'valid',\n   *     '[class.invalid]': 'invalid'\n   *   }\n   * })\n   * class NgModelStatus {\n   *   constructor(public control:NgModel) {}\n   *   get valid { return this.control.valid; }\n   *   get invalid { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   *\n   * ## Attributes\n   *\n   * Specifies static attributes that should be propagated to a host element.\n   *\n   * ### Example\n   *\n   * In this example using `my-button` directive (ex.: `<div my-button></div>`) on a host element\n   * (here: `<div>` ) will ensure that this element will get the \"button\" role.\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: '[my-button]',\n   *   host: {\n   *     'role': 'button'\n   *   }\n   * })\n   * class MyButton {\n   * }\n   * ```\n   */\n  host?: {[key: string]: string};\n\n  /**\n   * Defines the set of injectable objects that are visible to a Directive and its light DOM\n   * children.\n   *\n   * ## Simple Example\n   *\n   * Here is an example of a class that can be injected:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'greet',\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * ## Simple Example\n   *\n   * ```\n   * @Directive({\n   *   selector: 'child-dir',\n   *   exportAs: 'child'\n   * })\n   * class ChildDir {\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `<child-dir #c=\"child\"></child-dir>`\n   * })\n   * class MainComponent {\n   * }\n   *\n   * ```\n   */\n  exportAs?: string;\n\n  /**\n   * Configures the queries that will be injected into the directive.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * ### Example\n   *\n   * ```\n   * @Component({\n   *   selector: 'someDir',\n   *   queries: {\n   *     contentChildren: new ContentChildren(ChildDirective),\n   *     viewChildren: new ViewChildren(ChildDirective)\n   *   },\n   *   template: '<child-directive></child-directive>'\n   * })\n   * class SomeDir {\n   *   contentChildren: QueryList<ChildDirective>,\n   *   viewChildren: QueryList<ChildDirective>\n   *\n   *   ngAfterContentInit() {\n   *     // contentChildren is set\n   *   }\n   *\n   *   ngAfterViewInit() {\n   *     // viewChildren is set\n   *   }\n   * }\n   * ```\n   */\n  queries?: {[key: string]: any};\n}\n/**\n * Directive decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Directive: DirectiveDecorator = <DirectiveDecorator>makeDecorator('Directive', {\n  selector: undefined,\n  inputs: undefined,\n  outputs: undefined,\n  host: undefined,\n  providers: undefined,\n  exportAs: undefined,\n  queries: undefined\n});\n\n/**\n * Type of the Component decorator / constructor function.\n *\n * @stable\n */\nexport interface ComponentDecorator {\n  /**\n   * @whatItDoes Marks a class as an Angular component and collects component configuration\n   * metadata.\n   *\n   * @howToUse\n   *\n   * {@example core/ts/metadata/metadata.ts region='component'}\n   *\n   * @description\n   * Component decorator allows you to mark a class as an Angular component and provide additional\n   * metadata that determines how the component should be processed, instantiated and used at\n   * runtime.\n   *\n   * Components are the most basic building block of an UI in an Angular application.\n   * An Angular application is a tree of Angular components.\n   * Angular components are a subset of directives. Unlike directives, components always have\n   * a template and only one component can be instantiated per an element in a template.\n   *\n   * A component must belong to an NgModule in order for it to be usable\n   * by another component or application. To specify that a component is a member of an NgModule,\n   * you should list it in the `declarations` field of that NgModule.\n   *\n   * In addition to the metadata configuration specified via the Component decorator,\n   * components can control their runtime behavior by implementing various Life-Cycle hooks.\n   *\n   * **Metadata Properties:**\n   *\n   * * **animations** - list of animations of this component\n   * * **changeDetection** - change detection strategy used by this component\n   * * **encapsulation** - style encapsulation strategy used by this component\n   * * **entryComponents** - list of components that are dynamically inserted into the view of this\n   *   component\n   * * **exportAs** - name under which the component instance is exported in a template\n   * * **host** - map of class property to host element bindings for events, properties and\n   *   attributes\n   * * **inputs** - list of class property names to data-bind as component inputs\n   * * **interpolation** - custom interpolation markers used in this component's template\n   * * **moduleId** - ES/CommonJS module id of the file in which this component is defined\n   * * **outputs** - list of class property names that expose output events that others can\n   *   subscribe to\n   * * **providers** - list of providers available to this component and its children\n   * * **queries** -  configure queries that can be injected into the component\n   * * **selector** - css selector that identifies this component in a template\n   * * **styleUrls** - list of urls to stylesheets to be applied to this component's view\n   * * **styles** - inline-defined styles to be applied to this component's view\n   * * **template** - inline-defined template for the view\n   * * **templateUrl** - url to an external file containing a template for the view\n   * * **viewProviders** - list of providers available to this component and its view children\n   *\n   * ### Example\n   *\n   * {@example core/ts/metadata/metadata.ts region='component'}\n   *\n   * @stable\n   * @Annotation\n   */\n  (obj: Component): TypeDecorator;\n  /**\n   * See the {@link Component} decorator.\n   */\n  new (obj: Component): Component;\n}\n\n/**\n * Type of the Component metadata.\n *\n * @stable\n */\nexport interface Component extends Directive {\n  /**\n   * Defines the used change detection strategy.\n   *\n   * When a component is instantiated, Angular creates a change detector, which is responsible for\n   * propagating the component's bindings.\n   *\n   * The `changeDetection` property defines, whether the change detection will be checked every time\n   * or only when the component tells it to do so.\n   */\n  changeDetection?: ChangeDetectionStrategy;\n\n  /**\n   * Defines the set of injectable objects that are visible to its view DOM children.\n   *\n   * ## Simple Example\n   *\n   * Here is an example of a class that can be injected:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'needs-greeter'\n   * })\n   * class NeedsGreeter {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'greet',\n   *   viewProviders: [\n   *     Greeter\n   *   ],\n   *   template: `<needs-greeter></needs-greeter>`\n   * })\n   * class HelloWorld {\n   * }\n   *\n   * ```\n   */\n  viewProviders?: Provider[];\n\n  /**\n   * The module id of the module that contains the component.\n   * Needed to be able to resolve relative urls for templates and styles.\n   * In CommonJS, this can always be set to `module.id`, similarly SystemJS exposes `__moduleName`\n   * variable within each module.\n   *\n   *\n   * ## Simple Example\n   *\n   * ```\n   * @Directive({\n   *   selector: 'someDir',\n   *   moduleId: module.id\n   * })\n   * class SomeDir {\n   * }\n   *\n   * ```\n   */\n  moduleId?: string;\n\n  /**\n   * Specifies a template URL for an Angular component.\n   *\n   *Only one of `templateUrl` or `template` can be defined per View.\n   */\n  templateUrl?: string;\n\n  /**\n   * Specifies an inline template for an Angular component.\n   *\n   * Only one of `templateUrl` or `template` can be defined per Component.\n   */\n  template?: string;\n\n  /**\n   * Specifies stylesheet URLs for an Angular component.\n   */\n  styleUrls?: string[];\n\n  /**\n   * Specifies inline stylesheets for an Angular component.\n   */\n  styles?: string[];\n\n  /**\n   * Animations are defined on components via an animation-like DSL. This DSL approach to describing\n   * animations allows for a flexibility that both benefits developers and the framework.\n   *\n   * Animations work by listening on state changes that occur on an element within\n   * the template. When a state change occurs, Angular can then take advantage and animate the\n   * arc in between. This works similar to how CSS transitions work, however, by having a\n   * programmatic DSL, animations are not limited to environments that are DOM-specific.\n   * (Angular can also perform optimizations behind the scenes to make animations more performant.)\n   *\n   * For animations to be available for use, animation state changes are placed within\n   * {@link trigger animation triggers} which are housed inside of the `animations` annotation\n   * metadata. Within a trigger both {@link state state} and {@link transition transition} entries\n   * can be placed.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'animation-cmp',\n   *   templateUrl: 'animation-cmp.html',\n   *   animations: [\n   *     // this here is our animation trigger that\n   *     // will contain our state change animations.\n   *     trigger('myTriggerName', [\n   *       // the styles defined for the `on` and `off`\n   *       // states declared below are persisted on the\n   *       // element once the animation completes.\n   *       state('on', style({ opacity: 1 }),\n   *       state('off', style({ opacity: 0 }),\n   *\n   *       // this here is our animation that kicks off when\n   *       // this state change jump is true\n   *       transition('on => off', [\n   *         animate(\"1s\")\n   *       ])\n   *     ])\n   *   ]\n   * })\n   * ```\n   *\n   * As depicted in the code above, a group of related animation states are all contained within\n   * an animation `trigger` (the code example above called the trigger `myTriggerName`).\n   * When a trigger is created then it can be bound onto an element within the component's\n   * template via a property prefixed by an `@` symbol followed by trigger name and an expression\n   * that\n   * is used to determine the state value for that trigger.\n   *\n   * ```html\n   * <!-- animation-cmp.html -->\n   * <div @myTriggerName=\"expression\">...</div>\n   * ```\n   *\n   * For state changes to be executed, the `expression` value must change value from its existing\n   * value\n   * to something that we have set an animation to animate on (in the example above we are listening\n   * to a change of state between `on` and `off`). The `expression` value attached to the trigger\n   * must be something that can be evaluated with the template/component context.\n   *\n   * ### DSL Animation Functions\n   *\n   * Please visit each of the animation DSL functions listed below to gain a better understanding\n   * of how and why they are used for crafting animations in Angular2:\n   *\n   * - {@link trigger trigger()}\n   * - {@link state state()}\n   * - {@link transition transition()}\n   * - {@link group group()}\n   * - {@link sequence sequence()}\n   * - {@link style style()}\n   * - {@link animate animate()}\n   * - {@link keyframes keyframes()}\n   */\n  animations?: any[];\n\n  /**\n   * Specifies how the template and the styles should be encapsulated:\n   * - {@link ViewEncapsulation#Native `ViewEncapsulation.Native`} to use shadow roots - only works\n   *   if natively available on the platform,\n   * - {@link ViewEncapsulation#Emulated `ViewEncapsulation.Emulated`} to use shimmed CSS that\n   *   emulates the native behavior,\n   * - {@link ViewEncapsulation#None `ViewEncapsulation.None`} to use global CSS without any\n   *   encapsulation.\n   *\n   * When no `encapsulation` is defined for the component, the default value from the\n   * {@link CompilerConfig} is used. The default is `ViewEncapsulation.Emulated`}. Provide a new\n   * `CompilerConfig` to override this value.\n   *\n   * If the encapsulation is set to `ViewEncapsulation.Emulated` and the component has no `styles`\n   * nor `styleUrls` the encapsulation will automatically be switched to `ViewEncapsulation.None`.\n   */\n  encapsulation?: ViewEncapsulation;\n\n  /**\n   * Overrides the default encapsulation start and end delimiters (respectively `{{` and `}}`)\n   */\n  interpolation?: [string, string];\n\n  /**\n   * Defines the components that should be compiled as well when\n   * this component is defined. For each components listed here,\n   * Angular will create a {@link ComponentFactory} and store it in the\n   * {@link ComponentFactoryResolver}.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n}\n/**\n * Component decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Component: ComponentDecorator = <ComponentDecorator>makeDecorator(\n    'Component', {\n      selector: undefined,\n      inputs: undefined,\n      outputs: undefined,\n      host: undefined,\n      exportAs: undefined,\n      moduleId: undefined,\n      providers: undefined,\n      viewProviders: undefined,\n      changeDetection: ChangeDetectionStrategy.Default,\n      queries: undefined,\n      templateUrl: undefined,\n      template: undefined,\n      styleUrls: undefined,\n      styles: undefined,\n      animations: undefined,\n      encapsulation: undefined,\n      interpolation: undefined,\n      entryComponents: undefined\n    },\n    Directive);\n\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * @stable\n */\nexport interface PipeDecorator {\n  /**\n   * Declare reusable pipe function.\n   *\n   * A \"pure\" pipe is only re-evaluated when either the input or any of the arguments change.\n   *\n   * When not specified, pipes default to being pure.\n   */\n  (obj: Pipe): TypeDecorator;\n\n  /**\n   * See the {@link Pipe} decorator.\n   */\n  new (obj: Pipe): Pipe;\n}\n\n/**\n * Type of the Pipe metadata.\n *\n * @stable\n */\nexport interface Pipe {\n  name: string;\n  pure?: boolean;\n}\n/**\n * Pipe decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Pipe: PipeDecorator = <PipeDecorator>makeDecorator('Pipe', {\n  name: undefined,\n  pure: true,\n});\n\n\n/**\n * Type of the Input decorator / constructor function.\n *\n * @stable\n */\nexport interface InputDecorator {\n  /**\n   * Declares a data-bound input property.\n   *\n   * Angular automatically updates data-bound properties during change detection.\n   *\n   * `Input` takes an optional parameter that specifies the name\n   * used when instantiating a component in the template. When not provided,\n   * the name of the decorated property is used.\n   *\n   * ### Example\n   *\n   * The following example creates a component with two input properties.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   @Input() bankName: string;\n   *   @Input('account-id') id: string;\n   *\n   *   // this property is not bound, and won't be automatically updated by Angular\n   *   normalizedBankName: string;\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <bank-account bank-name=\"RBC\" account-id=\"4747\"></bank-account>\n   *   `\n   * })\n   *\n   * class App {}\n   * ```\n   * @stable\n   */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of the Input metadata.\n *\n * @stable\n */\nexport interface Input {\n  /**\n   * Name used when instantiating a component in the template.\n   */\n  bindingPropertyName?: string;\n}\n/**\n * Input decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Input: InputDecorator =\n    makePropDecorator('Input', [['bindingPropertyName', undefined]]);\n\n/**\n * Type of the Output decorator / constructor function.\n *\n * @stable\n */\nexport interface OutputDecorator {\n  /**\n   * Declares an event-bound output property.\n   *\n   * When an output property emits an event, an event handler attached to that event\n   * the template is invoked.\n   *\n   * `Output` takes an optional parameter that specifies the name\n   * used when instantiating a component in the template. When not provided,\n   * the name of the decorated property is used.\n   *\n   * ### Example\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'interval-dir',\n   * })\n   * class IntervalDir {\n   *   @Output() everySecond = new EventEmitter();\n   *   @Output('everyFiveSeconds') five5Secs = new EventEmitter();\n   *\n   *   constructor() {\n   *     setInterval(() => this.everySecond.emit(\"event\"), 1000);\n   *     setInterval(() => this.five5Secs.emit(\"event\"), 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `\n   *     <interval-dir (everySecond)=\"everySecond()\" (everyFiveSeconds)=\"everyFiveSeconds()\">\n   *     </interval-dir>\n   *   `\n   * })\n   * class App {\n   *   everySecond() { console.log('second'); }\n   *   everyFiveSeconds() { console.log('five seconds'); }\n   * }\n   * ```\n   * @stable\n   */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of the Output metadata.\n *\n * @stable\n */\nexport interface Output { bindingPropertyName?: string; }\n/**\n * Output decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const Output: OutputDecorator =\n    makePropDecorator('Output', [['bindingPropertyName', undefined]]);\n\n\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * @stable\n */\nexport interface HostBindingDecorator {\n  /**\n   * Declares a host property binding.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, it will update the host element of the directive.\n   *\n   * `HostBinding` takes an optional parameter that specifies the property\n   * name of the host element that will be updated. When not provided,\n   * the class property name is used.\n   *\n   * ### Example\n   *\n   * The following example creates a directive that sets the `valid` and `invalid` classes\n   * on the DOM element that has ngModel directive on it.\n   *\n   * ```typescript\n   * @Directive({selector: '[ngModel]'})\n   * class NgModelStatus {\n   *   constructor(public control:NgModel) {}\n   *   @HostBinding('class.valid') get valid() { return this.control.valid; }\n   *   @HostBinding('class.invalid') get invalid() { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`,\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   * @stable\n   */\n  (hostPropertyName?: string): any;\n  new (hostPropertyName?: string): any;\n}\n\n/**\n * Type of the HostBinding metadata.\n *\n * @stable\n */\nexport interface HostBinding { hostPropertyName?: string; }\n/**\n * HostBinding decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const HostBinding: HostBindingDecorator =\n    makePropDecorator('HostBinding', [['hostPropertyName', undefined]]);\n\n\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * @stable\n */\nexport interface HostListenerDecorator {\n  /**\n   * Declares a host listener.\n   *\n   * Angular will invoke the decorated method when the host element emits the specified event.\n   *\n   * If the decorated method returns `false`, then `preventDefault` is applied on the DOM event.\n   *\n   * ### Example\n   *\n   * The following example declares a directive that attaches a click listener to the button and\n   * counts clicks.\n   *\n   * ```typescript\n   * @Directive({selector: 'button[counting]'})\n   * class CountClicks {\n   *   numberOfClicks = 0;\n   *\n   *   @HostListener('click', ['$event.target'])\n   *   onClick(btn) {\n   *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: '<button counting>Increment</button>',\n   * })\n   * class App {}\n   * ```\n   * @stable\n   * @Annotation\n   */\n  (eventName: string, args?: string[]): any;\n  new (eventName: string, args?: string[]): any;\n}\n\n/**\n * Type of the HostListener metadata.\n *\n * @stable\n */\nexport interface HostListener {\n  eventName?: string;\n  args?: string[];\n}\n/**\n * HostListener decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const HostListener: HostListenerDecorator =\n    makePropDecorator('HostListener', [['eventName', undefined], ['args', []]]);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Provider} from '../di';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator} from '../util/decorators';\n\n/**\n * A wrapper around a module that also includes the providers.\n *\n * @stable\n */\nexport interface ModuleWithProviders {\n  ngModule: Type<any>;\n  providers?: Provider[];\n}\n\n/**\n * Interface for schema definitions in @NgModules.\n *\n * @experimental\n */\nexport interface SchemaMetadata { name: string; }\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n * \n * \\@stable\n */\nexport const CUSTOM_ELEMENTS_SCHEMA: SchemaMetadata = {\n  name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n * \n * \\@experimental\n */\nexport const NO_ERRORS_SCHEMA: SchemaMetadata = {\n  name: 'no-errors-schema'\n};\n\n\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * @stable\n */\nexport interface NgModuleDecorator {\n  /**\n   * Defines an NgModule.\n   */\n  (obj?: NgModule): TypeDecorator;\n  new (obj?: NgModule): NgModule;\n}\n\n/**\n * Type of the NgModule metadata.\n *\n * @stable\n */\nexport interface NgModule {\n  /**\n   * Defines the set of injectable objects that are available in the injector\n   * of this module.\n   *\n   * ## Simple Example\n   *\n   * Here is an example of a class that can be injected:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @NgModule({\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * Specifies a list of directives/pipes that belong to this module.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @NgModule({\n   *   declarations: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  declarations?: Array<Type<any>|any[]>;\n\n  /**\n   * Specifies a list of modules whose exported directives/pipes\n   * should be available to templates in this module.\n   * This can also contain {@link ModuleWithProviders}.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @NgModule({\n   *   imports: [CommonModule]\n   * })\n   * class MainModule {\n   * }\n   * ```\n   */\n  imports?: Array<Type<any>|ModuleWithProviders|any[]>;\n\n  /**\n   * Specifies a list of directives/pipes/modules that can be used within the template\n   * of any component that is part of an Angular module\n   * that imports this Angular module.\n   *\n   * ### Example\n   *\n   * ```javascript\n   * @NgModule({\n   *   exports: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  exports?: Array<Type<any>|any[]>;\n\n  /**\n   * Specifies a list of components that should be compiled when this module is defined.\n   * For each component listed here, Angular will create a {@link ComponentFactory}\n   * and store it in the {@link ComponentFactoryResolver}.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * Defines the components that should be bootstrapped when\n   * this module is bootstrapped. The components listed here\n   * will automatically be added to `entryComponents`.\n   */\n  bootstrap?: Array<Type<any>|any[]>;\n\n  /**\n   * Elements and properties that are not Angular components nor directives have to be declared in\n   * the schema.\n   *\n   * Available schemas:\n   * - `NO_ERRORS_SCHEMA`: any elements and properties are allowed,\n   * - `CUSTOM_ELEMENTS_SCHEMA`: any custom elements (tag name has \"-\") with any properties are\n   *   allowed.\n   *\n   * @security When using one of `NO_ERRORS_SCHEMA` or `CUSTOM_ELEMENTS_SCHEMA` we're trusting that\n   * allowed elements (and its properties) securely escape inputs.\n   */\n  schemas?: Array<SchemaMetadata|any[]>;\n\n  /**\n   * An opaque ID for this module, e.g. a name or a path. Used to identify modules in\n   * `getModuleFactory`. If left `undefined`, the `NgModule` will not be registered with\n   * `getModuleFactory`.\n   */\n  id?: string;\n}\n/**\n * NgModule decorator and metadata.\n * \n * \\@stable\n * \\@Annotation\n */\nexport const NgModule: NgModuleDecorator = <NgModuleDecorator>makeDecorator('NgModule', {\n  providers: undefined,\n  declarations: undefined,\n  imports: undefined,\n  exports: undefined,\n  entryComponents: undefined,\n  bootstrap: undefined,\n  schemas: undefined,\n  id: undefined,\n});","\nexport type ViewEncapsulation = number;\nexport let ViewEncapsulation: any = {};\nViewEncapsulation.Emulated = 0;\nViewEncapsulation.Native = 1;\nViewEncapsulation.None = 2;\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\n/**\n * Metadata properties available for configuring Views.\n * \n * For details on the `\\@Component` annotation, see {\\@link Component}.\n * \n * ### Example\n * \n * ```\n * \\@Component({ \n *   selector: 'greet',\n *   template: 'Hello {{name}}!',\n * })\n * class Greet {\n *   name: string;\n * \n *   constructor() {\n *     this.name = 'World';\n *   }\n * }\n * ```\n * \n * @deprecated Use Component instead.\n * \n * {\\@link Component}\n */\nexport class ViewMetadata {\n  /** {@link Component.templateUrl} */\n  templateUrl: string;\n  /** {@link Component.template} */\n  template: string;\n  /** {@link Component.stylesUrl} */\n  styleUrls: string[];\n  /** {@link Component.styles} */\n  styles: string[];\n  /** {@link Component.encapsulation} */\n  encapsulation: ViewEncapsulation;\n  /** {@link Component.animation} */\n  animations: any[];\n  /** {@link Component.interpolation} */\n  interpolation: [string, string];\n/**\n * @param {?=} __0\n */\nconstructor(\n      {templateUrl, template, encapsulation, styles, styleUrls, animations, interpolation}: {\n        templateUrl?: string,\n        template?: string,\n        encapsulation?: ViewEncapsulation,\n        styles?: string[],\n        styleUrls?: string[],\n        animations?: any[],\n        interpolation?: [string, string]\n      } = {}) {\n    this.templateUrl = templateUrl;\n    this.template = template;\n    this.styleUrls = styleUrls;\n    this.styles = styles;\n    this.encapsulation = encapsulation;\n    this.animations = animations;\n    this.interpolation = interpolation;\n  }\n}\n\nfunction ViewMetadata_tsickle_Closure_declarations() {\n/**\n * {\\@link Component.templateUrl}\n * @type {?}\n */\nViewMetadata.prototype.templateUrl;\n/**\n * {\\@link Component.template}\n * @type {?}\n */\nViewMetadata.prototype.template;\n/**\n * {\\@link Component.stylesUrl}\n * @type {?}\n */\nViewMetadata.prototype.styleUrls;\n/**\n * {\\@link Component.styles}\n * @type {?}\n */\nViewMetadata.prototype.styles;\n/**\n * {\\@link Component.encapsulation}\n * @type {?}\n */\nViewMetadata.prototype.encapsulation;\n/**\n * {\\@link Component.animation}\n * @type {?}\n */\nViewMetadata.prototype.animations;\n/**\n * {\\@link Component.interpolation}\n * @type {?}\n */\nViewMetadata.prototype.interpolation;\n}\n\n","\n/**\n * \\@whatItDoes Represents the version of Angular\n * \n * \\@stable\n */\nexport class Version {\n/**\n * @param {?} full\n */\nconstructor(public full: string) {}\n/**\n * @return {?}\n */\nget major(): string { return this.full.split('.')[0]; }\n/**\n * @return {?}\n */\nget minor(): string { return this.full.split('.')[1]; }\n/**\n * @return {?}\n */\nget patch(): string { return this.full.split('.').slice(2).join('.'); }\n}\n\nfunction Version_tsickle_Closure_declarations() {\n/** @type {?} */\nVersion.prototype.full;\n}\n\n/**\n * \\@stable\n */\nexport const VERSION = new Version('4.0.0-rc.6');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {InjectionToken} from './injection_token';\n\nconst /** @type {?} */ _THROW_IF_NOT_FOUND = new Object();\nexport const /** @type {?} */ THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nclass _NullInjector implements Injector {\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = _THROW_IF_NOT_FOUND): any {\n    if (notFoundValue === _THROW_IF_NOT_FOUND) {\n      throw new Error(`No provider for ${stringify(token)}!`);\n    }\n    return notFoundValue;\n  }\n}\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse \n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n * \n * \\@description \n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n * \n * ### Example\n * \n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n * \n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n * \n * \\@stable\n * @abstract\n */\nexport abstract class Injector {\n  static THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n  static NULL: Injector = new _NullInjector();\n/**\n * Retrieves an instance from the injector based on the provided token.\n * If not found:\n * - Throws {\\@link NoProviderError} if no `notFoundValue` that is not equal to\n * Injector.THROW_IF_NOT_FOUND is given\n * - Returns the `notFoundValue` otherwise\n * @abstract\n * @template T\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T) {}\n/**\n * @deprecated from v4.0.0 use Type<T> or InjectToken<T>\n * @suppress {duplicate}\n * @abstract\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue?: any) {}\n}\n\nfunction Injector_tsickle_Closure_declarations() {\n/** @type {?} */\nInjector.THROW_IF_NOT_FOUND;\n/** @type {?} */\nInjector.NULL;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {DebugContext} from './view/index';\n\nexport const /** @type {?} */ ERROR_TYPE = 'ngType';\nexport const /** @type {?} */ ERROR_COMPONENT_TYPE = 'ngComponentType';\nexport const /** @type {?} */ ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nexport const /** @type {?} */ ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nexport const /** @type {?} */ ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getType(error: Error): Function {\n  return ( /** @type {?} */((error as any)))[ERROR_TYPE];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getDebugContext(error: Error): DebugContext {\n  return ( /** @type {?} */((error as any)))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getOriginalError(error: Error): Error {\n  return ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getErrorLogger(error: Error): (console: Console, ...values: any[]) => void {\n  return ( /** @type {?} */((error as any)))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console: Console, ...values: any[]) {\n  ( /** @type {?} */((<any>console.error)))(...values);\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ERROR_ORIGINAL_ERROR, getDebugContext, getErrorLogger, getOriginalError} from './errors';\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n * \n * \\@description \n * \n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n * \n * ### Example\n * \n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n * \n * \\@NgModule({ \n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n * \n * \\@stable\n */\nexport class ErrorHandler {\n/**\n * \\@internal\n */\n_console: Console = console;\n/**\n * @param {?=} deprecatedParameter\n */\nconstructor(\n      /**\n       * @deprecated since v4.0 parameter no longer has an effect, as ErrorHandler will never\n       * rethrow.\n       */\n      deprecatedParameter?: boolean) {}\n/**\n * @param {?} error\n * @return {?}\n */\nhandleError(error: any): void {\n    const /** @type {?} */ originalError = this._findOriginalError(error);\n    const /** @type {?} */ context = this._findContext(error);\n    // Note: Browser consoles show the place from where console.error was called.\n    // We can use this to give users additional information about the error.\n    const /** @type {?} */ errorLogger = getErrorLogger(error);\n\n    errorLogger(this._console, `ERROR`, error);\n    if (originalError) {\n      errorLogger(this._console, `ORIGINAL ERROR`, originalError);\n    }\n    if (context) {\n      errorLogger(this._console, 'ERROR CONTEXT', context);\n    }\n  }\n/**\n * \\@internal\n * @param {?} error\n * @return {?}\n */\n_findContext(error: any): any {\n    if (error) {\n      return getDebugContext(error) ? getDebugContext(error) :\n                                      this._findContext(getOriginalError(error));\n    }\n\n    return null;\n  }\n/**\n * \\@internal\n * @param {?} error\n * @return {?}\n */\n_findOriginalError(error: Error): any {\n    let /** @type {?} */ e = getOriginalError(error);\n    while (e && getOriginalError(e)) {\n      e = getOriginalError(e);\n    }\n\n    return e;\n  }\n}\n\nfunction ErrorHandler_tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nErrorHandler.prototype._console;\n}\n\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nexport function wrappedError(message: string, originalError: any): Error {\n  const /** @type {?} */ msg =\n      `${message} caused by: ${originalError instanceof Error ? originalError.message: originalError }`;\n  const /** @type {?} */ error = Error(msg);\n  ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {stringify} from '../util';\nimport {resolveForwardRef} from './forward_ref';\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n * \n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n * \n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n * \n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * \\@experimental\n */\nexport class ReflectiveKey {\n/**\n * Private\n * @param {?} token\n * @param {?} id\n */\nconstructor(public token: Object,\npublic id: number) {\n    if (!token) {\n      throw new Error('Token must be defined!');\n    }\n  }\n/**\n * Returns a stringified token.\n * @return {?}\n */\nget displayName(): string { return stringify(this.token); }\n/**\n * Retrieves a `Key` for a token.\n * @param {?} token\n * @return {?}\n */\nstatic get(token: Object): ReflectiveKey {\n    return _globalKeyRegistry.get(resolveForwardRef(token));\n  }\n/**\n * @return {?} the number of keys registered in the system.\n */\nstatic get numberOfKeys(): number { return _globalKeyRegistry.numberOfKeys; }\n}\n\nfunction ReflectiveKey_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectiveKey.prototype.token;\n/** @type {?} */\nReflectiveKey.prototype.id;\n}\n\n/**\n * \\@internal\n */\nexport class KeyRegistry {\nprivate _allKeys = new Map<Object, ReflectiveKey>();\n/**\n * @param {?} token\n * @return {?}\n */\nget(token: Object): ReflectiveKey {\n    if (token instanceof ReflectiveKey) return token;\n\n    if (this._allKeys.has(token)) {\n      return this._allKeys.get(token);\n    }\n\n    const /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n    this._allKeys.set(token, newKey);\n    return newKey;\n  }\n/**\n * @return {?}\n */\nget numberOfKeys(): number { return this._allKeys.size; }\n}\n\nfunction KeyRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nKeyRegistry.prototype._allKeys;\n}\n\n\nconst /** @type {?} */ _globalKeyRegistry = new KeyRegistry();\n","\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n * \n * \\@description \n * \n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n * \n * \\@stable\n */\nexport const Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nexport function isType(v: any): v is Type<any> {\n  return typeof v === 'function';\n}\n\nexport interface Type<T> extends Function { new (...args: any[]): T; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type, isType} from '../type';\nimport {global, stringify} from '../util';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nexport const /** @type {?} */ DELEGATE_CTOR =\n    /^function\\s+\\S+\\(\\)\\s*{\\s*(\"use strict\";)?\\s*(return\\s+)?(\\S+\\s+!==\\s+null\\s+&&\\s+)?\\S+\\.apply\\(this,\\s*arguments\\)/;\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\nprivate _reflect: any;\n/**\n * @param {?=} reflect\n */\nconstructor(reflect?: any) { this._reflect = reflect || global['Reflect']; }\n/**\n * @return {?}\n */\nisReflectionEnabled(): boolean { return true; }\n/**\n * @template T\n * @param {?} t\n * @return {?}\n */\nfactory<T>(t: Type<T>): (args: any[]) => T { return (...args: any[]) => new t(...args); }\n/**\n * \\@internal\n * @param {?} paramTypes\n * @param {?} paramAnnotations\n * @return {?}\n */\n_zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let /** @type {?} */ result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (let /** @type {?} */ i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n/**\n * @param {?} type\n * @param {?} parentCtor\n * @return {?}\n */\nprivate _ownParameters(type: Type<any>, parentCtor: any): any[][] {\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(type.toString())) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>type))).parameters && ( /** @type {?} */((<any>type))).parameters !== parentCtor.parameters) {\n      return ( /** @type {?} */((<any>type))).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const /** @type {?} */ tsickleCtorParams = ( /** @type {?} */((<any>type))).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const /** @type {?} */ ctorParameters =\n          typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const /** @type {?} */ paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const /** @type {?} */ paramAnnotations = ctorParameters.map(\n          (ctorParam: any) =>\n              ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect != null && this._reflect.getOwnMetadata != null) {\n      const /** @type {?} */ paramAnnotations = this._reflect.getOwnMetadata('parameters', type);\n      const /** @type {?} */ paramTypes = this._reflect.getOwnMetadata('design:paramtypes', type);\n      if (paramTypes || paramAnnotations) {\n        return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n      }\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array(( /** @type {?} */((<any>type.length)))).fill(undefined);\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nparameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(type);\n    let /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} parentCtor\n * @return {?}\n */\nprivate _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[] {\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>typeOrFunc))).annotations && ( /** @type {?} */((<any>typeOrFunc))).annotations !== parentCtor.annotations) {\n      let /** @type {?} */ annotations = ( /** @type {?} */((<any>typeOrFunc))).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (( /** @type {?} */((<any>typeOrFunc))).decorators && ( /** @type {?} */((<any>typeOrFunc))).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata(( /** @type {?} */((<any>typeOrFunc))).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect && this._reflect.getOwnMetadata) {\n      return this._reflect.getOwnMetadata('annotations', typeOrFunc);\n    }\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n/**\n * @param {?} typeOrFunc\n * @param {?} parentCtor\n * @return {?}\n */\nprivate _ownPropMetadata(typeOrFunc: any, parentCtor: any): {[key: string]: any[]} {\n    // Prefer the direct API.\n    if (( /** @type {?} */((<any>typeOrFunc))).propMetadata &&\n        ( /** @type {?} */((<any>typeOrFunc))).propMetadata !== parentCtor.propMetadata) {\n      let /** @type {?} */ propMetadata = ( /** @type {?} */((<any>typeOrFunc))).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if (( /** @type {?} */((<any>typeOrFunc))).propDecorators &&\n        ( /** @type {?} */((<any>typeOrFunc))).propDecorators !== parentCtor.propDecorators) {\n      const /** @type {?} */ propDecorators = ( /** @type {?} */((<any>typeOrFunc))).propDecorators;\n      const /** @type {?} */ propMetadata = /** @type {?} */(( <{[key: string]: any[]}>{}));\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect && this._reflect.getOwnMetadata) {\n      return this._reflect.getOwnMetadata('propMetadata', typeOrFunc);\n    }\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n    const /** @type {?} */ propMetadata: {[key: string]: any[]} = {};\n    if (parentCtor !== Object) {\n      const /** @type {?} */ parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach((propName) => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach((propName) => {\n        const /** @type {?} */ decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn { return /** @type {?} */(( <GetterFn>new Function('o', 'return o.' + name + ';'))); }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn {\n    return /** @type {?} */(( <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;')));\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn {\n    const /** @type {?} */ functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return /** @type {?} */(( <MethodFn>new Function('o', 'args', functionBody)));\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n/**\n * @param {?} type\n * @return {?}\n */\nresourceUri(type: any): string { return `./${stringify(type)}`; }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return runtime;\n  }\n/**\n * @param {?} enumIdentifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(enumIdentifier: any, name: string): any { return enumIdentifier[name]; }\n}\n\nfunction ReflectionCapabilities_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectionCapabilities.prototype._reflect;\n}\n\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const /** @type {?} */ decoratorType = decoratorInvocation.type;\n    const /** @type {?} */ annotationCls = decoratorType.annotationCls;\n    const /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor: Function): Type<any> {\n  const /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n  const /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '../type';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {ReflectorReader} from './reflector_reader';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\nexport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nexport {GetterFn, MethodFn, SetterFn} from './types';\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport class Reflector extends ReflectorReader {\n/**\n * @param {?} reflectionCapabilities\n */\nconstructor(public reflectionCapabilities: PlatformReflectionCapabilities) { super(); }\n/**\n * @param {?} caps\n * @return {?}\n */\nupdateCapabilities(caps: PlatformReflectionCapabilities) { this.reflectionCapabilities = caps; }\n/**\n * @param {?} type\n * @return {?}\n */\nfactory(type: Type<any>): Function { return this.reflectionCapabilities.factory(type); }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nparameters(typeOrFunc: Type<any>): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nannotations(typeOrFunc: Type<any>): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\npropMetadata(typeOrFunc: Type<any>): {[key: string]: any[]} {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n/**\n * @param {?} type\n * @param {?} lcProperty\n * @return {?}\n */\nhasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n/**\n * @param {?} name\n * @return {?}\n */\ngetter(name: string): GetterFn { return this.reflectionCapabilities.getter(name); }\n/**\n * @param {?} name\n * @return {?}\n */\nsetter(name: string): SetterFn { return this.reflectionCapabilities.setter(name); }\n/**\n * @param {?} name\n * @return {?}\n */\nmethod(name: string): MethodFn { return this.reflectionCapabilities.method(name); }\n/**\n * @param {?} type\n * @return {?}\n */\nimportUri(type: any): string { return this.reflectionCapabilities.importUri(type); }\n/**\n * @param {?} type\n * @return {?}\n */\nresourceUri(type: any): string { return this.reflectionCapabilities.resourceUri(type); }\n/**\n * @param {?} name\n * @param {?} moduleUrl\n * @param {?} members\n * @param {?} runtime\n * @return {?}\n */\nresolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n  }\n/**\n * @param {?} identifier\n * @param {?} name\n * @return {?}\n */\nresolveEnum(identifier: any, name: string): any {\n    return this.reflectionCapabilities.resolveEnum(identifier, name);\n  }\n}\n\nfunction Reflector_tsickle_Closure_declarations() {\n/** @type {?} */\nReflector.prototype.reflectionCapabilities;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ReflectionCapabilities} from './reflection_capabilities';\nimport {Reflector} from './reflector';\n\nexport {Reflector} from './reflector';\n\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nexport const /** @type {?} */ reflector = new Reflector(new ReflectionCapabilities());\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {reflector} from '../reflection/reflection';\nimport {Type} from '../type';\n\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\nimport {ClassProvider, ExistingProvider, FactoryProvider, Provider, TypeProvider, ValueProvider} from './provider';\nimport {invalidProviderError, mixingMultiProvidersWithRegularProvidersError, noAnnotationError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\n\n\ninterface NormalizedProvider extends TypeProvider, ValueProvider, ClassProvider, ExistingProvider,\n    FactoryProvider {}\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nexport class ReflectiveDependency {\n/**\n * @param {?} key\n * @param {?} optional\n * @param {?} visibility\n */\nconstructor(\npublic key: ReflectiveKey,\npublic optional: boolean,\npublic visibility: Self|SkipSelf) {}\n/**\n * @param {?} key\n * @return {?}\n */\nstatic fromKey(key: ReflectiveKey): ReflectiveDependency {\n    return new ReflectiveDependency(key, false, null);\n  }\n}\n\nfunction ReflectiveDependency_tsickle_Closure_declarations() {\n/** @type {?} */\nReflectiveDependency.prototype.key;\n/** @type {?} */\nReflectiveDependency.prototype.optional;\n/** @type {?} */\nReflectiveDependency.prototype.visibility;\n}\n\n\nconst /** @type {?} */ _EMPTY_LIST: any[] = [];\n\n/**\n * An internal resolved representation of a {@link Provider} used by the {@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * @experimental\n */\nexport interface ResolvedReflectiveProvider {\n  /**\n   * A key, usually a `Type<any>`.\n   */\n  key: ReflectiveKey;\n\n  /**\n   * Factory function which can return an instance of an object represented by a key.\n   */\n  resolvedFactories: ResolvedReflectiveFactory[];\n\n  /**\n   * Indicates if the provider is a multi-provider or a regular provider.\n   */\n  multiProvider: boolean;\n}\nexport class ResolvedReflectiveProvider_ implements ResolvedReflectiveProvider {\n/**\n * @param {?} key\n * @param {?} resolvedFactories\n * @param {?} multiProvider\n */\nconstructor(\npublic key: ReflectiveKey,\npublic resolvedFactories: ResolvedReflectiveFactory[],\npublic multiProvider: boolean) {}\n/**\n * @return {?}\n */\nget resolvedFactory(): ResolvedReflectiveFactory { return this.resolvedFactories[0]; }\n}\n\nfunction ResolvedReflectiveProvider__tsickle_Closure_declarations() {\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.key;\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.resolvedFactories;\n/** @type {?} */\nResolvedReflectiveProvider_.prototype.multiProvider;\n}\n\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nexport class ResolvedReflectiveFactory {\n/**\n * @param {?} factory\n * @param {?} dependencies\n */\nconstructor(\npublic factory: Function,\npublic dependencies: ReflectiveDependency[]) {}\n}\n\nfunction ResolvedReflectiveFactory_tsickle_Closure_declarations() {\n/**\n * Factory function which can return an instance of an object represented by a key.\n * @type {?}\n */\nResolvedReflectiveFactory.prototype.factory;\n/**\n * Arguments (dependencies) to the `factory` function.\n * @type {?}\n */\nResolvedReflectiveFactory.prototype.dependencies;\n}\n\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider: NormalizedProvider): ResolvedReflectiveFactory {\n  let /** @type {?} */ factoryFn: Function;\n  let /** @type {?} */ resolvedDeps: ReflectiveDependency[];\n  if (provider.useClass) {\n    const /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n    factoryFn = reflector.factory(useClass);\n    resolvedDeps = _dependenciesFor(useClass);\n  } else if (provider.useExisting) {\n    factoryFn = (aliasInstance: any) => aliasInstance;\n    resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n  } else if (provider.useFactory) {\n    factoryFn = provider.useFactory;\n    resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n  } else {\n    factoryFn = () => provider.useValue;\n    resolvedDeps = _EMPTY_LIST;\n  }\n  return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n * \n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider: NormalizedProvider): ResolvedReflectiveProvider {\n  return new ResolvedReflectiveProvider_(\n      ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nexport function resolveReflectiveProviders(providers: Provider[]): ResolvedReflectiveProvider[] {\n  const /** @type {?} */ normalized = _normalizeProviders(providers, []);\n  const /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n  const /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n  return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nexport function mergeResolvedReflectiveProviders(\n    providers: ResolvedReflectiveProvider[],\n    normalizedProvidersMap: Map<number, ResolvedReflectiveProvider>):\n    Map<number, ResolvedReflectiveProvider> {\n  for (let /** @type {?} */ i = 0; i < providers.length; i++) {\n    const /** @type {?} */ provider = providers[i];\n    const /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n    if (existing) {\n      if (provider.multiProvider !== existing.multiProvider) {\n        throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n      }\n      if (provider.multiProvider) {\n        for (let /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n          existing.resolvedFactories.push(provider.resolvedFactories[j]);\n        }\n      } else {\n        normalizedProvidersMap.set(provider.key.id, provider);\n      }\n    } else {\n      let /** @type {?} */ resolvedProvider: ResolvedReflectiveProvider;\n      if (provider.multiProvider) {\n        resolvedProvider = new ResolvedReflectiveProvider_(\n            provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n      } else {\n        resolvedProvider = provider;\n      }\n      normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n    }\n  }\n  return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers: Provider[], res: Provider[]): Provider[] {\n  providers.forEach(b => {\n    if (b instanceof Type) {\n      res.push({provide: b, useClass: b});\n\n    } else if (b && typeof b == 'object' && ( /** @type {?} */((b as any))).provide !== undefined) {\n      res.push( /** @type {?} */((b as NormalizedProvider)));\n\n    } else if (b instanceof Array) {\n      _normalizeProviders(b, res);\n\n    } else {\n      throw invalidProviderError(b);\n    }\n  });\n\n  return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} dependencies\n * @return {?}\n */\nexport function constructDependencies(\n    typeOrFunc: any, dependencies: any[]): ReflectiveDependency[] {\n  if (!dependencies) {\n    return _dependenciesFor(typeOrFunc);\n  } else {\n    const /** @type {?} */ params: any[][] = dependencies.map(t => [t]);\n    return dependencies.map(t => _extractToken(typeOrFunc, t, params));\n  }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc: any): ReflectiveDependency[] {\n  const /** @type {?} */ params = reflector.parameters(typeOrFunc);\n\n  if (!params) return [];\n  if (params.some(p => p == null)) {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n  return params.map(p => _extractToken(typeOrFunc, p, params));\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(\n    typeOrFunc: any, metadata: any[] | any, params: any[][]): ReflectiveDependency {\n  let /** @type {?} */ token: any = null;\n  let /** @type {?} */ optional = false;\n\n  if (!Array.isArray(metadata)) {\n    if (metadata instanceof Inject) {\n      return _createDependency(metadata['token'], optional, null);\n    } else {\n      return _createDependency(metadata, optional, null);\n    }\n  }\n\n  let /** @type {?} */ visibility: Self|SkipSelf = null;\n\n  for (let /** @type {?} */ i = 0; i < metadata.length; ++i) {\n    const /** @type {?} */ paramMetadata = metadata[i];\n\n    if (paramMetadata instanceof Type) {\n      token = paramMetadata;\n\n    } else if (paramMetadata instanceof Inject) {\n      token = paramMetadata['token'];\n\n    } else if (paramMetadata instanceof Optional) {\n      optional = true;\n\n    } else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n      visibility = paramMetadata;\n    } else if (paramMetadata instanceof InjectionToken) {\n      token = paramMetadata;\n    }\n  }\n\n  token = resolveForwardRef(token);\n\n  if (token != null) {\n    return _createDependency(token, optional, visibility);\n  } else {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(\n    token: any, optional: boolean, visibility: Self | SkipSelf): ReflectiveDependency {\n  return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector, THROW_IF_NOT_FOUND} from './injector';\nimport {Self, SkipSelf} from './metadata';\nimport {Provider} from './provider';\nimport {cyclicDependencyError, instantiationError, noProviderError, outOfBoundsError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\nimport {ReflectiveDependency, ResolvedReflectiveFactory, ResolvedReflectiveProvider, resolveReflectiveProviders} from './reflective_provider';\n\n// Threshold for the dynamic version\nconst /** @type {?} */ UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n * \n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n * \n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n * \n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n * \n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n * \n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class ReflectiveInjector implements Injector {\n/**\n * Turns an array of provider definitions into an array of resolved providers.\n * \n * A resolution is a process of flattening multiple nested arrays and converting individual\n * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n * \n * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n * \n * expect(providers.length).toEqual(2);\n * \n * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n * expect(providers[0].key.displayName).toBe(\"Car\");\n * expect(providers[0].dependencies.length).toEqual(1);\n * expect(providers[0].factory).toBeDefined();\n * \n * expect(providers[1].key.displayName).toBe(\"Engine\");\n * });\n * ```\n * \n * See {\\@link ReflectiveInjector#fromResolvedProviders} for more info.\n * @param {?} providers\n * @return {?}\n */\nstatic resolve(providers: Provider[]): ResolvedReflectiveProvider[] {\n    return resolveReflectiveProviders(providers);\n  }\n/**\n * Resolves an array of providers and creates an injector from those providers.\n * \n * The passed-in providers can be an array of `Type`, {\\@link Provider},\n * or a recursive array of more providers.\n * \n * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * expect(injector.get(Car) instanceof Car).toBe(true);\n * ```\n * \n * This function is slower than the corresponding `fromResolvedProviders`\n * because it needs to resolve the passed-in providers first.\n * See {\\@link Injector#resolve} and {\\@link Injector#fromResolvedProviders}.\n * @param {?} providers\n * @param {?=} parent\n * @return {?}\n */\nstatic resolveAndCreate(providers: Provider[], parent: Injector = null): ReflectiveInjector {\n    const /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n  }\n/**\n * Creates an injector from previously resolved providers.\n * \n * This API is the recommended way to construct injectors in performance-sensitive parts.\n * \n * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var providers = ReflectiveInjector.resolve([Car, Engine]);\n * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n * expect(injector.get(Car) instanceof Car).toBe(true);\n * ```\n * \\@experimental\n * @param {?} providers\n * @param {?=} parent\n * @return {?}\n */\nstatic fromResolvedProviders(providers: ResolvedReflectiveProvider[], parent: Injector = null):\n      ReflectiveInjector {\n    return new ReflectiveInjector_(providers, parent);\n  }\n/**\n * Parent of this injector.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * ### Example ([live demo](http://plnkr.co/edit/eosMGo?p=preview))\n * \n * ```typescript\n * var parent = ReflectiveInjector.resolveAndCreate([]);\n * var child = parent.resolveAndCreateChild([]);\n * expect(child.parent).toBe(parent);\n * ```\n * @abstract\n * @return {?}\n */\nparent() {}\n/**\n * Resolves an array of providers and creates a child injector from those providers.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * The passed-in providers can be an array of `Type`, {\\@link Provider},\n * or a recursive array of more providers.\n * \n * ### Example ([live demo](http://plnkr.co/edit/opB3T4?p=preview))\n * \n * ```typescript\n * class ParentProvider {}\n * class ChildProvider {}\n * \n * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n * var child = parent.resolveAndCreateChild([ChildProvider]);\n * \n * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n * ```\n * \n * This function is slower than the corresponding `createChildFromResolved`\n * because it needs to resolve the passed-in providers first.\n * See {\\@link Injector#resolve} and {\\@link Injector#createChildFromResolved}.\n * @abstract\n * @param {?} providers\n * @return {?}\n */\nresolveAndCreateChild(providers: Provider[]) {}\n/**\n * Creates a child injector from previously resolved providers.\n * \n * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n * -->\n * \n * This API is the recommended way to construct injectors in performance-sensitive parts.\n * \n * ### Example ([live demo](http://plnkr.co/edit/VhyfjN?p=preview))\n * \n * ```typescript\n * class ParentProvider {}\n * class ChildProvider {}\n * \n * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n * \n * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n * var child = parent.createChildFromResolved(childProviders);\n * \n * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n * ```\n * @abstract\n * @param {?} providers\n * @return {?}\n */\ncreateChildFromResolved(providers: ResolvedReflectiveProvider[]) {}\n/**\n * Resolves a provider and instantiates an object in the context of the injector.\n * \n * The created object does not get cached by the injector.\n * \n * ### Example ([live demo](http://plnkr.co/edit/yvVXoB?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n * \n * var car = injector.resolveAndInstantiate(Car);\n * expect(car.engine).toBe(injector.get(Engine));\n * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n * ```\n * @abstract\n * @param {?} provider\n * @return {?}\n */\nresolveAndInstantiate(provider: Provider) {}\n/**\n * Instantiates an object using a resolved provider in the context of the injector.\n * \n * The created object does not get cached by the injector.\n * \n * ### Example ([live demo](http://plnkr.co/edit/ptCImQ?p=preview))\n * \n * ```typescript\n * \\@Injectable() \n * class Engine {\n * }\n * \n * \\@Injectable() \n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n * \n * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n * var carProvider = ReflectiveInjector.resolve([Car])[0];\n * var car = injector.instantiateResolved(carProvider);\n * expect(car.engine).toBe(injector.get(Engine));\n * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n * ```\n * @abstract\n * @param {?} provider\n * @return {?}\n */\ninstantiateResolved(provider: ResolvedReflectiveProvider) {}\n/**\n * @abstract\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue?: any) {}\n}\nexport class ReflectiveInjector_ implements ReflectiveInjector {\n/**\n * \\@internal\n */\n_constructionCounter: number = 0;\n/**\n * \\@internal\n */\npublic _providers: ResolvedReflectiveProvider[];\n/**\n * \\@internal\n */\npublic _parent: Injector;\n\n  keyIds: number[];\n  objs: any[];\n/**\n * Private\n * @param {?} _providers\n * @param {?=} _parent\n */\nconstructor(_providers: ResolvedReflectiveProvider[], _parent: Injector = null) {\n    this._providers = _providers;\n    this._parent = _parent;\n\n    const len = _providers.length;\n\n    this.keyIds = new Array(len);\n    this.objs = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.keyIds[i] = _providers[i].key.id;\n      this.objs[i] = UNDEFINED;\n    }\n  }\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n  }\n/**\n * @return {?}\n */\nget parent(): Injector { return this._parent; }\n/**\n * @param {?} providers\n * @return {?}\n */\nresolveAndCreateChild(providers: Provider[]): ReflectiveInjector {\n    const /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return this.createChildFromResolved(ResolvedReflectiveProviders);\n  }\n/**\n * @param {?} providers\n * @return {?}\n */\ncreateChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector {\n    const /** @type {?} */ inj = new ReflectiveInjector_(providers);\n    inj._parent = this;\n    return inj;\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\nresolveAndInstantiate(provider: Provider): any {\n    return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n  }\n/**\n * @param {?} provider\n * @return {?}\n */\ninstantiateResolved(provider: ResolvedReflectiveProvider): any {\n    return this._instantiateProvider(provider);\n  }\n/**\n * @param {?} index\n * @return {?}\n */\ngetProviderAtIndex(index: number): ResolvedReflectiveProvider {\n    if (index < 0 || index >= this._providers.length) {\n      throw outOfBoundsError(index);\n    }\n    return this._providers[index];\n  }\n/**\n * \\@internal\n * @param {?} provider\n * @return {?}\n */\n_new(provider: ResolvedReflectiveProvider): any {\n    if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n      throw cyclicDependencyError(this, provider.key);\n    }\n    return this._instantiateProvider(provider);\n  }\n/**\n * @return {?}\n */\nprivate _getMaxNumberOfObjects(): number { return this.objs.length; }\n/**\n * @param {?} provider\n * @return {?}\n */\nprivate _instantiateProvider(provider: ResolvedReflectiveProvider): any {\n    if (provider.multiProvider) {\n      const /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n      for (let /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n        res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n      }\n      return res;\n    } else {\n      return this._instantiate(provider, provider.resolvedFactories[0]);\n    }\n  }\n/**\n * @param {?} provider\n * @param {?} ResolvedReflectiveFactory\n * @return {?}\n */\nprivate _instantiate(\n      provider: ResolvedReflectiveProvider,\n      ResolvedReflectiveFactory: ResolvedReflectiveFactory): any {\n    const /** @type {?} */ factory = ResolvedReflectiveFactory.factory;\n\n    let /** @type {?} */ deps: any[];\n    try {\n      deps =\n          ResolvedReflectiveFactory.dependencies.map(dep => this._getByReflectiveDependency(dep));\n    } catch ( /** @type {?} */e) {\n      if (e.addKey) {\n        e.addKey(this, provider.key);\n      }\n      throw e;\n    }\n\n    let /** @type {?} */ obj: any;\n    try {\n      obj = factory(...deps);\n    } catch ( /** @type {?} */e) {\n      throw instantiationError(this, e, e.stack, provider.key);\n    }\n\n    return obj;\n  }\n/**\n * @param {?} dep\n * @return {?}\n */\nprivate _getByReflectiveDependency(dep: ReflectiveDependency): any {\n    return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n  }\n/**\n * @param {?} key\n * @param {?} visibility\n * @param {?} notFoundValue\n * @return {?}\n */\nprivate _getByKey(key: ReflectiveKey, visibility: Self|SkipSelf, notFoundValue: any): any {\n    if (key === INJECTOR_KEY) {\n      return this;\n    }\n\n    if (visibility instanceof Self) {\n      return this._getByKeySelf(key, notFoundValue);\n\n    } else {\n      return this._getByKeyDefault(key, notFoundValue, visibility);\n    }\n  }\n/**\n * @param {?} keyId\n * @return {?}\n */\nprivate _getObjByKeyId(keyId: number): any {\n    for (let /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n      if (this.keyIds[i] === keyId) {\n        if (this.objs[i] === UNDEFINED) {\n          this.objs[i] = this._new(this._providers[i]);\n        }\n\n        return this.objs[i];\n      }\n    }\n\n    return UNDEFINED;\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @return {?}\n */\n_throwOrNull(key: ReflectiveKey, notFoundValue: any): any {\n    if (notFoundValue !== THROW_IF_NOT_FOUND) {\n      return notFoundValue;\n    } else {\n      throw noProviderError(this, key);\n    }\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @return {?}\n */\n_getByKeySelf(key: ReflectiveKey, notFoundValue: any): any {\n    const /** @type {?} */ obj = this._getObjByKeyId(key.id);\n    return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n  }\n/**\n * \\@internal\n * @param {?} key\n * @param {?} notFoundValue\n * @param {?} visibility\n * @return {?}\n */\n_getByKeyDefault(key: ReflectiveKey, notFoundValue: any, visibility: Self|SkipSelf): any {\n    let /** @type {?} */ inj: Injector;\n\n    if (visibility instanceof SkipSelf) {\n      inj = this._parent;\n    } else {\n      inj = this;\n    }\n\n    while (inj instanceof ReflectiveInjector_) {\n      const /** @type {?} */ inj_ = /** @type {?} */(( <ReflectiveInjector_>inj));\n      const /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n      if (obj !== UNDEFINED) return obj;\n      inj = inj_._parent;\n    }\n    if (inj !== null) {\n      return inj.get(key.token, notFoundValue);\n    } else {\n      return this._throwOrNull(key, notFoundValue);\n    }\n  }\n/**\n * @return {?}\n */\nget displayName(): string {\n    const /** @type {?} */ providers =\n        _mapProviders(this, (b: ResolvedReflectiveProvider) => ' \"' + b.key.displayName + '\" ')\n            .join(', ');\n    return `ReflectiveInjector(providers: [${providers}])`;\n  }\n/**\n * @return {?}\n */\ntoString(): string { return this.displayName; }\n}\n\nfunction ReflectiveInjector__tsickle_Closure_declarations() {\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._constructionCounter;\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._providers;\n/**\n * \\@internal\n * @type {?}\n */\nReflectiveInjector_.prototype._parent;\n/** @type {?} */\nReflectiveInjector_.prototype.keyIds;\n/** @type {?} */\nReflectiveInjector_.prototype.objs;\n}\n\n\nconst /** @type {?} */ INJECTOR_KEY = ReflectiveKey.get(Injector);\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector: ReflectiveInjector_, fn: Function): any[] {\n  const /** @type {?} */ res: any[] = new Array(injector._providers.length);\n  for (let /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n    res[i] = fn(injector.getProviderAtIndex(i));\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {isPromise} from '../src/util/lang';\n\nimport {Inject, Injectable, InjectionToken, Optional} from './di';\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nexport const APP_INITIALIZER = new InjectionToken<Array<() => void>>('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n * \n * \\@experimental\n */\nexport class ApplicationInitStatus {\nprivate _donePromise: Promise<any>;\nprivate _done = false;\n/**\n * @param {?} appInits\n */\nconstructor(  appInits: (() => any)[]) {\n    const asyncInitPromises: Promise<any>[] = [];\n    if (appInits) {\n      for (let i = 0; i < appInits.length; i++) {\n        const initResult = appInits[i]();\n        if (isPromise(initResult)) {\n          asyncInitPromises.push(initResult);\n        }\n      }\n    }\n    this._donePromise = Promise.all(asyncInitPromises).then(() => { this._done = true; });\n    if (asyncInitPromises.length === 0) {\n      this._done = true;\n    }\n  }\n/**\n * @return {?}\n */\nget done(): boolean { return this._done; }\n/**\n * @return {?}\n */\nget donePromise(): Promise<any> { return this._donePromise; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER, ] }, { type: Optional }, ]},\n];\n}\n\nfunction ApplicationInitStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nApplicationInitStatus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nApplicationInitStatus.ctorParameters;\n/** @type {?} */\nApplicationInitStatus.prototype._donePromise;\n/** @type {?} */\nApplicationInitStatus.prototype._done;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from './di';\nimport {ComponentRef} from './linker/component_factory';\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated} is being used.\n * \n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nexport const APP_ID = new InjectionToken<string>('AppId');\n/**\n * @return {?}\n */\nexport function _appIdRandomProviderFactory() {\n  return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nexport const APP_ID_RANDOM_PROVIDER = {\n  provide: APP_ID,\n  useFactory: _appIdRandomProviderFactory,\n  deps: <any[]>[],\n};\n/**\n * @return {?}\n */\nfunction _randomChar(): string {\n  return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nexport const PLATFORM_INITIALIZER = new InjectionToken<Array<() => void>>('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nexport const PLATFORM_ID = new InjectionToken<Object>('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n * \n * `(componentRef: ComponentRef) => void`.\n * \n * \\@experimental\n */\nexport const APP_BOOTSTRAP_LISTENER =\n    new InjectionToken<Array<(compRef: ComponentRef<any>) => void>>('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nexport const PACKAGE_ROOT_URL = new InjectionToken<string>('Application Packages Root URL');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from './di';\nexport class Console {\n/**\n * @param {?} message\n * @return {?}\n */\nlog(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.log(message);\n  }\n/**\n * @param {?} message\n * @return {?}\n */\nwarn(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.warn(message);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Console_tsickle_Closure_declarations() {\n/** @type {?} */\nConsole.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nConsole.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, InjectionToken} from '../di';\nimport {MissingTranslationStrategy} from '../i18n/tokens';\nimport {ViewEncapsulation} from '../metadata';\nimport {Type} from '../type';\n\nimport {ComponentFactory} from './component_factory';\nimport {NgModuleFactory} from './ng_module_factory';\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n * \n * \\@experimental\n */\nexport class ModuleWithComponentFactories<T> {\n/**\n * @param {?} ngModuleFactory\n * @param {?} componentFactories\n */\nconstructor(\npublic ngModuleFactory: NgModuleFactory<T>,\npublic componentFactories: ComponentFactory<any>[]) {}\n}\n\nfunction ModuleWithComponentFactories_tsickle_Closure_declarations() {\n/** @type {?} */\nModuleWithComponentFactories.prototype.ngModuleFactory;\n/** @type {?} */\nModuleWithComponentFactories.prototype.componentFactories;\n}\n\n/**\n * @return {?}\n */\nfunction _throwError() {\n  throw new Error(`Runtime compiler is not loaded`);\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n * \n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nexport class Compiler {\n/**\n * Compiles the given NgModule and all of its components. All templates of the components listed\n * in `entryComponents` have to be inlined.\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T> { throw _throwError(); }\n/**\n * Compiles the given NgModule and all of its components\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> { throw _throwError(); }\n/**\n * Same as {\\@link compileModuleSync} but also creates ComponentFactories for all components.\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T> {\n    throw _throwError();\n  }\n/**\n * Same as {\\@link compileModuleAsync} but also creates ComponentFactories for all components.\n * @template T\n * @param {?} moduleType\n * @return {?}\n */\ncompileModuleAndAllComponentsAsync<T>(moduleType: Type<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    throw _throwError();\n  }\n/**\n * Exposes the CSS-style selectors that have been used in `ngContent` directives within\n * the template of the given component.\n * This is used by the `upgrade` library to compile the appropriate transclude content\n * in the AngularJS wrapper component.\n * \n * @deprecated since v4. Use ComponentFactory.ngContentSelectors instead.\n * @param {?} component\n * @return {?}\n */\ngetNgContentSelectors(component: Type<any>): string[] { throw _throwError(); }\n/**\n * Clears all caches.\n * @return {?}\n */\nclearCache(): void {}\n/**\n * Clears the cache for the given component/ngModule.\n * @param {?} type\n * @return {?}\n */\nclearCacheFor(type: Type<any>) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Compiler_tsickle_Closure_declarations() {\n/** @type {?} */\nCompiler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCompiler.ctorParameters;\n}\n\n\n/**\n * Options for creating a compiler\n *\n * @experimental\n */\nexport type CompilerOptions = {\n  /**\n   * @deprecated since v4 this option has no effect anymore.\n   */\n  useDebug?: boolean,\n  useJit?: boolean,\n  defaultEncapsulation?: ViewEncapsulation,\n  providers?: any[],\n  missingTranslation?: MissingTranslationStrategy,\n  // Whether to support the `<template>` tag and the `template` attribute to define angular\n  // templates. They have been deprecated in 4.x, `<ng-template>` should be used instead.\n  enableLegacyTemplate?: boolean,\n};\n/**\n * Token to provide CompilerOptions in the platform injector.\n * \n * \\@experimental\n */\nexport const COMPILER_OPTIONS = new InjectionToken<CompilerOptions[]>('compilerOptions');\n/**\n * A factory for creating a Compiler\n * \n * \\@experimental\n * @abstract\n */\nexport abstract class CompilerFactory {\n/**\n * @abstract\n * @param {?=} options\n * @return {?}\n */\ncreateCompiler(options?: CompilerOptions[]) {}\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {ViewRef} from './view_ref';\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n * \n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentRef<C> {\n/**\n * Location of the Host Element of this Component Instance.\n * @abstract\n * @return {?}\n */\nlocation() {}\n/**\n * The injector on which the component instance exists.\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * The instance of the Component.\n * @abstract\n * @return {?}\n */\ninstance() {}\n/**\n * The {\\@link ViewRef} of the Host View of this Component instance.\n * @abstract\n * @return {?}\n */\nhostView() {}\n/**\n * The {\\@link ChangeDetectorRef} of the Component instance.\n * @abstract\n * @return {?}\n */\nchangeDetectorRef() {}\n/**\n * The component type.\n * @abstract\n * @return {?}\n */\ncomponentType() {}\n/**\n * Destroys the component instance and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * Allows to register a callback that will be called when the component is destroyed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: Function) {}\n}\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentFactory<C> {\n/**\n * @abstract\n * @return {?}\n */\nselector() {}\n/**\n * @abstract\n * @return {?}\n */\ncomponentType() {}\n/**\n * selector for all <ng-content> elements in the component.\n * @abstract\n * @return {?}\n */\nngContentSelectors() {}\n/**\n * the inputs of the component.\n * @abstract\n * @return {?}\n */\ninputs() {}\n/**\n * the outputs of the component.\n * @abstract\n * @return {?}\n */\noutputs() {}\n/**\n * Creates a new component.\n * @abstract\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {NgModuleRef} from './ng_module_factory';\n/**\n * @param {?} component\n * @return {?}\n */\nexport function noComponentFactoryError(component: Function) {\n  const /** @type {?} */ error = Error(\n      `No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n  ( /** @type {?} */((error as any)))[ERROR_COMPONENT] = component;\n  return error;\n}\n\nconst /** @type {?} */ ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\nexport function getComponent(error: Error): Type<any> {\n  return ( /** @type {?} */((error as any)))[ERROR_COMPONENT];\n}\nclass _NullComponentFactoryResolver implements ComponentFactoryResolver {\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    throw noComponentFactoryError(component);\n  }\n}\n/**\n * \\@stable\n * @abstract\n */\nexport abstract class ComponentFactoryResolver {\n  static NULL: ComponentFactoryResolver = new _NullComponentFactoryResolver();\n/**\n * @abstract\n * @template T\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: Type<T>) {}\n}\n\nfunction ComponentFactoryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryResolver.NULL;\n}\n\nexport class CodegenComponentFactoryResolver implements ComponentFactoryResolver {\nprivate _factories = new Map<any, ComponentFactory<any>>();\n/**\n * @param {?} factories\n * @param {?} _parent\n * @param {?} _ngModule\n */\nconstructor(\n      factories: ComponentFactory<any>[],\nprivate _parent: ComponentFactoryResolver,\nprivate _ngModule: NgModuleRef<any>) {\n    for (let i = 0; i < factories.length; i++) {\n      const factory = factories[i];\n      this._factories.set(factory.componentType, factory);\n    }\n  }\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nresolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    let /** @type {?} */ factory = this._factories.get(component) || this._parent.resolveComponentFactory(component);\n\n    return factory ? new ComponentFactoryBoundToModule(factory, this._ngModule) : null;\n  }\n}\n\nfunction CodegenComponentFactoryResolver_tsickle_Closure_declarations() {\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._factories;\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._parent;\n/** @type {?} */\nCodegenComponentFactoryResolver.prototype._ngModule;\n}\n\nexport class ComponentFactoryBoundToModule<C> extends ComponentFactory<C> {\n/**\n * @param {?} factory\n * @param {?} ngModule\n */\nconstructor(private factory: ComponentFactory<C>,\nprivate ngModule: NgModuleRef<any>) { super(); }\n/**\n * @return {?}\n */\nget selector() { return this.factory.selector; }\n/**\n * @return {?}\n */\nget componentType() { return this.factory.componentType; }\n/**\n * @return {?}\n */\nget ngContentSelectors() { return this.factory.ngContentSelectors; }\n/**\n * @return {?}\n */\nget inputs() { return this.factory.inputs; }\n/**\n * @return {?}\n */\nget outputs() { return this.factory.outputs; }\n/**\n * @param {?} injector\n * @param {?=} projectableNodes\n * @param {?=} rootSelectorOrNode\n * @param {?=} ngModule\n * @return {?}\n */\ncreate(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C> {\n    return this.factory.create(\n        injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n  }\n}\n\nfunction ComponentFactoryBoundToModule_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentFactoryBoundToModule.prototype.factory;\n/** @type {?} */\nComponentFactoryBoundToModule.prototype.ngModule;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {global} from '../util';\n\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * @experimental\n */\nexport interface WtfScopeFn { (arg0?: any, arg1?: any): any; }\n\ninterface WTF {\n  trace: Trace;\n}\n\ninterface Trace {\n  events: Events;\n  leaveScope(scope: Scope, returnValue: any): any /** TODO #9100 */;\n  beginTimeRange(rangeType: string, action: string): Range;\n  endTimeRange(range: Range): any /** TODO #9100 */;\n}\n\nexport interface Range {}\n\ninterface Events {\n  createScope(signature: string, flags: any): Scope;\n}\n\nexport interface Scope { (...args: any[] /** TODO #9100 */): any; }\n\nlet /** @type {?} */ trace: Trace;\nlet /** @type {?} */ events: Events;\n/**\n * @return {?}\n */\nexport function detectWTF(): boolean {\n  const /** @type {?} */ wtf: WTF = ( /** @type {?} */((global as any)) /** TODO #9100 */)['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nexport function createScope(signature: string, flags: any = null): any {\n  return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nexport function leave<T>(scope: Scope, returnValue?: T): T {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nexport function startTimeRange(rangeType: string, action: string): Range {\n  return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nexport function endTimeRange(range: Range): void {\n  trace.endTimeRange(range);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector, THROW_IF_NOT_FOUND} from '../di/injector';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ComponentFactory} from './component_factory';\nimport {CodegenComponentFactoryResolver, ComponentFactoryBoundToModule, ComponentFactoryResolver} from './component_factory_resolver';\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n * \n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n * \n * \\@stable\n * @abstract\n */\nexport abstract class NgModuleRef<T> {\n/**\n * The injector that contains all of the providers of the NgModule.\n * @abstract\n * @return {?}\n */\ninjector() {}\n/**\n * The ComponentFactoryResolver to get hold of the ComponentFactories\n * declared in the `entryComponents` property of the module.\n * @abstract\n * @return {?}\n */\ncomponentFactoryResolver() {}\n/**\n * The NgModule instance.\n * @abstract\n * @return {?}\n */\ninstance() {}\n/**\n * Destroys the module instance and all of the data structures associated with it.\n * @abstract\n * @return {?}\n */\ndestroy() {}\n/**\n * Allows to register a callback that will be called when the module is destroyed.\n * @abstract\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void) {}\n}\n/**\n * \\@experimental\n */\nexport class NgModuleFactory<T> {\n/**\n * @param {?} _injectorClass\n * @param {?} _moduleType\n */\nconstructor(\nprivate _injectorClass: {new (parentInjector: Injector): NgModuleInjector<T>},\nprivate _moduleType: Type<T>) {}\n/**\n * @return {?}\n */\nget moduleType(): Type<T> { return this._moduleType; }\n/**\n * @param {?} parentInjector\n * @return {?}\n */\ncreate(parentInjector: Injector): NgModuleRef<T> {\n    const /** @type {?} */ instance = new this._injectorClass(parentInjector || Injector.NULL);\n    instance.create();\n    return instance;\n  }\n}\n\nfunction NgModuleFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleFactory.prototype._injectorClass;\n/** @type {?} */\nNgModuleFactory.prototype._moduleType;\n}\n\n\nconst /** @type {?} */ _UNDEFINED = new Object();\n/**\n * @abstract\n */\nexport abstract class NgModuleInjector<T> implements Injector, NgModuleRef<T> {\n  bootstrapFactories: ComponentFactory<any>[];\n  instance: T;\nprivate _destroyListeners: (() => void)[] = [];\nprivate _destroyed: boolean = false;\nprivate _cmpFactoryResolver: CodegenComponentFactoryResolver;\n/**\n * @param {?} parent\n * @param {?} factories\n * @param {?} bootstrapFactories\n */\nconstructor(\npublic parent: Injector, factories: ComponentFactory<any>[],\n      bootstrapFactories: ComponentFactory<any>[]) {\n    this.bootstrapFactories =\n        bootstrapFactories.map(f => new ComponentFactoryBoundToModule(f, this));\n    this._cmpFactoryResolver = new CodegenComponentFactoryResolver(\n        factories, parent.get(ComponentFactoryResolver, ComponentFactoryResolver.NULL), this);\n  }\n/**\n * @return {?}\n */\ncreate() { this.instance = this.createInternal(); }\n/**\n * @abstract\n * @return {?}\n */\ncreateInternal() {}\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    if (token === Injector || token === NgModuleRef) {\n      return this;\n    }\n\n    if (token === ComponentFactoryResolver) {\n      return this._cmpFactoryResolver;\n    }\n\n    const /** @type {?} */ result = this.getInternal(token, _UNDEFINED);\n    return result === _UNDEFINED ? this.parent.get(token, notFoundValue) : result;\n  }\n/**\n * @abstract\n * @param {?} token\n * @param {?} notFoundValue\n * @return {?}\n */\ngetInternal(token: any, notFoundValue: any) {}\n/**\n * @return {?}\n */\nget injector(): Injector { return this; }\n/**\n * @return {?}\n */\nget componentFactoryResolver(): ComponentFactoryResolver { return this._cmpFactoryResolver; }\n/**\n * @return {?}\n */\ndestroy(): void {\n    if (this._destroyed) {\n      throw new Error(\n          `The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n    }\n    this._destroyed = true;\n    this.destroyInternal();\n    this._destroyListeners.forEach((listener) => listener());\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nonDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n/**\n * @abstract\n * @return {?}\n */\ndestroyInternal() {}\n}\n\nfunction NgModuleInjector_tsickle_Closure_declarations() {\n/** @type {?} */\nNgModuleInjector.prototype.bootstrapFactories;\n/** @type {?} */\nNgModuleInjector.prototype.instance;\n/** @type {?} */\nNgModuleInjector.prototype._destroyListeners;\n/** @type {?} */\nNgModuleInjector.prototype._destroyed;\n/** @type {?} */\nNgModuleInjector.prototype._cmpFactoryResolver;\n/** @type {?} */\nNgModuleInjector.prototype.parent;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Subject} from 'rxjs/Subject';\n/**\n * Use by directives and components to emit custom Events.\n * \n * ### Examples\n * \n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n * \n * ```\n * \\@Component({ \n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n * \n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n * \n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n * \n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n * \n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n * \n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nexport class EventEmitter<T> extends Subject<T> {\n  // TODO: mark this as internal once all the facades are gone\n  // we can't mark it as internal now because EventEmitter exported via @angular/core would not\n  // contain this property making it incompatible with all the code that uses EventEmitter via\n  // facades, which are local to the code and do not have this property stripped.\n  // tslint:disable-next-line\n  __isAsync: boolean;\n/**\n * Creates an instance of [EventEmitter], which depending on [isAsync],\n * delivers events synchronously or asynchronously.\n * @param {?=} isAsync\n */\nconstructor(isAsync: boolean = false) {\n    super();\n    this.__isAsync = isAsync;\n  }\n/**\n * @param {?=} value\n * @return {?}\n */\nemit(value?: T) { super.next(value); }\n/**\n * @param {?=} generatorOrNext\n * @param {?=} error\n * @param {?=} complete\n * @return {?}\n */\nsubscribe(generatorOrNext?: any, error?: any, complete?: any): any {\n    let /** @type {?} */ schedulerFn: (t: any) => any;\n    let /** @type {?} */ errorFn = (err: any): any => null;\n    let /** @type {?} */ completeFn = (): any => null;\n\n    if (generatorOrNext && typeof generatorOrNext === 'object') {\n      schedulerFn = this.__isAsync ? (value: any) => {\n        setTimeout(() => generatorOrNext.next(value));\n      } : (value: any) => { generatorOrNext.next(value); };\n\n      if (generatorOrNext.error) {\n        errorFn = this.__isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                                   (err) => { generatorOrNext.error(err); };\n      }\n\n      if (generatorOrNext.complete) {\n        completeFn = this.__isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                                      () => { generatorOrNext.complete(); };\n      }\n    } else {\n      schedulerFn = this.__isAsync ? (value: any) => { setTimeout(() => generatorOrNext(value)); } :\n                                     (value: any) => { generatorOrNext(value); };\n\n      if (error) {\n        errorFn =\n            this.__isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n      }\n\n      if (complete) {\n        completeFn =\n            this.__isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n      }\n    }\n\n    return super.subscribe(schedulerFn, errorFn, completeFn);\n  }\n}\n\nfunction EventEmitter_tsickle_Closure_declarations() {\n/** @type {?} */\nEventEmitter.prototype.__isAsync;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, TextData, ViewData, asTextData} from './types';\nimport {calcBindingFlags, checkAndUpdateBinding, getParentRenderElement} from './util';\n/**\n * @param {?} ngContentIndex\n * @param {?} constants\n * @return {?}\n */\nexport function textDef(ngContentIndex: number, constants: string[]): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = new Array(constants.length - 1);\n  for (let /** @type {?} */ i = 1; i < constants.length; i++) {\n    bindings[i - 1] = {\n      flags: BindingFlags.TypeProperty,\n      name: undefined,\n      ns: undefined,\n      nonMinifiedName: undefined,\n      securityContext: undefined,\n      suffix: constants[i]\n    };\n  }\n  const /** @type {?} */ flags = NodeFlags.TypeText;\n  return {\n    // will bet set by the view definition\n    index: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    outputIndex: undefined,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0, bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs: [],\n    element: undefined,\n    provider: undefined,\n    text: {prefix: constants[0]},\n    query: undefined,\n    ngContent: undefined\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createText(view: ViewData, renderHost: any, def: NodeDef): TextData {\n  let /** @type {?} */ renderNode: any;\n  const /** @type {?} */ renderer = view.renderer;\n  renderNode = renderer.createText(def.text.prefix);\n  const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n  if (parentEl) {\n    renderer.appendChild(parentEl, renderNode);\n  }\n  return {renderText: renderNode};\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateTextInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  let /** @type {?} */ changed = false;\n  const /** @type {?} */ bindings = def.bindings;\n  const /** @type {?} */ bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    let /** @type {?} */ value = def.text.prefix;\n    if (bindLen > 0) value += _addInterpolationPart(v0, bindings[0]);\n    if (bindLen > 1) value += _addInterpolationPart(v1, bindings[1]);\n    if (bindLen > 2) value += _addInterpolationPart(v2, bindings[2]);\n    if (bindLen > 3) value += _addInterpolationPart(v3, bindings[3]);\n    if (bindLen > 4) value += _addInterpolationPart(v4, bindings[4]);\n    if (bindLen > 5) value += _addInterpolationPart(v5, bindings[5]);\n    if (bindLen > 6) value += _addInterpolationPart(v6, bindings[6]);\n    if (bindLen > 7) value += _addInterpolationPart(v7, bindings[7]);\n    if (bindLen > 8) value += _addInterpolationPart(v8, bindings[8]);\n    if (bindLen > 9) value += _addInterpolationPart(v9, bindings[9]);\n    const /** @type {?} */ renderNode = asTextData(view, def.index).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateTextDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    let /** @type {?} */ value = '';\n    for (let /** @type {?} */ i = 0; i < values.length; i++) {\n      value = value + _addInterpolationPart(values[i], bindings[i]);\n    }\n    value = def.text.prefix + value;\n    const /** @type {?} */ renderNode = asTextData(view, def.index).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value: any, binding: BindingDef): string {\n  const /** @type {?} */ valueStr = value != null ? value.toString() : '';\n  return valueStr + binding.suffix;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '@angular/core';\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n * \n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n * \n * \\@stable\n */\nexport const DOCUMENT = new InjectionToken<Document>('DocumentToken');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {isDevMode} from '@angular/core';\n\nimport {getDOM} from '../dom/dom_adapter';\n\nimport {sanitizeUrl} from './url_sanitizer';\n\n\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nconst /** @type {?} */ VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nconst /** @type {?} */ TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nconst /** @type {?} */ COLOR_FNS = '(?:rgb|hsl)a?';\nconst /** @type {?} */ GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nconst /** @type {?} */ CSS3_FNS = '(?:calc|attr)';\nconst /** @type {?} */ FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nconst /** @type {?} */ SAFE_STYLE_VALUE = new RegExp(\n    `^(${VALUES}|` +\n        `(?:${TRANSFORMATION_FNS}|${COLOR_FNS}|${GRADIENTS}|${CSS3_FNS})` +\n        `${FN_ARGS})$`,\n    'g');\n\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nconst /** @type {?} */ URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n * \n * This code was taken from the Closure sanitization library.\n * @param {?} value\n * @return {?}\n */\nfunction hasBalancedQuotes(value: string) {\n  let /** @type {?} */ outsideSingle = true;\n  let /** @type {?} */ outsideDouble = true;\n  for (let /** @type {?} */ i = 0; i < value.length; i++) {\n    const /** @type {?} */ c = value.charAt(i);\n    if (c === '\\'' && outsideDouble) {\n      outsideSingle = !outsideSingle;\n    } else if (c === '\"' && outsideSingle) {\n      outsideDouble = !outsideDouble;\n    }\n  }\n  return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n * @param {?} value\n * @return {?}\n */\nexport function sanitizeStyle(value: string): string {\n  value = String(value).trim();  // Make sure it's actually a string.\n  if (!value) return '';\n\n  // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n  // reasoning behind this.\n  const /** @type {?} */ urlMatch = value.match(URL_RE);\n  if ((urlMatch && sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n      value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n    return value;  // Safe style values.\n  }\n\n  if (isDevMode()) {\n    getDOM().log(\n        `WARNING: sanitizing unsafe style value ${value} (see http://g.co/ng/security#xss).`);\n  }\n\n  return 'unsafe';\n}\n","<button (click)=\"toggleHeading()\">Toggle Heading</button>\r\n<h1 *ngIf=\"showHeading\">Hello Angular</h1>\r\n\r\n<h3>List of Heroes</h3>\r\n<div *ngFor=\"let hero of heroes\">{{hero}}</div>\r\n\r\n<p>Angular version : {{version}} </p>","<my-app></my-app>","import { errorObject } from './errorObject';\n\nlet tryCatchTarget: Function;\n\nfunction tryCatcher(this: any): any {\n  try {\n    return tryCatchTarget.apply(this, arguments);\n  } catch (e) {\n    errorObject.e = e;\n    return errorObject;\n  }\n}\n\nexport function tryCatch<T extends Function>(fn: T): T {\n  tryCatchTarget = fn;\n  return <any>tryCatcher;\n};\n","declare let global: NodeJS.Global;\n\ndeclare module NodeJS {\n  interface Global {\n    window: any;\n    global: any;\n  }\n}\n\n/**\n * window: browser in DOM main thread\n * self: browser in WebWorker\n * global: Node.js/other\n */\nexport const root: any = (\n     typeof window == 'object' && window.window === window && window\n  || typeof self == 'object' && self.self === self && self\n  || typeof global == 'object' && global.global === global && global\n);\n\nif (!root) {\n  throw new Error('RxJS could not find any global context (window, self, global)');\n}\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","export const isArray = Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number');\n","export function isObject(x: any): x is Object {\n  return x != null && typeof x === 'object';\n}\n","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject: any = { e: {} };","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n  constructor(public errors: any[]) {\n    super();\n    const err: any = Error.call(this, errors ?\n      `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n    (<any> this).name = err.name = 'UnsubscriptionError';\n    (<any> this).stack = err.stack;\n    (<any> this).message = err.message;\n  }\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n\nexport interface AnonymousSubscription {\n  unsubscribe(): void;\n}\n\nexport type TeardownLogic = AnonymousSubscription | Function | void;\n\nexport interface ISubscription extends AnonymousSubscription {\n  unsubscribe(): void;\n  readonly closed: boolean;\n}\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements ISubscription {\n  public static EMPTY: Subscription = (function(empty: any){\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  protected _parent: Subscription = null;\n  protected _parents: Subscription[] = null;\n  private _subscriptions: ISubscription[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let hasErrors = false;\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parent, _parents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parent = null;\n    this._parents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    let index = -1;\n    let len = _parents ? _parents.length : 0;\n\n    // if this._parent is null, then so is this._parents, and we\n    // don't have to remove ourselves from any parent subscriptions.\n    while (_parent) {\n      _parent.remove(this);\n      // if this._parents is null or index >= len,\n      // then _parent is set to null, and the loop exits\n      _parent = ++index < len && _parents[index] || null;\n    }\n\n    if (isFunction(_unsubscribe)) {\n      let trial = tryCatch(_unsubscribe).call(this);\n      if (trial === errorObject) {\n        hasErrors = true;\n        errors = errors || (\n          errorObject.e instanceof UnsubscriptionError ?\n            flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]\n        );\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n\n      index = -1;\n      len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          let trial = tryCatch(sub.unsubscribe).call(sub);\n          if (trial === errorObject) {\n            hasErrors = true;\n            errors = errors || [];\n            let err = errorObject.e;\n            if (err instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n    }\n\n    if (hasErrors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    if (!teardown || (teardown === Subscription.EMPTY)) {\n      return Subscription.EMPTY;\n    }\n\n    if (teardown === this) {\n      return this;\n    }\n\n    let subscription = (<Subscription> teardown);\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void) > teardown);\n      case 'object':\n        if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default:\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n    }\n\n    const subscriptions = this._subscriptions || (this._subscriptions = []);\n\n    subscriptions.push(subscription);\n    subscription._addParent(this);\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n\n  private _addParent(parent: Subscription) {\n    let { _parent, _parents } = this;\n    if (!_parent || _parent === parent) {\n      // If we don't have a parent, or the new parent is the same as the\n      // current parent, then set this._parent to the new parent.\n      this._parent = parent;\n    } else if (!_parents) {\n      // If there's already one parent, but not multiple, allocate an Array to\n      // store the rest of the parent Subscriptions.\n      this._parents = [parent];\n    } else if (_parents.indexOf(parent) === -1) {\n      // Only add the new parent to the _parents list if it's not already there.\n      _parents.push(parent);\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","export interface NextObserver<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error?: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface ErrorObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error: (err: any) => void;\n  complete?: () => void;\n}\n\nexport interface CompletionObserver<T> {\n  closed?: boolean;\n  next?: (value: T) => void;\n  error?: (err: any) => void;\n  complete: () => void;\n}\n\nexport type PartialObserver<T> = NextObserver<T> | ErrorObserver<T> | CompletionObserver<T>;\n\nexport interface Observer<T> {\n  closed?: boolean;\n  next: (value: T) => void;\n  error: (err: any) => void;\n  complete: () => void;\n}\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void { throw err; },\n  complete(): void { /*noop*/ }\n};\n","import { root } from '../util/root';\n\nconst Symbol: any = root.Symbol;\n\nexport const $$rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n  Symbol.for('rxSubscriber') : '@@rxSubscriber';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\n\n\n/**\n * An interface that a function passed into {@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * @experimental\n */\nexport interface ForwardRefFn { (): any; }\n/**\n * Allows to refer to references which are not yet defined.\n * \n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n * \n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nexport function forwardRef(forwardRefFn: ForwardRefFn): Type<any> {\n  ( /** @type {?} */((<any>forwardRefFn))).__forward_ref__ = forwardRef;\n  ( /** @type {?} */((<any>forwardRefFn))).toString = function() { return stringify(this()); };\n  return ( /** @type {?} */((<Type<any>> /** @type {?} */((<any>forwardRefFn)))));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * \n * Acts as the identity function when given a non-forward-ref value.\n * \n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n * \n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n * \n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nexport function resolveForwardRef(type: any): any {\n  if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n      type.__forward_ref__ === forwardRef) {\n    return ( /** @type {?} */((<ForwardRefFn>type)))();\n  } else {\n    return type;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {wrappedError} from '../error_handler';\nimport {ERROR_ORIGINAL_ERROR, getOriginalError} from '../errors';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ReflectiveInjector} from './reflective_injector';\nimport {ReflectiveKey} from './reflective_key';\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys: any[]): any[] {\n  const /** @type {?} */ res: any[] = [];\n  for (let /** @type {?} */ i = 0; i < keys.length; ++i) {\n    if (res.indexOf(keys[i]) > -1) {\n      res.push(keys[i]);\n      return res;\n    }\n    res.push(keys[i]);\n  }\n  return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys: any[]): string {\n  if (keys.length > 1) {\n    const /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n    const /** @type {?} */ tokenStrs = reversed.map(k => stringify(k.token));\n    return ' (' + tokenStrs.join(' -> ') + ')';\n  }\n\n  return '';\n}\n\nexport interface InjectionError extends Error {\n  keys: ReflectiveKey[];\n  injectors: ReflectiveInjector[];\n  constructResolvingMessage: (this: InjectionError) => string;\n  addKey(injector: ReflectiveInjector, key: ReflectiveKey): void;\n}\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(\n    injector: ReflectiveInjector, key: ReflectiveKey,\n    constructResolvingMessage: (this: InjectionError) => string,\n    originalError?: Error): InjectionError {\n  const /** @type {?} */ error = /** @type {?} */(( (originalError ? wrappedError('', originalError) : Error()) as InjectionError));\n  error.addKey = addKey;\n  error.keys = [key];\n  error.injectors = [injector];\n  error.constructResolvingMessage = constructResolvingMessage;\n  error.message = error.constructResolvingMessage();\n  ( /** @type {?} */((error as any)))[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(this: InjectionError, injector: ReflectiveInjector, key: ReflectiveKey): void {\n  this.injectors.push(injector);\n  this.keys.push(key);\n  this.message = this.constructResolvingMessage();\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n * \n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n * \n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function noProviderError(injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(this: InjectionError) {\n    const /** @type {?} */ first = stringify(this.keys[0].token);\n    return `No provider for ${first}!${constructResolvingPath(this.keys)}`;\n  });\n}\n/**\n * Thrown when dependencies form a cycle.\n * \n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n * \n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n * \n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n * \n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nexport function cyclicDependencyError(\n    injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(this: InjectionError) {\n    return `Cannot instantiate cyclic dependency!${constructResolvingPath(this.keys)}`;\n  });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n * \n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n * \n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n * \n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nexport function instantiationError(\n    injector: ReflectiveInjector, originalException: any, originalStack: any,\n    key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(this: InjectionError) {\n    const /** @type {?} */ first = stringify(this.keys[0].token);\n    return `${getOriginalError(this).message}: Error during instantiation of ${first}!${constructResolvingPath(this.keys)}.`;\n  }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n * \n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n * \n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nexport function invalidProviderError(provider: any) {\n  return Error(\n      `Invalid provider - only instances of Provider and Type are allowed, got: ${provider}`);\n}\n/**\n * Thrown when the class has no annotation information.\n * \n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n * \n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n * \n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n * \n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * \n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n * \n * ```typescript\n * class B {}\n * \n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n * \n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nexport function noAnnotationError(typeOrFunc: Type<any>| Function, params: any[][]): Error {\n  const /** @type {?} */ signature: string[] = [];\n  for (let /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n    const /** @type {?} */ parameter = params[i];\n    if (!parameter || parameter.length == 0) {\n      signature.push('?');\n    } else {\n      signature.push(parameter.map(stringify).join(' '));\n    }\n  }\n  return Error(\n      'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n      signature.join(', ') + '). ' +\n      'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n      stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n * \n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n * \n * ```typescript\n * class A {}\n * \n * var injector = Injector.resolveAndCreate([A]);\n * \n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nexport function outOfBoundsError(index: number) {\n  return Error(`Index ${index} is out-of-bounds.`);\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n * \n * ### Example\n * \n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nexport function mixingMultiProvidersWithRegularProvidersError(\n    provider1: any, provider2: any): Error {\n  return Error(`Cannot mix multi providers and regular providers, got: ${provider1} ${provider2}`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\nexport {InjectDecorator,Inject,OptionalDecorator,Optional,InjectableDecorator,Injectable,SelfDecorator,Self,SkipSelfDecorator,SkipSelf,HostDecorator,Host} from './di/metadata';\n\nexport {forwardRef, resolveForwardRef, ForwardRefFn} from './di/forward_ref';\n\nexport {Injector} from './di/injector';\nexport {ReflectiveInjector} from './di/reflective_injector';\nexport {Provider, TypeProvider, ValueProvider, ClassProvider, ExistingProvider, FactoryProvider} from './di/provider';\nexport {ResolvedReflectiveFactory, ResolvedReflectiveProvider} from './di/reflective_provider';\nexport {ReflectiveKey} from './di/reflective_key';\nexport {InjectionToken, OpaqueToken} from './di/injection_token';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable} from 'rxjs/Observable';\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nexport function isPromise(obj: any): obj is Promise<any> {\n  // allow any Promise/A+ compliant thenable.\n  // It's up to the caller to ensure that obj.then conforms to the spec\n  return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nexport function isObservable(obj: any | Observable<any>): obj is Observable<any> {\n  // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n  return !!obj && typeof obj.subscribe === 'function';\n}\n/**\n * @template V\n * @param {?} m1\n * @param {?} m2\n * @return {?}\n */\nexport function merge<V>(m1: {[key: string]: V}, m2: {[key: string]: V}): {[key: string]: V} {\n  const /** @type {?} */ m: {[key: string]: V} = {};\n\n  for (const /** @type {?} */ k of Object.keys(m1)) {\n    m[k] = m1[k];\n  }\n\n  for (const /** @type {?} */ k of Object.keys(m2)) {\n    m[k] = m2[k];\n  }\n\n  return m;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Public API for Zone\nexport {NgZone} from './zone/ng_zone';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {RendererType2} from '../render/api';\nimport {SecurityContext} from '../security';\n\nimport {BindingDef, BindingFlags, ElementData, ElementHandleEventFn, NodeDef, NodeFlags, OutputDef, OutputType, QueryValueType, ViewData, ViewDefinitionFactory, asElementData} from './types';\nimport {NOOP, calcBindingFlags, checkAndUpdateBinding, dispatchEvent, elementEventFullName, getParentRenderElement, resolveRendererType2, resolveViewDefinition, splitMatchedQueriesDsl, splitNamespace} from './util';\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nexport function anchorDef(\n    flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n    ngContentIndex: number, childCount: number, handleEvent?: ElementHandleEventFn,\n    templateFactory?: ViewDefinitionFactory): NodeDef {\n  if (!handleEvent) {\n    handleEvent = NOOP;\n  }\n  flags |= NodeFlags.TypeElement;\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  const /** @type {?} */ template = templateFactory ? resolveViewDefinition(templateFactory) : null;\n\n  return {\n    // will bet set by the view definition\n    index: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    outputIndex: undefined,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: {\n      ns: undefined,\n      name: undefined,\n      attrs: undefined, template,\n      componentProvider: undefined,\n      componentView: undefined,\n      componentRendererType: undefined,\n      publicProviders: undefined,\n      allProviders: undefined, handleEvent\n    },\n    provider: undefined,\n    text: undefined,\n    query: undefined,\n    ngContent: undefined\n  };\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nexport function elementDef(\n    flags: NodeFlags, matchedQueriesDsl: [string | number, QueryValueType][],\n    ngContentIndex: number, childCount: number, namespaceAndName: string,\n    fixedAttrs: [string, string][] = [],\n    bindings?: [BindingFlags, string, string | SecurityContext][], outputs?: ([string, string])[],\n    handleEvent?: ElementHandleEventFn, componentView?: ViewDefinitionFactory,\n    componentRendererType?: RendererType2): NodeDef {\n  if (!handleEvent) {\n    handleEvent = NOOP;\n  }\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  let /** @type {?} */ ns: string;\n  let /** @type {?} */ name: string;\n  if (namespaceAndName) {\n    [ns, name] = splitNamespace(namespaceAndName);\n  }\n  bindings = bindings || [];\n  const /** @type {?} */ bindingDefs: BindingDef[] = new Array(bindings.length);\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    const [bindingFlags, namespaceAndName, suffixOrSecurityContext] = bindings[i];\n\n    const [ns, name] = splitNamespace(namespaceAndName);\n    let /** @type {?} */ securityContext: SecurityContext;\n    let /** @type {?} */ suffix: string;\n    switch (bindingFlags & BindingFlags.Types) {\n      case BindingFlags.TypeElementStyle:\n        suffix = /** @type {?} */(( <string>suffixOrSecurityContext));\n        break;\n      case BindingFlags.TypeElementAttribute:\n      case BindingFlags.TypeProperty:\n        securityContext = /** @type {?} */(( <SecurityContext>suffixOrSecurityContext));\n        break;\n    }\n    bindingDefs[i] =\n        {flags: bindingFlags, ns, name, nonMinifiedName: name, securityContext, suffix};\n  }\n  outputs = outputs || [];\n  const /** @type {?} */ outputDefs: OutputDef[] = new Array(outputs.length);\n  for (let /** @type {?} */ i = 0; i < outputs.length; i++) {\n    const [target, eventName] = outputs[i];\n    outputDefs[i] = {\n      type: OutputType.ElementOutput,\n      target: /** @type {?} */(( <any>target)), eventName,\n      propName: undefined\n    };\n  }\n  fixedAttrs = fixedAttrs || [];\n  const /** @type {?} */ attrs = /** @type {?} */(( <[string, string, string][]>fixedAttrs.map(([namespaceAndName, value]) => {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    return [ns, name, value];\n  })));\n  componentRendererType = resolveRendererType2(componentRendererType);\n  if (componentView) {\n    flags |= NodeFlags.ComponentView;\n  }\n  flags |= NodeFlags.TypeElement;\n  return {\n    // will bet set by the view definition\n    index: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    outputIndex: undefined,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: bindingDefs,\n    bindingFlags: calcBindingFlags(bindingDefs),\n    outputs: outputDefs,\n    element: {\n      ns,\n      name,\n      attrs,\n      template: undefined,\n      // will bet set by the view definition\n      componentProvider: undefined, componentView, componentRendererType,\n      publicProviders: undefined,\n      allProviders: undefined, handleEvent,\n    },\n    provider: undefined,\n    text: undefined,\n    query: undefined,\n    ngContent: undefined\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function createElement(view: ViewData, renderHost: any, def: NodeDef): ElementData {\n  const /** @type {?} */ elDef = def.element;\n  const /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n  const /** @type {?} */ renderer = view.renderer;\n  let /** @type {?} */ el: any;\n  if (view.parent || !rootSelectorOrNode) {\n    if (elDef.name) {\n      el = renderer.createElement(elDef.name, elDef.ns);\n    } else {\n      el = renderer.createComment('');\n    }\n    const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n      renderer.appendChild(parentEl, el);\n    }\n  } else {\n    el = renderer.selectRootElement(rootSelectorOrNode);\n  }\n  if (elDef.attrs) {\n    for (let /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n      const [ns, name, value] = elDef.attrs[i];\n      renderer.setAttribute(el, name, value, ns);\n    }\n  }\n  return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nexport function listenToElementOutputs(view: ViewData, compView: ViewData, def: NodeDef, el: any) {\n  for (let /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n    const /** @type {?} */ output = def.outputs[i];\n    const /** @type {?} */ handleEventClosure = renderEventHandlerClosure(\n        view, def.index, elementEventFullName(output.target, output.eventName));\n    let /** @type {?} */ listenTarget = output.target;\n    let /** @type {?} */ listenerView = view;\n    if (output.target === 'component') {\n      listenTarget = null;\n      listenerView = compView;\n    }\n    const /** @type {?} */ disposable = /** @type {?} */((\n        <any>listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)));\n    view.disposables[def.outputIndex + i] = disposable;\n  }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdateElementInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ bindLen = def.bindings.length;\n  let /** @type {?} */ changed = false;\n  if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9)) changed = true;\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdateElementDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    if (checkAndUpdateElementValue(view, def, i, values[i])) changed = true;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n    return false;\n  }\n  const /** @type {?} */ binding = def.bindings[bindingIdx];\n  const /** @type {?} */ elData = asElementData(view, def.index);\n  const /** @type {?} */ renderNode = elData.renderElement;\n  const /** @type {?} */ name = binding.name;\n  switch (binding.flags & BindingFlags.Types) {\n    case BindingFlags.TypeElementAttribute:\n      setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n      break;\n    case BindingFlags.TypeElementClass:\n      setElementClass(view, renderNode, name, value);\n      break;\n    case BindingFlags.TypeElementStyle:\n      setElementStyle(view, binding, renderNode, name, value);\n      break;\n    case BindingFlags.TypeProperty:\n      const /** @type {?} */ bindView = (def.flags & NodeFlags.ComponentView &&\n                        binding.flags & BindingFlags.SyntheticHostProperty) ?\n          elData.componentView :\n          view;\n      setElementProperty(bindView, binding, renderNode, name, value);\n      break;\n  }\n  return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(\n    view: ViewData, binding: BindingDef, renderNode: any, ns: string, name: string, value: any) {\n  const /** @type {?} */ securityContext = binding.securityContext;\n  let /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  renderValue = renderValue != null ? renderValue.toString() : null;\n  const /** @type {?} */ renderer = view.renderer;\n  if (value != null) {\n    renderer.setAttribute(renderNode, name, renderValue, ns);\n  } else {\n    renderer.removeAttribute(renderNode, name, ns);\n  }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view: ViewData, renderNode: any, name: string, value: boolean) {\n  const /** @type {?} */ renderer = view.renderer;\n  if (value) {\n    renderer.addClass(renderNode, name);\n  } else {\n    renderer.removeClass(renderNode, name);\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  let /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, value);\n  if (renderValue != null) {\n    renderValue = renderValue.toString();\n    const /** @type {?} */ unit = binding.suffix;\n    if (unit != null) {\n      renderValue = renderValue + unit;\n    }\n  } else {\n    renderValue = null;\n  }\n  const /** @type {?} */ renderer = view.renderer;\n  if (renderValue != null) {\n    renderer.setStyle(renderNode, name, renderValue);\n  } else {\n    renderer.removeStyle(renderNode, name);\n  }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  const /** @type {?} */ securityContext = binding.securityContext;\n  let /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  view.renderer.setProperty(renderNode, name, renderValue);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NodeDef, NodeFlags, ViewData} from './types';\nimport {RenderNodeAction, getParentRenderElement, visitProjectedRenderNodes} from './util';\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nexport function ngContentDef(ngContentIndex: number, index: number): NodeDef {\n  return {\n    // will bet set by the view definition\n    index: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    outputIndex: undefined,\n    // regular values\n    flags: NodeFlags.TypeNgContent,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: undefined,\n    provider: undefined,\n    text: undefined,\n    query: undefined,\n    ngContent: {index}\n  };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nexport function appendNgContent(view: ViewData, renderHost: any, def: NodeDef) {\n  const /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n  if (!parentEl) {\n    // Nothing to do if there is no parent element.\n    return;\n  }\n  const /** @type {?} */ ngContentIndex = def.ngContent.index;\n  visitProjectedRenderNodes(\n      view, ngContentIndex, RenderNodeAction.AppendChild, parentEl, undefined, undefined);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ElementData, Services, ViewData} from './types';\nimport {RenderNodeAction, declaredViewContainer, renderNode, visitRootRenderNodes} from './util';\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nexport function attachEmbeddedView(\n    parentView: ViewData, elementData: ElementData, viewIndex: number, view: ViewData) {\n  let /** @type {?} */ embeddedViews = elementData.viewContainer._embeddedViews;\n  if (viewIndex == null) {\n    viewIndex = embeddedViews.length;\n  }\n  view.viewContainerParent = parentView;\n  addToArray(embeddedViews, viewIndex, view);\n  const /** @type {?} */ dvcElementData = declaredViewContainer(view);\n  if (dvcElementData && dvcElementData !== elementData) {\n    let /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n      projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n  }\n\n  Services.dirtyParentQueries(view);\n\n  const /** @type {?} */ prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} elementData\n * @param {?} viewIndex\n * @return {?}\n */\nexport function detachEmbeddedView(elementData: ElementData, viewIndex: number): ViewData {\n  const /** @type {?} */ embeddedViews = elementData.viewContainer._embeddedViews;\n  if (viewIndex == null || viewIndex >= embeddedViews.length) {\n    viewIndex = embeddedViews.length - 1;\n  }\n  if (viewIndex < 0) {\n    return null;\n  }\n  const /** @type {?} */ view = embeddedViews[viewIndex];\n  view.viewContainerParent = undefined;\n  removeFromArray(embeddedViews, viewIndex);\n\n  const /** @type {?} */ dvcElementData = declaredViewContainer(view);\n  if (dvcElementData && dvcElementData !== elementData) {\n    const /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    removeFromArray(projectedViews, projectedViews.indexOf(view));\n  }\n\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n\n  return view;\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nexport function moveEmbeddedView(\n    elementData: ElementData, oldViewIndex: number, newViewIndex: number): ViewData {\n  const /** @type {?} */ embeddedViews = elementData.viewContainer._embeddedViews;\n  const /** @type {?} */ view = embeddedViews[oldViewIndex];\n  removeFromArray(embeddedViews, oldViewIndex);\n  if (newViewIndex == null) {\n    newViewIndex = embeddedViews.length;\n  }\n  addToArray(embeddedViews, newViewIndex, view);\n\n  // Note: Don't need to change projectedViews as the order in there\n  // as always invalid...\n\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n  const /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n\n  return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData: ElementData, prevView: ViewData, view: ViewData) {\n  const /** @type {?} */ prevRenderNode =\n      prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) : elementData.renderElement;\n  const /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n  const /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n  // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n  // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n  visitRootRenderNodes(view, RenderNodeAction.InsertBefore, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function renderDetachView(view: ViewData) {\n  visitRootRenderNodes(view, RenderNodeAction.RemoveChild, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr: any[], index: number, value: any) {\n  // perf: array.push is faster than array.splice!\n  if (index >= arr.length) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 0, value);\n  }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr: any[], index: number) {\n  // perf: array.pop is faster than array.splice!\n  if (index >= arr.length - 1) {\n    arr.pop();\n  } else {\n    arr.splice(index, 1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, PureExpressionData, ViewData, asPureExpressionData} from './types';\nimport {calcBindingFlags, checkAndUpdateBinding} from './util';\n/**\n * @param {?} argCount\n * @return {?}\n */\nexport function purePipeDef(argCount: number): NodeDef {\n  // argCount + 1 to include the pipe as first arg\n  return _pureExpressionDef(NodeFlags.TypePurePipe, new Array(argCount + 1));\n}\n/**\n * @param {?} argCount\n * @return {?}\n */\nexport function pureArrayDef(argCount: number): NodeDef {\n  return _pureExpressionDef(NodeFlags.TypePureArray, new Array(argCount));\n}\n/**\n * @param {?} propertyNames\n * @return {?}\n */\nexport function pureObjectDef(propertyNames: string[]): NodeDef {\n  return _pureExpressionDef(NodeFlags.TypePureObject, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags: NodeFlags, propertyNames: string[]): NodeDef {\n  const /** @type {?} */ bindings: BindingDef[] = new Array(propertyNames.length);\n  for (let /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n    const /** @type {?} */ prop = propertyNames[i];\n    bindings[i] = {\n      flags: BindingFlags.TypeProperty,\n      name: prop,\n      ns: undefined,\n      nonMinifiedName: prop,\n      securityContext: undefined,\n      suffix: undefined\n    };\n  }\n  return {\n    // will bet set by the view definition\n    index: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    outputIndex: undefined,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    ngContentIndex: undefined,\n    childCount: 0, bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs: [],\n    element: undefined,\n    provider: undefined,\n    text: undefined,\n    query: undefined,\n    ngContent: undefined\n  };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nexport function createPureExpression(view: ViewData, def: NodeDef): PureExpressionData {\n  return {value: undefined};\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  const /** @type {?} */ bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    const /** @type {?} */ data = asPureExpressionData(view, def.index);\n    let /** @type {?} */ value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = new Array(bindings.length);\n        if (bindLen > 0) value[0] = v0;\n        if (bindLen > 1) value[1] = v1;\n        if (bindLen > 2) value[2] = v2;\n        if (bindLen > 3) value[3] = v3;\n        if (bindLen > 4) value[4] = v4;\n        if (bindLen > 5) value[5] = v5;\n        if (bindLen > 6) value[6] = v6;\n        if (bindLen > 7) value[7] = v7;\n        if (bindLen > 8) value[8] = v8;\n        if (bindLen > 9) value[9] = v9;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        if (bindLen > 0) value[bindings[0].name] = v0;\n        if (bindLen > 1) value[bindings[1].name] = v1;\n        if (bindLen > 2) value[bindings[2].name] = v2;\n        if (bindLen > 3) value[bindings[3].name] = v3;\n        if (bindLen > 4) value[bindings[4].name] = v4;\n        if (bindLen > 5) value[bindings[5].name] = v5;\n        if (bindLen > 6) value[bindings[6].name] = v6;\n        if (bindLen > 7) value[bindings[7].name] = v7;\n        if (bindLen > 8) value[bindings[8].name] = v8;\n        if (bindLen > 9) value[bindings[9].name] = v9;\n        break;\n      case NodeFlags.TypePurePipe:\n        const /** @type {?} */ pipe = v0;\n        switch (bindLen) {\n          case 1:\n            value = pipe.transform(v0);\n            break;\n          case 2:\n            value = pipe.transform(v1);\n            break;\n          case 3:\n            value = pipe.transform(v1, v2);\n            break;\n          case 4:\n            value = pipe.transform(v1, v2, v3);\n            break;\n          case 5:\n            value = pipe.transform(v1, v2, v3, v4);\n            break;\n          case 6:\n            value = pipe.transform(v1, v2, v3, v4, v5);\n            break;\n          case 7:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n            break;\n          case 8:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n            break;\n          case 9:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n            break;\n          case 10:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        }\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nexport function checkAndUpdatePureExpressionDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const /** @type {?} */ bindings = def.bindings;\n  let /** @type {?} */ changed = false;\n  for (let /** @type {?} */ i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    const /** @type {?} */ data = asPureExpressionData(view, def.index);\n    let /** @type {?} */ value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = values;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        for (let /** @type {?} */ i = 0; i < values.length; i++) {\n          value[bindings[i].name] = values[i];\n        }\n        break;\n      case NodeFlags.TypePurePipe:\n        const /** @type {?} */ pipe = values[0];\n        const /** @type {?} */ params = values.slice(1);\n        value = ( /** @type {?} */((<any>pipe.transform)))(...params);\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ElementRef} from '../linker/element_ref';\nimport {QueryList} from '../linker/query_list';\n\nimport {NodeDef, NodeFlags, QueryBindingDef, QueryBindingType, QueryDef, QueryValueType, ViewData, asElementData, asProviderData, asQueryList} from './types';\nimport {declaredViewContainer, filterQueryId, isEmbeddedView} from './util';\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nexport function queryDef(\n    flags: NodeFlags, id: number, bindings: {[propName: string]: QueryBindingType}): NodeDef {\n  let /** @type {?} */ bindingDefs: QueryBindingDef[] = [];\n  for (let /** @type {?} */ propName in bindings) {\n    const /** @type {?} */ bindingType = bindings[propName];\n    bindingDefs.push({propName, bindingType});\n  }\n\n  return {\n    // will bet set by the view definition\n    index: undefined,\n    parent: undefined,\n    renderParent: undefined,\n    bindingIndex: undefined,\n    outputIndex: undefined,\n    // regular values\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    ngContentIndex: undefined,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: undefined,\n    provider: undefined,\n    text: undefined,\n    query: {id, filterId: filterQueryId(id), bindings: bindingDefs},\n    ngContent: undefined\n  };\n}\n/**\n * @return {?}\n */\nexport function createQuery(): QueryList<any> {\n  return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nexport function dirtyParentQueries(view: ViewData) {\n  const /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n  while (view.parent && isEmbeddedView(view)) {\n    let /** @type {?} */ tplDef = view.parentNodeDef;\n    view = view.parent;\n    // content queries\n    const /** @type {?} */ end = tplDef.index + tplDef.childCount;\n    for (let /** @type {?} */ i = 0; i <= end; i++) {\n      const /** @type {?} */ nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeContentQuery) &&\n          (nodeDef.flags & NodeFlags.DynamicQuery) &&\n          (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n        asQueryList(view, i).setDirty();\n      }\n      if ((nodeDef.flags & NodeFlags.TypeElement && i + nodeDef.childCount < tplDef.index) ||\n          !(nodeDef.childFlags & NodeFlags.TypeContentQuery) ||\n          !(nodeDef.childFlags & NodeFlags.DynamicQuery)) {\n        // skip elements that don't contain the template element or no query.\n        i += nodeDef.childCount;\n      }\n    }\n  }\n\n  // view queries\n  if (view.def.nodeFlags & NodeFlags.TypeViewQuery) {\n    for (let /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n      const /** @type {?} */ nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeViewQuery) && (nodeDef.flags & NodeFlags.DynamicQuery)) {\n        asQueryList(view, i).setDirty();\n      }\n      // only visit the root nodes\n      i += nodeDef.childCount;\n    }\n  }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nexport function checkAndUpdateQuery(view: ViewData, nodeDef: NodeDef) {\n  const /** @type {?} */ queryList = asQueryList(view, nodeDef.index);\n  if (!queryList.dirty) {\n    return;\n  }\n  let /** @type {?} */ directiveInstance: any;\n  let /** @type {?} */ newValues: any[];\n  if (nodeDef.flags & NodeFlags.TypeContentQuery) {\n    const /** @type {?} */ elementDef = nodeDef.parent.parent;\n    newValues = calcQueryValues(\n        view, elementDef.index, elementDef.index + elementDef.childCount, nodeDef.query, []);\n    directiveInstance = asProviderData(view, nodeDef.parent.index).instance;\n  } else if (nodeDef.flags & NodeFlags.TypeViewQuery) {\n    newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n    directiveInstance = view.component;\n  }\n  queryList.reset(newValues);\n  const /** @type {?} */ bindings = nodeDef.query.bindings;\n  let /** @type {?} */ notify = false;\n  for (let /** @type {?} */ i = 0; i < bindings.length; i++) {\n    const /** @type {?} */ binding = bindings[i];\n    let /** @type {?} */ boundValue: any;\n    switch (binding.bindingType) {\n      case QueryBindingType.First:\n        boundValue = queryList.first;\n        break;\n      case QueryBindingType.All:\n        boundValue = queryList;\n        notify = true;\n        break;\n    }\n    directiveInstance[binding.propName] = boundValue;\n  }\n  if (notify) {\n    queryList.notifyOnChanges();\n  }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(\n    view: ViewData, startIndex: number, endIndex: number, queryDef: QueryDef,\n    values: any[]): any[] {\n  for (let /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n    const /** @type {?} */ nodeDef = view.def.nodes[i];\n    const /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n    if (valueType != null) {\n      values.push(getQueryValue(view, nodeDef, valueType));\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && nodeDef.element.template &&\n        (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n      // check embedded views that were attached at the place of their template.\n      const /** @type {?} */ elementData = asElementData(view, i);\n      if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n        const /** @type {?} */ embeddedViews = elementData.viewContainer._embeddedViews;\n        for (let /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n          const /** @type {?} */ embeddedView = embeddedViews[k];\n          const /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n          if (dvc && dvc === elementData) {\n            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n          }\n        }\n      }\n      const /** @type {?} */ projectedViews = elementData.template._projectedViews;\n      if (projectedViews) {\n        for (let /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n          const /** @type {?} */ projectedView = projectedViews[k];\n          calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n        }\n      }\n    }\n    if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n      // if no child matches the query, skip the children.\n      i += nodeDef.childCount;\n    }\n  }\n  return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nexport function getQueryValue(\n    view: ViewData, nodeDef: NodeDef, queryValueType: QueryValueType): any {\n  if (queryValueType != null) {\n    // a match\n    let /** @type {?} */ value: any;\n    switch (queryValueType) {\n      case QueryValueType.RenderElement:\n        value = asElementData(view, nodeDef.index).renderElement;\n        break;\n      case QueryValueType.ElementRef:\n        value = new ElementRef(asElementData(view, nodeDef.index).renderElement);\n        break;\n      case QueryValueType.TemplateRef:\n        value = asElementData(view, nodeDef.index).template;\n        break;\n      case QueryValueType.ViewContainerRef:\n        value = asElementData(view, nodeDef.index).viewContainer;\n        break;\n      case QueryValueType.Provider:\n        value = asProviderData(view, nodeDef.index).instance;\n        break;\n    }\n    return value;\n  }\n}"],"names":["EventManagerPlugin","prototype","addGlobalEventListener","element","eventName","handler","target","getDOM","getGlobalEventTarget","this","_doc","Error","addEventListener","SharedStylesHost","addStyles","styles","_this","additions","Set","forEach","style","_stylesSet","has","add","type","Injectable","ctorParameters","DomSharedStylesHost","_super","call","__extends","_addStylesToHost","host","removeHost","hostNode","_hostNodes","delete","NAMESPACE_URIS","xlink","svg","xhtml","xml","CONTENT_ATTR","DomRendererFactory2","eventManager","sharedStylesHost","createRenderer","defaultRenderer","encapsulation","ViewEncapsulation","Emulated","renderer","rendererByCompId","get","id","EmulatedEncapsulationDomRenderer2","set","applyToHost","Native","ShadowDomRenderer","flattenStyles","DefaultDomRenderer2","data","Object","create","createElement","name","namespace","createComment","value","document","selectRootElement","selectorOrNode","el","querySelector","parentNode","node","setAttribute","setAttributeNS","removeAttribute","removeAttributeNS","setStyle","flags","RendererStyleFlags2","DashCase","setProperty","Important","removeProperty","listen","event","callback","checkNoSyntheticProp","decoratePreventDefault","component","parent","hostEl","shadowRoot","createShadowRoot","addHost","i","length","DomEventsPlugin","doc","removeEventListener","EVENT_NAMES","pan","panstart","panmove","panend","panleft","panright","panup","pandown","pinch","pinchstart","pinchend","pinchcancel","pinchout","press","pressup","rotatestart","rotatemove","rotateend","rotatecancel","swipeleft","swiperight","HAMMER_GESTURE_CONFIG","InjectionToken","HammerGestureConfig","buildHammer","mc","Hammer","enable","overrides","HammerGesturesPlugin","supports","hasOwnProperty","toLowerCase","isCustomEvent","zone","manager","getZone","runOutsideAngular","_config","eventObj","runGuarded","MODIFIER_KEYS","MODIFIER_KEY_GETTERS","shift","shiftKey","KeyEventsPlugin","parsedEvent","parseEventName","parts","split","domEventName","key","_normalizeKey","pop","fullKey","modifierName","index","indexOf","splice","getEventFullKey","getEventKey","modifierGetter","eventCallback","keyName","DATA_URL_PATTERN","DOM","VOID_ELEMENTS","tagSet","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","BLOCK_ELEMENTS","merge","INLINE_ELEMENTS","VALID_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","VALID_ATTRS","HTML_ATTRS","SanitizingHtmlSerializer","sanitizeChildren","current","firstChild","isElementNode","startElement","isTextNode","chars","nodeValue","sanitizedSomething","endElement","next","checkClobberedElement","nextSibling","tagName","nodeName","buf","push","attributeMap","attrName","lower","sanitizeUrl","sanitizeSrcset","DomSanitizer","DomSanitizerImpl","sanitize","ctx","SecurityContext","NONE","HTML","SafeHtmlImpl","changingThisBreaksApplicationSecurity","checkNotSafeValue","sanitizeHtml","String","STYLE","SafeStyleImpl","sanitizeStyle","SCRIPT","SafeScriptImpl","URL","SafeResourceUrlImpl","SafeUrlImpl","RESOURCE_URL","expectedType","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","undefined","decorators","Inject","args","DOCUMENT","SafeValueImpl","getTypeName","toString","INTERNAL_BROWSER_PLATFORM_PROVIDERS","provide","useClass","platformBrowser","createPlatformFactory","platformCore","BrowserModule","withServerTransition","params","ngModule","providers","APP_ID","useValue","appId","SERVER_TRANSITION_PROVIDERS","NgModule","BROWSER_SANITIZATION_PROVIDERS","ErrorHandler","useFactory","errorHandler","deps","EVENT_MANAGER_PLUGINS","multi","RendererFactory2","useExisting","Testability","EventManager","ELEMENT_PROBE_PROVIDERS","Meta","AppComponent","showHeading","heroes","version","VERSION","full","console","log","toggleHeading","__decorate","Component","moduleId","module","selector","templateUrl","AppModule","imports","declarations","bootstrap","styles_AppComponent","RenderType_AppComponent","values","UNDEFINED_RENDERER_TYPE_ID","AppComponentNgFactory","import1.AppComponent","View_AppComponent_Host_0","AppModuleInjector","import4.AppComponentNgFactory","defineProperty","__LOCALE_ID_9","import0.ɵn","import0.LOCALE_ID","__NgLocalization_10","import2.NgLocaleLocalization","_LOCALE_ID_9","__Compiler_11","import0.Compiler","__APP_ID_12","import0.ɵg","__IterableDiffers_13","import0.ɵl","__KeyValueDiffers_14","import0.ɵm","__DomSanitizer_15","import3.ɵe","import3.DOCUMENT","__Sanitizer_16","_DomSanitizer_15","__HAMMER_GESTURE_CONFIG_17","import3.HammerGestureConfig","__EVENT_MANAGER_PLUGINS_18","import3.ɵDomEventsPlugin","import3.ɵKeyEventsPlugin","import3.ɵHammerGesturesPlugin","_HAMMER_GESTURE_CONFIG_17","__EventManager_19","import3.EventManager","_EVENT_MANAGER_PLUGINS_18","import0.NgZone","__ɵDomSharedStylesHost_20","import3.ɵDomSharedStylesHost","__ɵDomRendererFactory2_21","import3.ɵDomRendererFactory2","_EventManager_19","_ɵDomSharedStylesHost_20","__RendererFactory2_22","_ɵDomRendererFactory2_21","__ɵSharedStylesHost_23","__Testability_24","import0.Testability","__Meta_25","import3.Meta","__Title_26","import3.Title","createInternal","_CommonModule_0","import2.CommonModule","_ErrorHandler_1","import3.ɵa","_APP_INITIALIZER_2","import0.ɵo","import3.ɵc","import3.NgProbeToken","import0.NgProbeToken","_ApplicationInitStatus_3","import0.ApplicationInitStatus","_ɵf_4","import0.ɵf","import0.ɵConsole","componentFactoryResolver","_ApplicationRef_5","_ApplicationModule_6","import0.ApplicationModule","_BrowserModule_7","import3.BrowserModule","_AppModule_8","import1.AppModule","getInternal","token","notFoundResult","import0.ErrorHandler","import0.APP_INITIALIZER","import0.ApplicationRef","import2.NgLocalization","_NgLocalization_10","_Compiler_11","import0.APP_ID","_APP_ID_12","import0.IterableDiffers","_IterableDiffers_13","import0.KeyValueDiffers","_KeyValueDiffers_14","import3.DomSanitizer","import0.Sanitizer","_Sanitizer_16","import3.HAMMER_GESTURE_CONFIG","import3.EVENT_MANAGER_PLUGINS","import0.RendererFactory2","_RendererFactory2_22","import3.ɵSharedStylesHost","_ɵSharedStylesHost_23","_Testability_24","_Meta_25","_Title_26","destroyInternal","ngOnDestroy","import0.ɵNgModuleInjector","AppModuleNgFactory","import0.NgModuleFactory","bootstrapModuleFactory","NgSwitchDefault","viewContainer","templateRef","ngSwitch","_addDefault","SwitchView","Directive","ViewContainerRef","NgPlural","addCase","switchView","_caseViews","_updateView","_activateView","view","_activeView","NgLocalization","isANumber","isNaN","Number","ngPlural","template","NgPluralCase","TemplateRef","NgStyle","v","ngDoCheck","_differ","changes","diff","_ngStyle","_a","nameAndUnit","unit","_renderer","setElementStyle","_ngEl","nativeElement","KeyValueDiffers","ElementRef","NgTemplateOutlet","context","ngTemplateOutletContext","ngOnChanges","_viewRef","_viewContainerRef","remove","ngTemplateOutlet","createEmbeddedView","Input","COMMON_DIRECTIVES","NgClass","NgComponentOutlet","NgForOf","NgIf","NgSwitch","ObservableStrategy","dispose","subscription","unsubscribe","PromiseStrategy","AsyncPipe","_ref","_latestValue","_strategy","transform","obj","_obj","_dispose","_latestReturnedValue","_subscribe","_selectStrategy","ɵisPromise","_promiseStrategy","invalidPipeArgumentError","_subscription","_updateLatestValue","async","markForCheck","Pipe","pure","LowerCasePipe","TitleCasePipe","map","word","titleCaseWord","join","UpperCasePipe","toUpperCase","NumberFormatStyle","Decimal","Percent","NumberFormatter","format","num","locale","_b","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","currency","_c","currencyAsSymbol","options","Currency","currencyDisplay","DATE_FORMATS_SPLIT","PATTERN_ALIASES","yMMMdjms","datePartGetterFactory","combine","digitCondition","nameCondition","yMdjm","yMMMMEEEEd","yMMMMd","yMMMd","jms","jm","DATE_FORMATS","yyyy","yy","y","MMMM","MMM","MM","M","LLLL","L","dd","d","HH","digitModifier","hourExtractor","hour12Modify","H","hh","h","jj","ss","s","sss","EEEE","EEE","EE","a","z","timeZoneGetter","ww","w","DateFormatter","date","pattern","DecimalPipe","digits","formatNumber","_locale","PercentPipe","CurrencyPipe","currencyCode","symbolDisplay","DatePipe","isBlank","trim","isDate","val","parseInt","m","Date","match","isoStringToDate","_ALIASES","medium","short","fullDate","longDate","mediumDate","shortDate","mediumTime","I18nPluralPipe","pluralMap","getPluralCategory","keys","_localization","replace","I18nSelectPipe","mapping","JsonPipe","SlicePipe","start","end","COMMON_PIPES","CommonModule","exports","nodeContains","_DOM","DomAdapter","logGroup","error","templateAwareRoot","resolveAndSetHref","baseUrl","href","supportsDOMEvents","getHistory","getBaseHref","resetBaseElement","setGlobalVar","supportsWebAnimation","performanceNow","getAnimationPrefix","getTransitionEnd","supportsAnimation","GenericBrowserDomAdapter","_animationPrefix","_transitionEnd","element_1","getStyle","domPrefixes","transEndEventNames_1","WebkitTransition","MozTransition","OTransition","transition","_attrToPropMap","class","readonly","_keyMap","\b","\t","","\u001b","Del","Esc","Left","Right","Up","Win","_chromeNumKeyPadMap","A","B","C","D","E","F","G","I","J","K","N","global","`","","ɵglobal","urlParsingNode","BrowserDomAdapter","invoke","methodName","apply","logError","window","onAndCancel","evt","listener","dispatchEvent","getInnerHTML","innerHTML","getOuterHTML","outerHTML","content","hasProperty","parentElement","childNodes","childNodesAsList","res","Array","replaceChild","newChild","oldChild","setInnerHTML","setText","textContent","setValue","setChecked","checked","text","getShadowRoot","getHost","Map","elAttrs","attributes","isTemplateElement","getBoundingClientRect","elementMatches","n","HTMLElement","matches","nodeType","Node","TEXT_NODE","isCommentNode","COMMENT_NODE","ELEMENT_NODE","isShadowRoot","DocumentFragment","importIntoDoc","importNode","adoptNode","getHref","keyIdentifier","fromCharCode","substring","location","getLocation","relativePath","path","setValueOnPath","getTime","supportsCookies","setCookie","baseElement","BrowserPlatformLocation","_history","getBaseHrefFromDOM","fn","_location","hash","pushState","state","title","url","supportsState","replaceState","PlatformLocation","addTags","tags","forceCreation","reduce","result","tag","getTags","attrSelector","updateTag","_parseSelector","meta","getTag","removeTag","removeTagElement","elem","_containsAttributes","_dom","every","getAttribute","APP_INITIALIZER","TRANSITION_ID","BrowserGetTestability","init","setTestabilityGetter","addToWindow","registry","findInAncestors","testability","findTestabilityInTree","getAllTestabilities","getAllRootElements","whenAllStable","testabilities","count","didWork","decrement","didWork_","whenStable","t","getTestability","Title","CORE_TOKENS","NgProbeToken$1","_createNgProbe","Optional","plugins","_zone","_findPluginFor","plugin","_eventNameToPlugin","_plugins","plugin_1","NgZone","record","_changesHead","_nextChanged","stringify","_additionsHead","_nextAdded","_removalsHead","_nextRemoved","removals","items","DefaultKeyValueDiffer","_forEach","KeyValueChangeRecord_","previousValue","_prevRemoved","looseIdentical","currentValue","IterableDiffers","factories","copied","slice","concat","find","iterable","factory","f","kv","keyValDiff","DefaultKeyValueDifferFactory","_CORE_PLATFORM_PROVIDERS","PLATFORM_ID","PlatformRef_","PlatformRef","Services","setCurrentNode","createRootView","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","updateDirectives","_tokenKeyCache","EMPTY_RENDERER_TYPE_ID","_renderCompCount","VIEW_DEFINITION_CACHE","WeakMap","NS_PREFIX_RE","ComponentFactory_","componentType","viewDefFactory","_inputs","_outputs","ngContentSelectors","inputsArr","propName","outputsArr","injector","projectableNodes","rootSelectorOrNode","viewDef","resolveViewDefinition","componentNodeIndex","nodes","componentProvider","EMPTY_CONTEXT","asProviderData","instance","ComponentRef_","_view","_component","_elDef","def","asElementData","renderElement","destroy","_data","_embeddedViews","ViewContainerRef_","Injector_","elDef","clear","len","ref","ViewRef_","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","ComponentFactoryBoundToModule","NgModuleRef","insert","viewRef","viewRef_","detach","_appRef","reattach","onDestroy","disposables","detachView","attachToAppRef","appRef","attachToViewContainerRef","vcRef","TemplateRef_","_parentView","_def","notFoundValue","Injector","THROW_IF_NOT_FOUND","RendererAdapter","namespaceAndName","splitNamespace","ns","delegate","createViewRoot","hostElement","createTemplateAnchor","comment","createText","attachViewAfter","viewRootNodes","setElementAttribute","attributeValue","setElementClass","className","isAdd","addClass","styleName","styleValue","renderNode$$1","RendererV1TokenKey","tokenKey","Renderer","Renderer2TokenKey","Renderer2","ElementRefTokenKey","ViewAction","CreateViewNodes","CheckNoChanges","CheckAndUpdate","initialized","DebugAction","detectChanges","checkNoChanges","handleEvent","CAMEL_CASE_REGEXP","DebugContext_","nodeIndex","nodeDef","elView","viewParentEl","componentView","elOrCompView","tokens","childCount","childDef","provider","references","collectReferences","elData","_i","arguments","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","nodeLogger","bind","NOOP","DebugRendererFactory2","DebugRenderer2","destroyNode","debugCtx","getCurrentDebugContext","debugEl","DebugElement","appendChild","getDebugNode","debugChildEl","insertBefore","refChild","debugRefEl","removeChild","removeClass","removeStyle","ApplicationModule","ApplicationRef_","ApplicationRef","ApplicationInitStatus","Compiler","APP_ID_RANDOM_PROVIDER","_iterableDiffersFactory","_keyValueDiffersFactory","LOCALE_ID","_localeFactory","SkipSelf","forward","LocationStrategy","queryParams","onPopState","Location","platformStrategy","_subject","EventEmitter","_platformStrategy","browserBaseHref","_baseHref","stripTrailingSlash","_stripIndexHtml","ev","emit","prepareExternalUrl","joinWithSlash","slashes","endsWith","startsWith","HashLocationStrategy","_platformLocation","onHashChange","includeHash","normalizeQueryParams","PathLocationStrategy","externalUrl","NgLocaleLocalization","getPluralCase","Plural","Zero","One","Two","Few","Many","Other","_iterableDiffers","_keyValueDiffers","_cleanupClasses","_rawClass","_iterableDiffer","_keyValueDiffer","ɵisListLikeIterable","iterableChanges","_applyIterableChanges","keyValueChanges","_applyKeyValueChanges","forEachAddedItem","_toggleClass","forEachChangedItem","forEachRemovedItem","item","_applyClasses","rawClassVal","isCleanup","isArray","klass","enabled","propDecorators","_componentRef","ngComponentOutlet","elInjector","ngComponentOutletInjector","_moduleRef","ngComponentOutletNgModuleFactory","parentModule","NgForOfContext","$implicit","ngForOf","_viewContainer","_template","_differs","_trackByFn","isDevMode","warn","JSON","ngForTrackBy","e","_applyChanges","insertTuples","forEachOperation","adjustedPreviousIndex","currentIndex","previousIndex","tuple","RecordViewTuple","move","_perViewChange","ilen","_context","NgIfContext","_thenTemplateRef","_thenViewRef","_elseViewRef","_elseTemplateRef","ngIfElse","_created","_templateRef","enforceState","created","newValue","_matchCase","matched","_ngSwitch","_lastCasesMatched","_lastCaseCheckIndex","_caseCount","_updateDefaultCases","useDefault","_defaultViews","_defaultUsed","NgSwitchCase","Host","forkInnerZoneWithAngularBehavior","isInAngularZone","Zone","outer","run","_onStable","_onErrorEvents","_hasPendingMacrotasks","checkStable","_nesting","_hasPendingMicrotasks","_isStable","_onMicrotaskEmpty","inner","fork","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","source","onHasTask","hasTaskState","hasTask","change","setHasMicrotask","microTask","setHasMacrotask","macroTask","onHandleError","handleError","hasMacrotasks","_ngZone","_didWork","_watchAngularEvents","onUnstable","subscribe","_isZoneStable","onStable","assertNotInAngularZone","scheduleMicroTask","_runCallbacksIfReady","_pendingCount","decreasePendingRequestCount","isStable","_callbacks","findProviders","using","exactMatch","TestabilityRegistry","_testabilityGetter","_NoopGetTestability","NgProbeToken","_injector","_destroyed","_bootstrapModuleFactoryWithZone","moduleFactory","ngZone","enableLongStackTrace","ngZoneInjector","ReflectiveInjector","resolveAndCreate","moduleRef","exceptionHandler","_modules","onError","_callAndReportToErrorHandler","donePromise","then","_moduleDoBootstrap","_bootstrapModuleWithZone","moduleType","compilerOptions","bootstrapFactories","ngDoBootstrap","_console","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_rootComponents","_rootComponentTypes","_views","_runningTick","_enforceNoNewChanges","_stable","onMicrotaskEmpty","tick","isCurrentlyStable","Observable","observer","hasPendingMacrotasks","hasPendingMicrotasks","complete","stableSub","unstableSub","assertInAngularZone","componentOrFactory","done","ComponentFactory","resolveComponentFactory","compRef","NULL","_unloadComponent","registerApplication","_loadComponent","componentRef","attachView","hostView","scope","_tickScope","Console","QueryList","_emitter","_results","some","_dirty","notifyOnChanges","setDirty","SystemJsNgModuleLoaderConfig","SystemJsNgModuleLoader","loadAndCompile","exportName","loadFactory","factoryClassSuffix","System","import","factoryPathPrefix","factoryPathSuffix","checkNotEmpty","ViewRef","EventListener","EmbeddedViewRef","DebugNode","nativeNode","_debugContext","addChild","listeners","child","childIndex","insertChildrenAfter","newChildren","siblingIndex","c","refIndex","triggerEventHandler","WrappedValue","wrap","SimpleChange","DefaultIterableDifferFactory","DefaultIterableDiffer","_length","_collection","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsTail","_movesHead","_movesTail","trackByIdentity","forEachItem","addRemoveOffset","moveOffsets","nextIt","nextRemove","adjPreviousIndex","getPreviousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","forEachMovedItem","forEachIdentityChange","collection","isListLikeIterable","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_next","iterateListLike","isDirty","nextRecord","_nextPrevious","_nextMoved","_mismatch","previousRecord","_prev","_moveAfter","_reinsertAfter","reinsertRecord","_truncate","_addToRemovals","_unlink","_removalsTail","prevRecord","prev","_addAfter","_insertAfter","_DuplicateMap","_addToMoves","toIndex","_identityChangesTail","_identityChangesHead","list","previous","moves","identityChanges","IterableChangeRecord_","_nextIdentityChange","_DuplicateItemRecordList","_head","_tail","_nextDup","afterIndex","_prevDup","put","duplicates","cd","_records","_mapHead","_previousMapHead","_changesTail","records","oldSeqRecord","lastOldSeqRecord","lastNewSeqRecord","seqChanged","newSeqRecord","_maybeAddToChanges","_removeFromSeq","_addToAdditions","_isInRemovals","_removeFromRemovals","lastRecord","rec","_addToChanges","err","SafeSubscriber","__tryOrSetError","syncErrorValue","syncErrorThrown","_unsubscribe","_parentSubscriber","Subscriber","toSubscriber","getSymbolObservable","root_1","root","_isScalar","lift","operator","observable","observerOrNext","sink","toSubscriber_1","_trySubscribe","syncErrorThrowable","PromiseCtor","Rx","config","Promise","resolve","reject","subscriber","observable_1","$$observable","ScalarObservable","scheduler","dispatch","closed","schedule","Observable_1","EmptyObservable","arg","isScheduler","ArrayObservable","array","of","isScheduler_1","ScalarObservable_1","EmptyObservable_1","OuterSubscriber","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","destination","notifyError","notifyComplete","Subscriber_1","x","isPromise","symbolIteratorPonyfill","InnerSubscriber","_error","_complete","subscribeToResult","mergeAll","MergeAllOperator","concurrent","MergeAllSubscriber","hasCompleted","buffer","active","subscribeToResult_1","OuterSubscriber_1","mergeStatic","merge_1","ObjectUnsubscribedError","stack","message","SubjectSubscription","subject","observers","isStopped","subscriberIndex","Subscription_1","Subscription","SubjectSubscriber","Subject","hasError","thrownError","rxSubscriber_1","$$rxSubscriber","AnonymousSubject","ObjectUnsubscribedError_1","copy","EMPTY","SubjectSubscription_1","asObservable","ConnectableObservable","subjectFactory","_refCount","getSubject","connect","connection","_connection","ConnectableSubscriber","refCount","RefCountOperator","writable","connectable","Subject_1","refCounter","RefCountSubscriber","sharedConnection","multicast","MulticastOperator","share","OpaqueToken","_desc","desc","__window","_global","__global","__self","_symbolIterator","Reflect","ChangeDetectionStrategy","makePropDecorator","first","descendants","read","Query","OnPush","Default","makeDecorator","inputs","outputs","exportAs","viewProviders","changeDetection","queries","styleUrls","schemas","Version","_NullInjector","_THROW_IF_NOT_FOUND","ERROR_LOGGER","deprecatedParameter","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","getOriginalError","ReflectiveKey","_globalKeyRegistry","resolveForwardRef","numberOfKeys","KeyRegistry","_allKeys","newKey","Type","Function","DELEGATE_CTOR","ReflectionCapabilities","_zipTypesAndAnnotations","paramTypes","paramAnnotations","exec","parameters","parentCtor","tsickleCtorParams","ctorParam","convertTsickleDecoratorIntoMetadata","_reflect","getOwnMetadata","isType","getParentCtor","_ownParameters","_ownAnnotations","typeOrFunc","annotations","_ownPropMetadata","propMetadata","propDecorators_1","propMetadata_1","prop","parentPropMetadata_1","ownPropMetadata","getter","Reflector","updateCapabilities","caps","reflectionCapabilities","setter","method","importUri","resolveEnum","identifier","ReflectorReader","ReflectiveDependency","fromKey","multiProvider","ResolvedReflectiveFactory","dependencies","ReflectiveInjector_","_providers","_parent","_constructionCounter","keyIds","objs","_getByKey","getProviderAtIndex","_new","_instantiateProvider","_getMaxNumberOfObjects","resolvedFactories","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","addKey","visibility","INJECTOR_KEY","Self","_getByKeySelf","_getObjByKeyId","keyId","UNDEFINED","_throwOrNull","_getByKeyDefault","inj","inj_","appInits","_done","asyncInitPromises","initResult","PLATFORM_INITIALIZER","APP_BOOTSTRAP_LISTENER","getNgContentSelectors","_throwError","ComponentRef","ERROR_COMPONENT","_NullComponentFactoryResolver","trace","events","CodegenComponentFactoryResolver","_ngModule","_factories","NgModuleFactory","_moduleType","_injectorClass","NgModuleInjector","_destroyListeners","_cmpFactoryResolver","ComponentFactoryResolver","constructor","wtf","generatorOrNext","schedulerFn","errorFn","completeFn","__isAsync","setTimeout","_onUnstable","assertZonePatched","renderHost","prefix","parentEl","getParentRenderElement","checkAndUpdateTextInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","changed","bindings","bindLen","checkAndUpdateBinding","_addInterpolationPart","binding","updateRenderer","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","lastRenderRootNode","newParent","childFlags","childMatchedQueries","bindingIndex","outputIndex","currentRenderParent","renderParent","publicProviders","allProviders","validateNode","matchedQueryIds","nodeMatchedQueries","directChildFlags","isPrivateService","isComponent","nodeFlags","rootNodeFlags","nodeCount","query","parentEnd","anchorDef$$1","createView","parentNodeDef","outputCount","viewContainerParent","createViewNodes","isComponentView","hostDef","nodeData","compViewDef","rendererType","componentRendererType","compRenderer","rendererFactory","listenToElementOutputs","createTemplateData","createViewContainerData","createProviderInstance","createPipeInstance","createDirectiveInstance","initView","createPureExpression","createQuery","appendNgContent","execEmbeddedViewsAction","execQueriesAction","callLifecycleHooksChildrenFirst","execComponentViewsAction","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateElementInline","checkAndUpdateDirectiveInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","bindingStart","oldValues","checkNoChangesNode","checkNoChangesNodeInline","checkBindingNoChanges","checkNoChangesQuery","Destroy","destroyViewNodes","asTextData","renderText","action","embeddedViews","callViewAction","viewState","queryFlags","staticDynamicQueryFlag","checkType","checkAndUpdateQuery","initServicesIfNeeded","services","createDebugServices","createProdServices","dirtyParentQueries","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","createRootData","Sanitizer","callWithDebugContext","debugUpdateDirectives","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","debugUpdateRenderer","debugCheckRenderNodeFn","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","nonMinifiedName","normalizeDebugBindingValue","attr","viewDef$$1","findHostElement","self","oldAction","_currentAction","oldView","_currentView","oldNodeIndex","_currentNodeIndex","isViewDebugError","defaultIterableDiffers","cases","ngLocalization","nLike","nDecimal","Math","floor","abs","hour","hour12","timeZoneName","timezone","dateFormatter","cacheKey","DATE_FORMATTER_CACHE","pipe","isNumeric","minInt","minFraction","maxFraction","_NUMBER_FORMAT_REGEXP","parseIntAutoRadix","tzHour","tzMin","dateSetter","setUTCFullYear","setFullYear","timeSetter","setUTCHours","setHours","toInt","getBaseElementHref","parseCookieValue","cookieStr","encodeURIComponent","cookie","eqIndex","cookieName","cookieValue","bootstrapListenerFactory","transitionId","dom","querySelectorAll","filter","extraTokens","coreTokens","compId","COMPONENT_REGEX","eventHandler","preventDefault","nameKind","SAFE_URL_PATTERN","srcset","getInertElement","inertElement","templateEl","createHtmlDocument","html","sets","sets_1","nextNode","encodeEntities","SURROGATE_PAIR_REGEXP","charCodeAt","stripCustomNsAttrs","_","containerEl","unsafeHtml","unsafeHtmlInput","mXSSAttempts","parsedHtml","defaultDoc","documentMode","sanitizer","safeHtml","getTemplateContent","hasBalancedQuotes","outsideSingle","outsideDouble","charAt","urlMatch","URL_RE","SAFE_STYLE_VALUE","View_AppComponent_1","l","import0.ɵvid","import0.ɵeld","import0.ɵted","View_AppComponent_2","ck","View_AppComponent_0","en","$event","ad","co","import0.ɵand","import0.ɵdid","import2.NgIf","import0.ViewContainerRef","import0.TemplateRef","ngIf","import2.NgForOf","tryCatchTarget","isFunction","isObject","tryCatch","UnsubscriptionError","errors","_parents","_subscriptions","hasErrors","isFunction_1","trial","tryCatch_1","errorObject_1","errorObject","UnsubscriptionError_1","flattenUnsubscriptionErrors","isArray_1","sub","isObject_1","teardown","_addParent","tmp","subscriptions","subscriptionIndex","empty","Symbol","for","destinationOrNext","Observer_1","_unsubscribeAndRecycle","__tryOrUnsub","tryCatcher","errs","nextOrObserver","iterator","Set_1","Map_1","getOwnPropertyNames","outerSubscriber","InnerSubscriber_1","isArrayLike_1","isArrayLike","isPromise_1","iterator_1","$$iterator","obs","TypeError","msg","POSITIVE_INFINITY","observables","last","ArrayObservable_1","mergeAll_1","subjectOrSubjectFactory","ConnectableObservable_1","connectableObservableDescriptor","shareSubjectFactory","multicast_1","getSymbolIterator","overriddenName","extractAnnotation","annotation","applyParams","fnOrArray","annoLength","paramsAnnotations","ii","j","Class","clsDef","proto","extends","defineMetadata","constructorName","DecoratorFactory","objOrType","metaCtor","annotationInstance","chainAnnotation","TypeDecorator","cls","chainFn","makeMetadataCtor","props","parentClass","argVal","ParamDecoratorFactory","ParamDecorator","unusedKey","PropDecoratorFactory","decoratorInstance","unshift","__forward_ref__","forwardRef","wrappedError","findFirstClosedCycle","constructResolvingPath","reverse","injectionError","constructResolvingMessage","injectors","noProviderError","instantiationError","originalException","originalStack","noAnnotationError","signature","parameter","decoratorInvocations","decoratorInvocation","decoratorType","ctor","parentProto","getPrototypeOf","resolveReflectiveFactory","factoryFn","resolvedDeps","reflector","_dependenciesFor","aliasInstance","constructDependencies","resolveReflectiveProviders","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","mixingMultiProvidersWithRegularProvidersError","resolvedProvider","ResolvedReflectiveProvider_","_normalizeProviders","b","_extractToken","metadata","optional","_createDependency","paramMetadata","_mapProviders","merge$1","m1","m2","k","noComponentFactoryError","createPlatform","_platform","destroyed","ALLOW_MULTIPLE_PLATFORMS","parentPlatformFactory","marker","extraProviders","platform","getPlatform","assertPlatform","requiredToken","catch","flatten","flatItem","modulePath","_queryElementChildren","predicate","_queryNodeChildren","_nativeNodeToDebugNode","devModeEqual","isListLikeIterableA","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","isJsObject","comparator","iterator1","iterator2","item1","item2","moveOffset","_reflector","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewWrappedDebugError","resolveRendererType2","isFilled","None","checkBinding","bindingIdx","markParentViewsForCheck","currView","declaredViewContainer","renderNode","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","queryId","valueType","filterQueryId","visitRootRenderNodes","visitSiblingRenderNodes","startIndex","endIndex","visitRenderNode","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","ngContent","rn","bindingFlags","execRenderNodeAction","calcBindingFlags","anchorDef","templateFactory","attrs","elementDef","fixedAttrs","bindingDefs","namespaceAndName_1","suffixOrSecurityContext","_d","ns_1","name_1","securityContext","suffix","outputDefs","_e","output","handleEventClosure","renderEventHandlerClosure","elementEventFullName","listenTarget","listenerView","checkAndUpdateElementValue","renderValue","attachEmbeddedView","parentView","elementData","viewIndex","addToArray","dvcElementData","projectedViews","_projectedViews","detachEmbeddedView","removeFromArray","moveEmbeddedView","oldViewIndex","newViewIndex","prevRenderNode","prevView","arr","directiveDef","depDefs","allowPrivateServices","createClass","eventHandlerClosure","providerData","directive","updateProp","ngOnInit","_createProviderInstance","injectable","providerDef","callFactory","depValues","depDef","startView","tokenKey$$1","findCompView","createRendererV1","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","createChangeDetectorRef","InjectorRefTokenKey","createInjector","providerDef_1","NOT_CREATED","wrapped","lifecycles","callProviderLifecycles","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","checkAndUpdatePureExpressionInline","asPureExpressionData","queryIds","isEmbeddedView","tplDef","filterId","asQueryList","queryList","dirty","directiveInstance","newValues","elementDef_1","calcQueryValues","reset","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","textDef","constants"],"mappings":"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"}